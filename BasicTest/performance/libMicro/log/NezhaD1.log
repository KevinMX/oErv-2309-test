

Welcome to 6.1.0-0.rc3.11.oe2303.riscv64

System information as of time:  Sun Apr 30 04:42:46 PM CST 2023

System load:    0.08
Processes:      82
Memory used:    8.3%
Swap used:      0.0%
Usage On:       5%
IP address:     10.0.0.124
Users online:   1
To run a command as administrator(user "root"),use "sudo <command>".
[openeuler@openeuler-riscv64 ~]$ wget https://codeload.github.com/redhat-performance/libMicro/zip/0.4.0-rh
unzip 0.4.0-rh
cd libMicro-0.4.0-rh
make CFLAGS=-static CC=${CROSS_COMPILE}gcc ARCH=${ARCH} -j$(nproc)
sh bench.sh
--2023-04-30 16:42:31--  https://codeload.github.com/redhat-performance/libMicro/zip/0.4.0-rh
Resolving codeload.github.com (codeload.github.com)... 20.27.177.114, ::
Connecting to codeload.github.com (codeload.github.com)|20.27.177.114|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [application/zip]
Saving to: ‘0.4.0-rh’

0.4.0-rh                                                       [ <=>
                                    ] 146.19K  --.-KB/s    in 0.09s

2023-04-30 16:42:33 (1.57 MB/s) - ‘0.4.0-rh’ saved [149694]

Archive:  0.4.0-rh
c62703b09900791046bc17d5b027336fa5e49ef1
   creating: libMicro-0.4.0-rh/
  inflating: libMicro-0.4.0-rh/.gitignore
  inflating: libMicro-0.4.0-rh/Makefile
  inflating: libMicro-0.4.0-rh/Makefile.Aix
  inflating: libMicro-0.4.0-rh/Makefile.Linux
  inflating: libMicro-0.4.0-rh/Makefile.SunOS
  inflating: libMicro-0.4.0-rh/Makefile.benchmarks
  inflating: libMicro-0.4.0-rh/Makefile.com
  inflating: libMicro-0.4.0-rh/OPENSOLARIS.LICENSE
  inflating: libMicro-0.4.0-rh/README
  inflating: libMicro-0.4.0-rh/atomic.c
  inflating: libMicro-0.4.0-rh/bench.sh
  inflating: libMicro-0.4.0-rh/benchmark_fini.c
  inflating: libMicro-0.4.0-rh/benchmark_finibatch.c
  inflating: libMicro-0.4.0-rh/benchmark_finirun.c
  inflating: libMicro-0.4.0-rh/benchmark_finiworker.c
  inflating: libMicro-0.4.0-rh/benchmark_init.c
  inflating: libMicro-0.4.0-rh/benchmark_initbatch.c
  inflating: libMicro-0.4.0-rh/benchmark_initrun.c
  inflating: libMicro-0.4.0-rh/benchmark_initworker.c
  inflating: libMicro-0.4.0-rh/benchmark_optswitch.c
  inflating: libMicro-0.4.0-rh/benchmark_result.c
  inflating: libMicro-0.4.0-rh/bind.c
  inflating: libMicro-0.4.0-rh/cachetocache.c
  inflating: libMicro-0.4.0-rh/cascade_cond.c
  inflating: libMicro-0.4.0-rh/cascade_fcntl.c
  inflating: libMicro-0.4.0-rh/cascade_flock.c
  inflating: libMicro-0.4.0-rh/cascade_lockf.c
  inflating: libMicro-0.4.0-rh/cascade_mutex.c
  inflating: libMicro-0.4.0-rh/chdir.c
  inflating: libMicro-0.4.0-rh/close.c
  inflating: libMicro-0.4.0-rh/close_tcp.c
  inflating: libMicro-0.4.0-rh/connection.c
  inflating: libMicro-0.4.0-rh/dup.c
  inflating: libMicro-0.4.0-rh/elided.c
  inflating: libMicro-0.4.0-rh/exec.c
  inflating: libMicro-0.4.0-rh/exec_bin.c
  inflating: libMicro-0.4.0-rh/exit.c
  inflating: libMicro-0.4.0-rh/exp.c
  inflating: libMicro-0.4.0-rh/fcntl.c
  inflating: libMicro-0.4.0-rh/fcntl_ndelay.c
  inflating: libMicro-0.4.0-rh/file_lock.c
  inflating: libMicro-0.4.0-rh/fork.c
  inflating: libMicro-0.4.0-rh/getcontext.c
  inflating: libMicro-0.4.0-rh/getenv.c
  inflating: libMicro-0.4.0-rh/getpeername.c
  inflating: libMicro-0.4.0-rh/getpid.c
  inflating: libMicro-0.4.0-rh/getrusage.c
  inflating: libMicro-0.4.0-rh/getsockname.c
  inflating: libMicro-0.4.0-rh/gettimeofday.c
  inflating: libMicro-0.4.0-rh/isatty.c
  inflating: libMicro-0.4.0-rh/libmicro.c
  inflating: libMicro-0.4.0-rh/libmicro.h
  inflating: libMicro-0.4.0-rh/libmicro_main.c
  inflating: libMicro-0.4.0-rh/listen.c
  inflating: libMicro-0.4.0-rh/localtime_r.c
  inflating: libMicro-0.4.0-rh/log.c
  inflating: libMicro-0.4.0-rh/longjmp.c
  inflating: libMicro-0.4.0-rh/lrand48.c
  inflating: libMicro-0.4.0-rh/lseek.c
  inflating: libMicro-0.4.0-rh/malloc.c
  inflating: libMicro-0.4.0-rh/memcpy.c
  inflating: libMicro-0.4.0-rh/memmove.c
  inflating: libMicro-0.4.0-rh/memrand.c
  inflating: libMicro-0.4.0-rh/memset.c
  inflating: libMicro-0.4.0-rh/mk_tarball
  inflating: libMicro-0.4.0-rh/mktime.c
  inflating: libMicro-0.4.0-rh/mmap.c
  inflating: libMicro-0.4.0-rh/mprotect.c
  inflating: libMicro-0.4.0-rh/msync.c
  inflating: libMicro-0.4.0-rh/multiview.sh
  inflating: libMicro-0.4.0-rh/munmap.c
  inflating: libMicro-0.4.0-rh/mutex.c
  inflating: libMicro-0.4.0-rh/nop.c
  inflating: libMicro-0.4.0-rh/open.c
  inflating: libMicro-0.4.0-rh/pipe.c
  inflating: libMicro-0.4.0-rh/poll.c
  inflating: libMicro-0.4.0-rh/pread.c
  inflating: libMicro-0.4.0-rh/pthread_create.c
  inflating: libMicro-0.4.0-rh/pwrite.c
  inflating: libMicro-0.4.0-rh/read.c
  inflating: libMicro-0.4.0-rh/realpath.c
  inflating: libMicro-0.4.0-rh/recurse.c
  inflating: libMicro-0.4.0-rh/recurse2.c
  inflating: libMicro-0.4.0-rh/select.c
  inflating: libMicro-0.4.0-rh/semop.c
  inflating: libMicro-0.4.0-rh/setcontext.c
  inflating: libMicro-0.4.0-rh/setsockopt.c
  inflating: libMicro-0.4.0-rh/sigaction.c
  inflating: libMicro-0.4.0-rh/siglongjmp.c
  inflating: libMicro-0.4.0-rh/signal.c
  inflating: libMicro-0.4.0-rh/sigprocmask.c
  inflating: libMicro-0.4.0-rh/socket.c
  inflating: libMicro-0.4.0-rh/socketpair.c
  inflating: libMicro-0.4.0-rh/stat.c
  inflating: libMicro-0.4.0-rh/strcasecmp.c
  inflating: libMicro-0.4.0-rh/strchr.c
  inflating: libMicro-0.4.0-rh/strcmp.c
  inflating: libMicro-0.4.0-rh/strcpy.c
  inflating: libMicro-0.4.0-rh/strftime.c
  inflating: libMicro-0.4.0-rh/strlen.c
  inflating: libMicro-0.4.0-rh/strtol.c
  inflating: libMicro-0.4.0-rh/system.c
  inflating: libMicro-0.4.0-rh/tattle.c
  inflating: libMicro-0.4.0-rh/time.c
  inflating: libMicro-0.4.0-rh/times.c
  inflating: libMicro-0.4.0-rh/wrapper.sh
  inflating: libMicro-0.4.0-rh/write.c
  inflating: libMicro-0.4.0-rh/writev.c
cp wrapper.sh wrapper
chmod +x wrapper
cp bench.sh bench
chmod +x bench
cp multiview.sh multiview
chmod +x multiview
make[1]: Entering directory '/home/openeuler/libMicro-0.4.0-rh/bin-riscv64'
gcc -o atomic ../elided.c
gcc -c -static -D_REENTRANT ../libmicro.c -o libmicro.o
gcc -c -static -D_REENTRANT ../libmicro_main.c -o libmicro_main.o
gcc -c -static -D_REENTRANT ../benchmark_init.c -o benchmark_init.o
gcc -c -static -D_REENTRANT ../benchmark_fini.c -o benchmark_fini.o
gcc -c -static -D_REENTRANT ../benchmark_initrun.c -o benchmark_initrun.o
gcc -c -static -D_REENTRANT ../benchmark_finirun.c -o benchmark_finirun.o
gcc -c -static -D_REENTRANT ../benchmark_initbatch.c -o benchmark_initbatch.o
gcc -c -static -D_REENTRANT ../benchmark_finibatch.c -o benchmark_finibatch.o
gcc -c -static -D_REENTRANT ../benchmark_initworker.c -o benchmark_initworker.o
gcc -c -static -D_REENTRANT ../benchmark_finiworker.c -o benchmark_finiworker.o
gcc -c -static -D_REENTRANT ../benchmark_optswitch.c -o benchmark_optswitch.o
gcc -c -static -D_REENTRANT ../benchmark_result.c -o benchmark_result.o
ar -cr libmicro.a libmicro.o libmicro_main.o benchmark_init.o benchmark_fini.o benchmark_initrun.o benchmark_finirun.o benchmark_initbatch.o benchmark_finibatch.o b
enchmark_initworker.o benchmark_finiworker.o benchmark_optswitch.o benchmark_result.o
gcc -c -static -D_REENTRANT ../bind.c -o bind.o
gcc -o bind bind.o  -static libmicro.a    -lpthread -lm
/usr/bin/ld: bind.o: in function `.L14':
bind.c:(.text+0x27c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for link
ing
gcc -o cachetocache ../elided.c
gcc -c -static -D_REENTRANT ../cascade_mutex.c -o cascade_mutex.o
gcc -o cascade_mutex cascade_mutex.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../cascade_cond.c -o cascade_cond.o
gcc -o cascade_cond cascade_cond.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../cascade_lockf.c -o cascade_lockf.o
gcc -o cascade_lockf cascade_lockf.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../cascade_fcntl.c -o cascade_fcntl.o
gcc -o cascade_fcntl cascade_fcntl.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../cascade_flock.c -o cascade_flock.o
../cascade_flock.c: In function ‘block’:
../cascade_flock.c:141:10: warning: implicit declaration of function ‘flock’; did you mean ‘block’? [-Wimplicit-function-declaration]
  141 |  return (flock(files[index], LOCK_EX) == -1);
      |          ^~~~~
      |          block
gcc -o cascade_flock cascade_flock.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../chdir.c -o chdir.o
gcc -o chdir chdir.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../close.c -o close.o
gcc -o close close.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../close_tcp.c -o close_tcp.o
gcc -o close_tcp close_tcp.o  -static libmicro.a    -lpthread -lm
/usr/bin/ld: close_tcp.o: in function `.L12':
close_tcp.c:(.text+0x2d8): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for
 linking
gcc -c -static -D_REENTRANT ../connection.c -o connection.o
gcc -o connection connection.o  -static libmicro.a    -lpthread -lm
/usr/bin/ld: connection.o: in function `.L20':
connection.c:(.text+0x394): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used fo
r linking
gcc -c -static -D_REENTRANT ../dup.c -o dup.o
gcc -o dup dup.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../exec_bin.c -o exec_bin.o
gcc -o exec_bin -static exec_bin.o
gcc -c -static -D_REENTRANT ../exec.c -o exec.o
gcc -o exec exec.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../exit.c -o exit.o
gcc -o exit exit.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../exp.c -o exp.o
gcc -o exp exp.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../fcntl.c -o fcntl.o
gcc -o fcntl fcntl.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../fcntl_ndelay.c -o fcntl_ndelay.o
gcc -o fcntl_ndelay fcntl_ndelay.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../file_lock.c -o file_lock.o
gcc -o file_lock file_lock.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../fork.c -o fork.o
gcc -o fork fork.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../getcontext.c -o getcontext.o
gcc -o getcontext getcontext.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../getenv.c -o getenv.o
gcc -o getenv getenv.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../gettimeofday.c -o gettimeofday.o
gcc -o gettimeofday gettimeofday.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../getpeername.c -o getpeername.o
gcc -o getpeername getpeername.o  -static libmicro.a    -lpthread -lm
/usr/bin/ld: getpeername.o: in function `.L5':
getpeername.c:(.text+0xfc): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used fo
r linking
gcc -c -static -D_REENTRANT ../getpid.c -o getpid.o
gcc -o getpid getpid.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../getrusage.c -o getrusage.o
gcc -o getrusage getrusage.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../getsockname.c -o getsockname.o
gcc -o getsockname getsockname.o  -static libmicro.a    -lpthread -lm
/usr/bin/ld: getsockname.o: in function `.L5':
getsockname.c:(.text+0x10c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used f
or linking
gcc -c -static -D_REENTRANT ../isatty.c -o isatty.o
gcc -o isatty isatty.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../listen.c -o listen.o
gcc -o listen listen.o  -static libmicro.a    -lpthread -lm
/usr/bin/ld: listen.o: in function `.L5':
listen.c:(.text+0x10c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for li
nking
gcc -c -static -D_REENTRANT ../localtime_r.c -o localtime_r.o
gcc -o localtime_r localtime_r.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../log.c -o log.o
gcc -o log log.o  -static libmicro.a -lm  -lpthread -lm
gcc -c -static -D_REENTRANT ../longjmp.c -o longjmp.o
gcc -o longjmp longjmp.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../lrand48.c -o lrand48.o
gcc -o lrand48 lrand48.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../lseek.c -o lseek.o
gcc -o lseek lseek.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../malloc.c -o malloc.o
gcc -o malloc malloc.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../memcpy.c -o memcpy.o
gcc -o memcpy memcpy.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../memmove.c -o memmove.o
gcc -o memmove memmove.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../memrand.c -o memrand.o
gcc -o memrand memrand.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../memset.c -o memset.o
gcc -o memset memset.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../mktime.c -o mktime.o
gcc -o mktime mktime.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../mprotect.c -o mprotect.o
../mprotect.c: In function ‘benchmark_optswitch’:
../mprotect.c:90:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   90 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
gcc -o mprotect mprotect.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../mmap.c -o mmap.o
../mmap.c: In function ‘benchmark_optswitch’:
../mmap.c:86:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   86 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
gcc -o mmap mmap.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../msync.c -o msync.o
gcc -o msync msync.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../munmap.c -o munmap.o
../munmap.c: In function ‘benchmark_optswitch’:
../munmap.c:86:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   86 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
gcc -o munmap munmap.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../mutex.c -o mutex.o
gcc -o mutex mutex.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../nop.c -o nop.o
gcc -o nop nop.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../open.c -o open.o
gcc -o open open.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../pipe.c -o pipe.o
gcc -o pipe pipe.o  -static libmicro.a    -lpthread -lm
/usr/bin/ld: pipe.o: in function `.L64':
pipe.c:(.text+0xa88): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for link
ing
gcc -c -static -D_REENTRANT ../poll.c -o poll.o
gcc -o poll poll.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../pread.c -o pread.o
gcc -o pread pread.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../pthread_create.c -o pthread_create.o
gcc -o pthread_create pthread_create.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../pwrite.c -o pwrite.o
gcc -o pwrite pwrite.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../read.c -o read.o
gcc -o read read.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../realpath.c -o realpath.o
gcc -o realpath realpath.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../recurse2.c -o recurse2.o
gcc -c -static -D_REENTRANT ../recurse.c -o recurse.o
gcc -o recurse recurse.o recurse2.o -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../select.c -o select.o
gcc -o select select.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../semop.c -o semop.o
gcc -o semop semop.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../setcontext.c -o setcontext.o
gcc -o setcontext setcontext.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../setsockopt.c -o setsockopt.o
gcc -o setsockopt setsockopt.o  -static libmicro.a    -lpthread -lm
gcc -c -static -D_REENTRANT ../sigaction.c -o sigaction.o
gcc -o sigaction sigaction.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../siglongjmp.c -o siglongjmp.o
gcc -o siglongjmp siglongjmp.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../signal.c -o signal.o
gcc -o signal signal.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../sigprocmask.c -o sigprocmask.o
gcc -o sigprocmask sigprocmask.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../socket.c -o socket.o
gcc -o socket socket.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../socketpair.c -o socketpair.o
gcc -o socketpair socketpair.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../stat.c -o stat.o
gcc -o stat stat.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../strcasecmp.c -o strcasecmp.o
gcc -o strcasecmp strcasecmp.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../strchr.c -o strchr.o
gcc -o strchr strchr.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../strcmp.c -o strcmp.o
gcc -o strcmp strcmp.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../strcpy.c -o strcpy.o
gcc -o strcpy strcpy.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../strftime.c -o strftime.o
gcc -o strftime strftime.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../strlen.c -o strlen.o
gcc -o strlen strlen.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../strtol.c -o strtol.o
gcc -o strtol strtol.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../system.c -o system.o
gcc -o system system.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../time.c -o time.o
gcc -o time time.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../times.c -o times.o
gcc -o times times.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../write.c -o write.o
gcc -o write write.o  -static libmicro.a   -lpthread -lm
gcc -c -static -D_REENTRANT ../writev.c -o writev.o
gcc -o writev writev.o  -static libmicro.a   -lpthread -lm
echo "char * compiler_version = \""`gcc -dumpversion`"\";" > tattle.h
echo "char * CC = \""gcc"\";" >> tattle.h
echo "char * extra_compiler_flags = \"""\";" >> tattle.h
gcc -o tattle -static -I. ../tattle.c libmicro.a -lpthread -lrt -lm
rm siglongjmp.o pread.o getsockname.o cascade_fcntl.o cascade_flock.o file_lock.o mmap.o cascade_lockf.o strcasecmp.o munmap.o setcontext.o writev.o recurse.o longj
mp.o pwrite.o setsockopt.o chdir.o exp.o getcontext.o time.o strftime.o connection.o cascade_cond.o sigprocmask.o times.o exit.o msync.o strcmp.o mprotect.o fcntl_n
delay.o socket.o select.o localtime_r.o memset.o gettimeofday.o exec.o realpath.o strcpy.o pipe.o mktime.o memrand.o system.o strtol.o close.o getpeername.o lseek.o
 listen.o isatty.o memcpy.o poll.o bind.o write.o memmove.o read.o close_tcp.o open.o socketpair.o log.o malloc.o nop.o cascade_mutex.o signal.o sigaction.o fcntl.o
 getpid.o dup.o mutex.o strlen.o pthread_create.o strchr.o getenv.o semop.o stat.o fork.o lrand48.o getrusage.o
make[1]: Leaving directory '/home/openeuler/libMicro-0.4.0-rh/bin-riscv64'
egrep: warning: egrep is obsolescent; using grep -E
!Libmicro_#:                            0.4.0
!Options:                  -E -C 200 -L -S -W
!Machine_name:              openeuler-riscv64
!OS_name:                               Linux
!OS_release:    6.1.0-0.rc3.11.oe2303.riscv64
!OS_build:                 #1 PREEMPT Fri Mar
!Processor:                           riscv64
!#CPUs:                                     1
!CPU_MHz:
!CPU_NAME:
!IP_address:          240e:388:9f21:a400::e68
!IP_address:              fd6f:6852:d3f4::35e
!IP_address:              fd6f:6852:d3f4::e68
!IP_address:          240e:388:9f21:a400::35e
!Run_by:                            openeuler
!Date:                         04/30/23 16:46
!Compiler:                                gcc
!Compiler Ver.:                        10.3.1
!sizeof(long):                              8
!extra_CFLAGS:                         [none]
!TimerRes:                         1000 nsecs
#
# Obligatory null system call: use very short time
# for default since SuSe implements this "syscall" in userland
#
Running:              getpid# bin/getpid -E -C 200 -L -S -W -N getpid -I 1
             prc thr   usecs/call      samples   errors cnt/samp
getpid         1   1      0.35642          198        0   100000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.34878                 0.34878
#                    max      0.40800                 0.36755
#                   mean      0.35757                 0.35692
#                 median      0.35644                 0.35642
#                 stddev      0.00614                 0.00368
#         standard error      0.00043                 0.00026
#   99% confidence level      0.00100                 0.00061
#                   skew      4.27465                 0.50960
#               kurtosis     28.27987                -0.11871
#       time correlation      0.00000                 0.00000
#
#           elasped time      7.22551
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                188      0.00000 |********************************     0.35648
#
#                 10        > 95% |*                                    0.36516
#
#        mean of 95%      0.35648
#          95th %ile      0.36397
 for      7.24110 seconds

Running:              getenv# bin/getenv -E -C 200 -L -S -W -N getenv -s 100 -I 50
             prc thr   usecs/call      samples   errors cnt/samp
getenv         1   1      0.90792          198        0     2000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.90190                 0.90190
#                    max      1.01544                 0.93800
#                   mean      0.91392                 0.91250
#                 median      0.90830                 0.90792
#                 stddev      0.01417                 0.00951
#         standard error      0.00100                 0.00068
#   99% confidence level      0.00232                 0.00157
#                   skew      3.35066                 0.64026
#               kurtosis     18.38509                -0.83845
#       time correlation     -0.00004                -0.00001
#
#           elasped time      0.37131
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                188      0.00000 |********************************     0.91143
#
#                 10        > 95% |*                                    0.93257
#
#        mean of 95%      0.91143
#          95th %ile      0.92994
 for      0.39240 seconds
Running:            getenvT2# bin/getenv -E -C 200 -L -S -W -N getenvT2 -s 100 -I 50 -T 2
             prc thr   usecs/call      samples   errors cnt/samp
getenvT2       1   2      1.85230          197        0     2000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.82581                 1.82581
#                    max      2.20981                 1.88046
#                   mean      1.85553                 1.85170
#                 median      1.85243                 1.85230
#                 stddev      0.03112                 0.00979
#         standard error      0.00219                 0.00070
#   99% confidence level      0.00509                 0.00162
#                   skew      8.27146                -0.60409
#               kurtosis     84.76412                 1.18590
#       time correlation     -0.00005                 0.00002
#
#           elasped time      0.77218
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      1.00000 |********************************     1.85071
#
#                 10        > 95% |*                                    1.87029
#
#        mean of 95%      1.85071
#          95th %ile      1.86536
 for      0.78475 seconds

Running:        gettimeofday# bin/gettimeofday -E -C 200 -L -S -W -N gettimeofday
             prc thr   usecs/call      samples   errors cnt/samp
gettimeofday   1   1      0.20114          199        0    20000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.19498                 0.19498
#                    max      0.23258                 0.20849
#                   mean      0.20188                 0.20161
#                 median      0.20119                 0.20114
#                 stddev      0.00365                 0.00270
#         standard error      0.00026                 0.00019
#   99% confidence level      0.00060                 0.00044
#                   skew      3.14837                -0.06992
#               kurtosis     23.74248                -0.36024
#       time correlation     -0.00002                -0.00002
#
#           elasped time      0.81797
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                189      0.00000 |********************************     0.20135
#
#                 10        > 95% |*                                    0.20643
#
#        mean of 95%      0.20135
#          95th %ile      0.20574
 for      0.84368 seconds

Running:                 log# bin/log -E -C 200 -L -S -W -N log -I 20
             prc thr   usecs/call      samples   errors cnt/samp
log            1   1      0.08694          175        0     5000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.08694                 0.08694
#                    max      0.18259                 0.08720
#                   mean      0.08857                 0.08702
#                 median      0.08700                 0.08694
#                 stddev      0.00770                 0.00010
#         standard error      0.00054                 0.00001
#   99% confidence level      0.00126                 0.00002
#                   skew      9.72772                 0.65273
#               kurtosis    110.00444                -1.39933
#       time correlation      0.00000                -0.00000
#
#           elasped time      0.09166
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                166      0.00000 |********************************     0.08701
#
#                  9        > 95% |*                                    0.08720
#
#        mean of 95%      0.08701
#          95th %ile      0.08720
 for      0.11197 seconds
Running:                 exp# bin/exp -E -C 200 -L -S -W -N exp -I 10
             prc thr   usecs/call      samples   errors cnt/samp
exp            1   1      0.08208          187        0    10000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.08197                 0.08197
#                    max      0.14938                 0.08407
#                   mean      0.08340                 0.08233
#                 median      0.08208                 0.08208
#                 stddev      0.00652                 0.00063
#         standard error      0.00046                 0.00005
#   99% confidence level      0.00107                 0.00011
#                   skew      8.48347                 1.78693
#               kurtosis     76.93861                 1.28863
#       time correlation      0.00000                -0.00000
#
#           elasped time      0.17055
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                177      0.00000 |********************************     0.08225
#
#                 10        > 95% |*                                    0.08386
#
#        mean of 95%      0.08225
#          95th %ile      0.08377
 for      0.19077 seconds
Running:             lrand48# bin/lrand48 -E -C 200 -L -S -W -N lrand48
             prc thr   usecs/call      samples   errors cnt/samp
lrand48        1   1      0.07268          191        0    10000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.07255                 0.07255
#                    max      0.09636                 0.07488
#                   mean      0.07331                 0.07294
#                 median      0.07268                 0.07268
#                 stddev      0.00228                 0.00065
#         standard error      0.00016                 0.00005
#   99% confidence level      0.00037                 0.00011
#                   skew      7.09403                 1.95590
#               kurtosis     60.29751                 2.05488
#       time correlation     -0.00001                -0.00000
#
#           elasped time      0.15015
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      0.00000 |********************************     0.07284
#
#                 10        > 95% |*                                    0.07466
#
#        mean of 95%      0.07284
#          95th %ile      0.07458
 for      0.17098 seconds

Running:           memset_10# bin/memset -E -C 200 -L -S -W -N memset_10 -s 10 -I 3
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10      1   1      0.05221          192        0    33333       10          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.05218                 0.05218
#                    max      0.05854                 0.05336
#                   mean      0.05258                 0.05246
#                 median      0.05221                 0.05221
#                 stddev      0.00075                 0.00031
#         standard error      0.00005                 0.00002
#   99% confidence level      0.00012                 0.00005
#                   skew      5.16174                 0.54319
#               kurtosis     34.68523                -1.29033
#       time correlation     -0.00000                 0.00000
#
#           elasped time      0.35651
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.05242
#
#                 10        > 95% |*                                    0.05305
#
#        mean of 95%      0.05242
#          95th %ile      0.05294
 for      0.37653 seconds
Running:          memset_256# bin/memset -E -C 200 -L -S -W -N memset_256 -s 256 -I 10
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_256     1   1      0.08310          187        0    10000      256          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.08287                 0.08287
#                    max      0.13018                 0.08535
#                   mean      0.08411                 0.08345
#                 median      0.08318                 0.08310
#                 stddev      0.00382                 0.00074
#         standard error      0.00027                 0.00005
#   99% confidence level      0.00062                 0.00013
#                   skew      9.27590                 1.62529
#               kurtosis    103.90135                 0.72741
#       time correlation     -0.00001                 0.00000
#
#           elasped time      0.17215
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                177      0.00000 |********************************     0.08335
#
#                 10        > 95% |*                                    0.08513
#
#        mean of 95%      0.08335
#          95th %ile      0.08507
 for      0.19316 seconds
Running:        memset_256_u# bin/memset -E -C 200 -L -S -W -N memset_256_u -s 256 -a 1 -I 10
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_256_u   1   1      0.14329          197        0    10000      256           1
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.14316                 0.14316
#                    max      0.16167                 0.14638
#                   mean      0.14413                 0.14395
#                 median      0.14329                 0.14329
#                 stddev      0.00170                 0.00094
#         standard error      0.00012                 0.00007
#   99% confidence level      0.00028                 0.00016
#                   skew      5.98680                 0.73722
#               kurtosis     55.31650                -1.22104
#       time correlation     -0.00000                 0.00000
#
#           elasped time      0.29351
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          231
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      0.00000 |********************************     0.14385
#
#                 10        > 95% |*                                    0.14576
#
#        mean of 95%      0.14385
#          95th %ile      0.14528
 for      0.30794 seconds
Running:           memset_1k# bin/memset -E -C 200 -L -S -W -N memset_1k -s 1k -I 12
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_1k      1   1      0.20619          191        0     8333     1024          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.20607                 0.20607
#                    max      0.26654                 0.21077
#                   mean      0.20805                 0.20712
#                 median      0.20622                 0.20619
#                 stddev      0.00540                 0.00122
#         standard error      0.00038                 0.00009
#   99% confidence level      0.00088                 0.00020
#                   skew      7.50532                 0.50308
#               kurtosis     70.06188                -1.34062
#       time correlation     -0.00002                -0.00000
#
#           elasped time      0.35283
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          148
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      0.00000 |********************************     0.20700
#
#                 10        > 95% |*                                    0.20936
#
#        mean of 95%      0.20700
#          95th %ile      0.20871
 for      0.37733 seconds
Running:           memset_4k# bin/memset -E -C 200 -L -S -W -N memset_4k -s 4k -I 62
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_4k      1   1      0.67953          191        0     1612     4096          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.67874                 0.67874
#                    max      0.98878                 0.69865
#                   mean      0.68642                 0.68253
#                 median      0.67953                 0.67953
#                 stddev      0.02523                 0.00557
#         standard error      0.00178                 0.00040
#   99% confidence level      0.00413                 0.00094
#                   skew      9.22850                 1.20736
#               kurtosis    101.97066                -0.28886
#       time correlation      0.00000                 0.00000
#
#           elasped time      0.22708
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      0.00000 |********************************     0.68188
#
#                 10        > 95% |*                                    0.69438
#
#        mean of 95%      0.68188
#          95th %ile      0.69185
 for      0.24638 seconds
Running:        memset_4k_uc# bin/memset -E -C 200 -L -S -W -N memset_4k_uc -s 4k -u -I 100
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_4k_uc   1   1      1.72982          197        0     1000     4096          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.72572                 1.72572
#                    max      1.97071                 1.76975
#                   mean      1.74017                 1.73807
#                 median      1.72982                 1.72982
#                 stddev      0.02102                 0.01160
#         standard error      0.00148                 0.00083
#   99% confidence level      0.00344                 0.00192
#                   skew      6.71984                 0.41285
#               kurtosis     69.21525                -1.50661
#       time correlation     -0.00004                -0.00001
#
#           elasped time      1.97299
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      1.00000 |********************************     1.73699
#
#                 10        > 95% |*                                    1.75829
#
#        mean of 95%      1.73699
#          95th %ile      1.75286
 for      1.99579 seconds

Running:          memset_10k# bin/memset -E -C 200 -L -S -W -N memset_10k -s 10k -I 150
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10k     1   1      1.63234          195        0      666    10240          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.63081                 1.63081
#                    max      1.98768                 1.68774
#                   mean      1.64655                 1.64183
#                 median      1.63272                 1.63234
#                 stddev      0.03508                 0.01658
#         standard error      0.00247                 0.00119
#   99% confidence level      0.00574                 0.00276
#                   skew      5.90923                 1.11926
#               kurtosis     48.25684                -0.57178
#       time correlation     -0.00009                 0.00001
#
#           elasped time      0.22539
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      1.00000 |********************************     1.63997
#
#                 10        > 95% |*                                    1.67612
#
#        mean of 95%      1.63997
#          95th %ile      1.66978
 for      0.23941 seconds
Running:           memset_1m# bin/memset -E -C 200 -L -S -W -N memset_1m -s 1m -I 200000
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_1m      1   1    361.75710          180        0        1  1048576          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    357.89150               358.78750
#                    max    424.09310               364.36830
#                   mean    362.54373               361.72354
#                 median    361.78270               361.75710
#                 stddev      5.44436                 0.98359
#         standard error      0.38306                 0.07331
#   99% confidence level      0.89101                 0.17053
#                   skew      8.23039                -0.50063
#               kurtosis     82.64306                 1.10454
#       time correlation     -0.01140                -0.00347
#
#           elasped time      0.76674
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5    358.00000 |**                                 358.88478
#                  5    359.00000 |**                                 359.51966
#                 20    360.00000 |********                           360.73182
#                 79    361.00000 |********************************   361.48068
#                 59    362.00000 |***********************            362.45047
#                  3    363.00000 |*                                  363.10537
#
#                  9        > 95% |***                                363.63443
#
#        mean of 95%    361.62296
#          95th %ile    363.16510
 for      0.79337 seconds
Running:          memset_10m# bin/memset -E -C 200 -L -S -W -N memset_10m -s 10m -I 2000000
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10m     1   1   3514.26850          180        0        1 10485760          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   3508.09890              3508.09890
#                    max   3921.97410              3524.68770
#                   mean   3526.72797              3515.01858
#                 median   3514.67810              3514.26850
#                 stddev     49.22221                 3.45799
#         standard error      3.46326                 0.25774
#   99% confidence level      8.05555                 0.59951
#                   skew      5.15187                 0.67668
#               kurtosis     29.31017                -0.08772
#       time correlation      0.05408                 0.00843
#
#           elasped time      7.37930
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4   3508.00000 |***                               3508.60450
#                  1   3509.00000 |*                                 3509.68610
#                 12   3510.00000 |***********                       3510.57997
#                 17   3511.00000 |****************                  3511.58502
#                 16   3512.00000 |***************                   3512.69410
#                 34   3513.00000 |********************************  3513.38982
#                 25   3514.00000 |***********************           3514.50300
#                 15   3515.00000 |**************                    3515.54167
#                 12   3516.00000 |***********                       3516.51063
#                  7   3517.00000 |******                            3517.56359
#                  6   3518.00000 |*****                             3518.51383
#                 10   3519.00000 |*********                         3519.36290
#                 10   3520.00000 |*********                         3520.45858
#                  2   3521.00000 |*                                 3521.38530
#
#                  9        > 95% |********                          3523.12610
#
#        mean of 95%   3514.59187
#          95th %ile   3521.66690
 for      7.41881 seconds
Running:        memsetP2_10m# bin/memset -E -C 200 -L -S -W -N memsetP2_10m -s 10m -P 2 -I 2000000
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memsetP2_10m   2   1   7060.78970          173        0        1 10485760          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   7049.16730              7049.16730
#                    max   8210.48570              7082.88250
#                   mean   7107.42770              7062.57992
#                 median   7062.17210              7060.78970
#                 stddev    147.18410                 7.07661
#         standard error     10.35584                 0.53802
#   99% confidence level     24.08768                 1.25145
#                   skew      4.10982                 0.96512
#               kurtosis     19.94995                 0.52526
#       time correlation      0.45627                 0.01495
#
#           elasped time     14.88101
#      number of samples          173
#     number of outliers           29
#      getnsecs overhead          231
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   7049.00000 |*                                 7049.16730
#                  2   7050.00000 |***                               7050.57530
#                  1   7051.00000 |*                                 7051.77850
#                  1   7052.00000 |*                                 7052.87930
#                  3   7053.00000 |*****                             7053.33157
#                  9   7054.00000 |****************                  7054.35272
#                  3   7055.00000 |*****                             7055.71237
#                 17   7056.00000 |********************************  7056.52956
#                 11   7057.00000 |********************              7057.49428
#                 12   7058.00000 |**********************            7058.50917
#                 15   7059.00000 |****************************      7059.54383
#                 13   7060.00000 |************************          7060.48447
#                 11   7061.00000 |********************              7061.49486
#                  9   7062.00000 |****************                  7062.44517
#                  6   7063.00000 |***********                       7063.47770
#                  7   7064.00000 |*************                     7064.52730
#                  9   7065.00000 |****************                  7065.42614
#                  8   7066.00000 |***************                   7066.60410
#                  4   7067.00000 |*******                           7067.40090
#                  5   7068.00000 |*********                         7068.34682
#                  1   7069.00000 |*                                 7069.87770
#                  3   7070.00000 |*****                             7070.79077
#                  4   7071.00000 |*******                           7071.42650
#                  0   7072.00000 |                                           -
#                  2   7073.00000 |***                               7073.52570
#                  1   7074.00000 |*                                 7074.86970
#                  1   7075.00000 |*                                 7075.07450
#                  0   7076.00000 |                                           -
#                  5   7077.00000 |*********                         7077.39898
#
#                  9        > 95% |****************                  7080.45334
#
#        mean of 95%   7061.59907
#          95th %ile   7078.19770
 for     14.92234 seconds

Running:             memrand# bin/memrand -E -C 200 -L -S -W -N memrand -s 128m -B 10000
             prc thr   usecs/call      samples   errors cnt/samp     size
memrand        1   1      0.15698          200        0    10000 134217728
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.15685                 0.15685
#                    max      0.16428                 0.16116
#                   mean      0.15789                 0.15783
#                 median      0.15698                 0.15698
#                 stddev      0.00132                 0.00118
#         standard error      0.00009                 0.00008
#   99% confidence level      0.00022                 0.00019
#                   skew      1.26403                 0.61762
#               kurtosis      2.30002                -1.28885
#       time correlation      0.00000                -0.00000
#
#           elasped time      1.33621
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      0.00000 |********************************     0.15772
#
#                 10        > 95% |*                                    0.16009
#
#        mean of 95%      0.15772
#          95th %ile      0.15936
 for      1.34672 seconds
#
# benchmark cachetocache not compiled/supported on this platform
#

Running:          isatty_yes# bin/isatty -E -C 200 -L -S -W -N isatty_yes
             prc thr   usecs/call      samples   errors cnt/samp
isatty_yes     1   1      2.26039          182        0    20000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.80895                 2.21955
#                    max      2.52525                 2.31854
#                   mean      2.25465                 2.26707
#                 median      2.25974                 2.26039
#                 stddev      0.09168                 0.01867
#         standard error      0.00645                 0.00138
#   99% confidence level      0.01500                 0.00322
#                   skew     -2.80917                 1.11888
#               kurtosis     12.33099                 0.56256
#       time correlation     -0.00006                 0.00003
#
#           elasped time      9.11144
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          213
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                172      2.00000 |********************************     2.26429
#
#                 10        > 95% |*                                    2.31499
#
#        mean of 95%      2.26429
#          95th %ile      2.30984
 for      9.13864 seconds
Running:           isatty_no# bin/isatty -E -C 200 -L -S -W -N isatty_no -f /tmp/libmicro.8008/ifile
             prc thr   usecs/call      samples   errors cnt/samp
isatty_no      1   1      1.03954          202        0    20000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.61043                 0.61043
#                    max      1.19438                 1.19438
#                   mean      0.96323                 0.96323
#                 median      1.03954                 1.03954
#                 stddev      0.12136                 0.12136
#         standard error      0.00854                 0.00854
#   99% confidence level      0.01986                 0.01986
#                   skew     -0.94302                -0.94302
#               kurtosis     -0.59247                -0.59247
#       time correlation     -0.00124                -0.00124
#
#           elasped time      3.89401
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          237
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 69      0.00000 |******************                   0.80726
#                122      1.00000 |********************************     1.04158
#
#                 11        > 95% |**                                   1.07270
#
#        mean of 95%      0.95693
#          95th %ile      1.05709
 for      3.92930 seconds

Running:           malloc_10# bin/malloc -E -C 200 -L -S -W -N malloc_10 -s 10 -g 10 -I 50
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_10      1   1      0.26404          192        0     2000     10 10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.26219                 0.26219
#                    max      0.29114                 0.26628
#                   mean      0.26435                 0.26393
#                 median      0.26409                 0.26404
#                 stddev      0.00256                 0.00080
#         standard error      0.00018                 0.00006
#   99% confidence level      0.00042                 0.00013
#                   skew      6.99732                 0.26031
#               kurtosis     62.74307                -0.32461
#       time correlation     -0.00001                -0.00001
#
#           elasped time      1.07057
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          201
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.26384
#
#                 10        > 95% |*                                    0.26562
#
#        mean of 95%      0.26384
#          95th %ile      0.26514
 for      1.09626 seconds
Running:          malloc_100# bin/malloc -E -C 200 -L -S -W -N malloc_100 -s 100 -g 10 -I 50
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_100     1   1      0.26323          192        0     2000     10 100
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.26244                 0.26244
#                    max      0.30010                 0.26549
#                   mean      0.26376                 0.26334
#                 median      0.26323                 0.26323
#                 stddev      0.00295                 0.00072
#         standard error      0.00021                 0.00005
#   99% confidence level      0.00048                 0.00012
#                   skew      9.69856                 0.90424
#               kurtosis    112.01388                 0.25151
#       time correlation     -0.00001                -0.00000
#
#           elasped time      1.06823
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          199
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.26325
#
#                 10        > 95% |*                                    0.26514
#
#        mean of 95%      0.26325
#          95th %ile      0.26459
 for      1.09128 seconds
Running:           malloc_1k# bin/malloc -E -C 200 -L -S -W -N malloc_1k -s 1k -g 10 -I 50
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_1k      1   1      0.31794          190        0     2000     10 1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.31634                 0.31634
#                    max      0.35094                 0.32239
#                   mean      0.31884                 0.31827
#                 median      0.31808                 0.31794
#                 stddev      0.00318                 0.00140
#         standard error      0.00022                 0.00010
#   99% confidence level      0.00052                 0.00024
#                   skew      5.83911                 1.07127
#               kurtosis     50.79115                 0.63513
#       time correlation     -0.00000                 0.00001
#
#           elasped time      1.29068
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          239
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      0.00000 |********************************     0.31807
#
#                 10        > 95% |*                                    0.32187
#
#        mean of 95%      0.31807
#          95th %ile      0.32154
 for      1.32506 seconds
Running:          malloc_10k# bin/malloc -E -C 200 -L -S -W -N malloc_10k -s 10k -g 10 -I 50
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_10k     1   1      0.51954          196        0     2000     10 10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.50805                 0.51144
#                    max      0.54593                 0.52804
#                   mean      0.52002                 0.51974
#                 median      0.51963                 0.51954
#                 stddev      0.00449                 0.00333
#         standard error      0.00032                 0.00024
#   99% confidence level      0.00073                 0.00055
#                   skew      1.60777                 0.09420
#               kurtosis      7.29405                -0.27399
#       time correlation     -0.00000                 0.00000
#
#           elasped time      2.10356
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          218
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      0.00000 |********************************     0.51937
#
#                 10        > 95% |*                                    0.52660
#
#        mean of 95%      0.51937
#          95th %ile      0.52539
 for      2.13218 seconds
Running:         malloc_100k# bin/malloc -E -C 200 -L -S -W -N malloc_100k -s 100k -g 10 -I 2000
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_100k    1   1     51.96553          194        0       50     10 102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     51.70748                51.70748
#                    max     54.98377                52.32137
#                   mean     52.01947                51.97022
#                 median     51.97168                51.96553
#                 stddev      0.32153                 0.12103
#         standard error      0.02262                 0.00869
#   99% confidence level      0.05262                 0.02021
#                   skew      6.12932                 0.40735
#               kurtosis     47.73245                 0.26613
#       time correlation     -0.00085                -0.00006
#
#           elasped time      5.25691
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                118     51.00000 |********************************    51.89407
#                 66     52.00000 |*****************                   52.06304
#
#                 10        > 95% |**                                  52.25604
#
#        mean of 95%     51.95468
#          95th %ile     52.19132
 for      5.27894 seconds

Running:         mallocT2_10# bin/malloc -E -C 200 -L -S -W -N mallocT2_10 -s 10 -g 10 -T 2 -I 200
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_10    1   2      0.56116          197        0      500     10 10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.55333                 0.55333
#                    max      0.66499                 0.57237
#                   mean      0.56121                 0.56024
#                 median      0.56131                 0.56116
#                 stddev      0.00909                 0.00415
#         standard error      0.00064                 0.00030
#   99% confidence level      0.00149                 0.00069
#                   skew      7.72933                -0.32498
#               kurtosis     83.03473                -0.71151
#       time correlation     -0.00000                -0.00000
#
#           elasped time      0.59647
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      0.00000 |********************************     0.55984
#
#                 10        > 95% |*                                    0.56777
#
#        mean of 95%      0.55984
#          95th %ile      0.56572
 for      0.63500 seconds
Running:        mallocT2_100# bin/malloc -E -C 200 -L -S -W -N mallocT2_100 -s 100 -g 10 -T 2 -I 200
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_100   1   2      0.56034          196        0      500     10 100
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.55276                 0.55276
#                    max      0.67380                 0.57135
#                   mean      0.56030                 0.55914
#                 median      0.56034                 0.56034
#                 stddev      0.01000                 0.00415
#         standard error      0.00070                 0.00030
#   99% confidence level      0.00164                 0.00069
#                   skew      7.89438                -0.14488
#               kurtosis     82.52485                -0.58989
#       time correlation     -0.00001                 0.00000
#
#           elasped time      0.59569
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          216
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      0.00000 |********************************     0.55869
#
#                 10        > 95% |*                                    0.56751
#
#        mean of 95%      0.55869
#          95th %ile      0.56474
 for      0.61824 seconds
Running:         mallocT2_1k# bin/malloc -E -C 200 -L -S -W -N mallocT2_1k -s 1k -g 10 -T 2 -I 200
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_1k    1   2      0.69193          191        0      500     10 1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.68256                 0.68256
#                    max      0.97153                 0.70114
#                   mean      0.69485                 0.69154
#                 median      0.69198                 0.69193
#                 stddev      0.02257                 0.00367
#         standard error      0.00159                 0.00027
#   99% confidence level      0.00369                 0.00062
#                   skew      9.85027                -0.70823
#               kurtosis    112.03310                 0.73492
#       time correlation     -0.00001                -0.00001
#
#           elasped time      0.73301
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          205
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      0.00000 |********************************     0.69116
#
#                 10        > 95% |*                                    0.69842
#
#        mean of 95%      0.69116
#          95th %ile      0.69654
 for      0.77800 seconds
Running:        mallocT2_10k# bin/malloc -E -C 200 -L -S -W -N mallocT2_10k -s 10k -g 10 -T 2 -I 200
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_10k   1   2      1.18636          196        0      500     10 10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.16214                 1.16214
#                    max      1.37114                 1.20817
#                   mean      1.18828                 1.18579
#                 median      1.18677                 1.18636
#                 stddev      0.01874                 0.00796
#         standard error      0.00132                 0.00057
#   99% confidence level      0.00307                 0.00132
#                   skew      6.13131                -0.17934
#               kurtosis     50.74638                 0.20735
#       time correlation     -0.00005                -0.00002
#
#           elasped time      1.21953
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      1.00000 |********************************     1.18491
#
#                 10        > 95% |*                                    1.20215
#
#        mean of 95%      1.18491
#          95th %ile      1.19855
 for      1.24330 seconds
Running:       mallocT2_100k# bin/malloc -E -C 200 -L -S -W -N mallocT2_100k -s 100k -g 10 -T 2 -I 10000
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_100k   1   2     85.28693          194        0       10     10 102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     84.78773                84.78773
#                    max     98.58869                86.18805
#                   mean     85.49362                85.34053
#                 median     85.30741                85.28693
#                 stddev      1.11629                 0.28465
#         standard error      0.07854                 0.02044
#   99% confidence level      0.18269                 0.04754
#                   skew      8.92006                 0.67780
#               kurtosis     95.07636                -0.21743
#       time correlation     -0.00085                 0.00159
#
#           elasped time      1.76168
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          203
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 18     84.00000 |***                                 84.95399
#                166     85.00000 |********************************    85.34323
#
#                 10        > 95% |*                                   85.99144
#
#        mean of 95%     85.30516
#          95th %ile     85.90645
 for      1.78059 seconds

Running:           close_bad# bin/close -E -C 200 -L -S -W -N close_bad -B 1800 -b
             prc thr   usecs/call      samples   errors cnt/samp
close_bad      1   1      1.10381          202        0     1800
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.92262                 0.92262
#                    max      1.43775                 1.43775
#                   mean      1.13447                 1.13447
#                 median      1.10381                 1.10381
#                 stddev      0.14917                 0.14917
#         standard error      0.01050                 0.01050
#   99% confidence level      0.02441                 0.02441
#                   skew      0.42162                 0.42162
#               kurtosis     -1.35935                -1.35935
#       time correlation     -0.00011                -0.00011
#
#           elasped time      0.42958
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          213
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 46      0.00000 |**********                           0.97309
#                145      1.00000 |********************************     1.16695
#
#                 11        > 95% |**                                   1.38127
#
#        mean of 95%      1.12026
#          95th %ile      1.36820
 for      0.45989 seconds
Running:           close_tmp# bin/close -E -C 200 -L -S -W -N close_tmp -B 640 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp
close_tmp      1   1      5.45126          200        0      640
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      4.94166                 5.04326
#                    max      7.45286                 5.87326
#                   mean      5.44935                 5.44187
#                 median      5.45126                 5.45126
#                 stddev      0.21198                 0.15448
#         standard error      0.01491                 0.01092
#   99% confidence level      0.03469                 0.02541
#                   skew      3.98555                -0.18448
#               kurtosis     37.48716                -0.11195
#       time correlation     -0.00007                 0.00015
#
#           elasped time      2.89292
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          216
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      5.00000 |********************************     5.42598
#
#                 10        > 95% |*                                    5.74394
#
#        mean of 95%      5.42598
#          95th %ile      5.69806
 for      2.91242 seconds
Running:           close_usr# bin/close -E -C 200 -L -S -W -N close_usr -B 640 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp
close_usr      1   1      6.37605          200        0      640
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      5.94165                 5.94165
#                    max      7.03725                 6.82165
#                   mean      6.36109                 6.35523
#                 median      6.37605                 6.37605
#                 stddev      0.17030                 0.16039
#         standard error      0.01198                 0.01134
#   99% confidence level      0.02787                 0.02638
#                   skew      0.34155                -0.00057
#               kurtosis      0.99913                 0.08861
#       time correlation      0.00049                 0.00048
#
#           elasped time      3.20142
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4      5.00000 |*                                    5.96595
#                186      6.00000 |********************************     6.34506
#
#                 10        > 95% |*                                    6.70013
#
#        mean of 95%      6.33708
#          95th %ile      6.62925
 for      3.21822 seconds
Running:          close_zero# bin/close -E -C 200 -L -S -W -N close_zero -B 640 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp
close_zero     1   1      6.20926          197        0      640
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      5.70766                 5.86206
#                    max      7.32006                 6.59486
#                   mean      6.22481                 6.21562
#                 median      6.21246                 6.20926
#                 stddev      0.16275                 0.13041
#         standard error      0.01145                 0.00929
#   99% confidence level      0.02664                 0.02161
#                   skew      1.47503                -0.01817
#               kurtosis      9.49808                 0.02819
#       time correlation      0.00004                 0.00019
#
#           elasped time      3.63787
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7      5.00000 |*                                    5.91686
#                180      6.00000 |********************************     6.21272
#
#                 10        > 95% |*                                    6.47694
#
#        mean of 95%      6.20165
#          95th %ile      6.42606
 for      3.66394 seconds

Running:           memcpy_10# bin/memcpy -E -C 200 -L -S -W -N memcpy_10 -s 10 -I 5
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10      1   1      0.09929          196        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.09919                 0.09919
#                    max      0.11025                 0.10160
#                   mean      0.10000                 0.09986
#                 median      0.10008                 0.09929
#                 stddev      0.00119                 0.00073
#         standard error      0.00008                 0.00005
#   99% confidence level      0.00019                 0.00012
#                   skew      4.24699                 0.64182
#               kurtosis     29.66851                -0.98490
#       time correlation     -0.00000                 0.00000
#
#           elasped time      0.40634
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      0.00000 |********************************     0.09979
#
#                 10        > 95% |*                                    0.10121
#
#        mean of 95%      0.09979
#          95th %ile      0.10113
 for      0.43635 seconds
Running:           memcpy_1k# bin/memcpy -E -C 200 -L -S -W -N memcpy_1k -s 1k -I 25
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_1k      1   1      0.55566          197        0     4000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.54466                 0.54466
#                    max      0.59797                 0.57365
#                   mean      0.55575                 0.55502
#                 median      0.55566                 0.55566
#                 stddev      0.00781                 0.00626
#         standard error      0.00055                 0.00045
#   99% confidence level      0.00128                 0.00104
#                   skew      1.30455                -0.18049
#               kurtosis      5.33260                -0.41822
#       time correlation     -0.00001                -0.00001
#
#           elasped time      0.45148
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          188
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      0.00000 |********************************     0.55441
#
#                 10        > 95% |*                                    0.56650
#
#        mean of 95%      0.55441
#          95th %ile      0.56296
 for      0.47420 seconds
Running:          memcpy_10k# bin/memcpy -E -C 200 -L -S -W -N memcpy_10k -s 10k -I 200
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10k     1   1      4.77139          195        0      500    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      4.68947                 4.68947
#                    max      7.71129                 4.84153
#                   mean      4.76477                 4.74299
#                 median      4.77139                 4.77139
#                 stddev      0.21731                 0.04201
#         standard error      0.01529                 0.00301
#   99% confidence level      0.03556                 0.00700
#                   skew     12.39061                -0.24270
#               kurtosis    164.44314                -1.68910
#       time correlation      0.00019                -0.00003
#
#           elasped time      0.48375
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      4.00000 |********************************     4.73970
#
#                 10        > 95% |*                                    4.80380
#
#        mean of 95%      4.73970
#          95th %ile      4.79136
 for      0.50990 seconds
Running:           memcpy_1m# bin/memcpy -E -C 200 -L -S -W -N memcpy_1m -s 1m -I 31250
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_1m      1   1    754.27367          196        0        3  1048576
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    740.19367               740.19367
#                    max   4107.19100               768.95100
#                   mean    767.61608               749.14235
#                 median    754.27367               754.27367
#                 stddev    236.79630                 7.17586
#         standard error     16.66093                 0.51256
#   99% confidence level     38.75332                 1.19222
#                   skew     13.88880                -0.10924
#               kurtosis    192.84793                -1.64920
#       time correlation     -0.46753                -0.00257
#
#           elasped time      0.46849
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 34    740.00000 |********************               740.75084
#                 52    741.00000 |******************************     741.48187
#                  0    742.00000 |                                           -
#                  0    743.00000 |                                           -
#                  0    744.00000 |                                           -
#                  0    745.00000 |                                           -
#                  0    746.00000 |                                           -
#                  0    747.00000 |                                           -
#                  0    748.00000 |                                           -
#                  0    749.00000 |                                           -
#                  0    750.00000 |                                           -
#                  0    751.00000 |                                           -
#                  0    752.00000 |                                           -
#                  7    753.00000 |****                               753.88357
#                 54    754.00000 |********************************   754.63396
#                 35    755.00000 |********************               755.46590
#                  3    756.00000 |*                                  756.23633
#                  1    757.00000 |*                                  757.26033
#
#                 10        > 95% |*****                              759.46193
#
#        mean of 95%    748.58753
#          95th %ile    757.26033
 for      0.50089 seconds
Running:          memcpy_10m# bin/memcpy -E -C 200 -L -S -W -N memcpy_10m -s 10m -I 5000000
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10m     1   1   7997.73400          184        0        1 10485760
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   7982.63000              7982.63000
#                    max  13592.61400              8014.88600
#                   mean   8035.19871              7997.37087
#                 median   7997.73400              7997.73400
#                 stddev    397.52997                 5.92032
#         standard error     27.97011                 0.43645
#   99% confidence level     65.05848                 1.01519
#                   skew     13.55331                 0.46022
#               kurtosis    186.13289                 0.33062
#       time correlation     -0.90720                 0.00075
#
#           elasped time      1.62927
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          218
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   7982.00000 |*                                 7982.63000
#                  0   7983.00000 |                                           -
#                  1   7984.00000 |*                                 7984.67800
#                  1   7985.00000 |*                                 7985.95800
#                  2   7986.00000 |***                               7986.72600
#                  4   7987.00000 |*******                           7987.75000
#                  3   7988.00000 |*****                             7988.77400
#                  5   7989.00000 |********                          7989.74680
#                  8   7990.00000 |**************                    7990.82200
#                 10   7991.00000 |*****************                 7991.74360
#                 15   7992.00000 |**************************        7992.76760
#                 11   7993.00000 |*******************               7993.80091
#                  7   7994.00000 |************                      7994.77171
#                 11   7995.00000 |*******************               7995.77909
#                 13   7996.00000 |***********************           7996.78877
#                 18   7997.00000 |********************************  7997.80511
#                 14   7998.00000 |************************          7998.75800
#                 10   7999.00000 |*****************                 7999.62840
#                  8   8000.00000 |**************                    8000.74200
#                  6   8001.00000 |**********                        8001.78733
#                  9   8002.00000 |****************                  8002.79711
#                  5   8003.00000 |********                          8003.82680
#                  5   8004.00000 |********                          8004.79960
#                  5   8005.00000 |********                          8005.82360
#                  2   8006.00000 |***                               8006.82200
#
#                 10        > 95% |*****************                 8011.37880
#
#        mean of 95%   7996.56582
#          95th %ile   8007.71800
 for      1.68972 seconds

Running:           strcpy_10# bin/strcpy -E -C 200 -L -S -W -N strcpy_10 -s 10 -I 5
             prc thr   usecs/call      samples   errors cnt/samp     size
strcpy_10      1   1      0.14330          192        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.14224                 0.14224
#                    max      0.17043                 0.14433
#                   mean      0.14339                 0.14306
#                 median      0.14334                 0.14330
#                 stddev      0.00231                 0.00051
#         standard error      0.00016                 0.00004
#   99% confidence level      0.00038                 0.00009
#                   skew      9.04100                -0.61053
#               kurtosis     95.42618                -0.83394
#       time correlation      0.00000                -0.00000
#
#           elasped time      0.58179
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.14302
#
#                 10        > 95% |*                                    0.14387
#
#        mean of 95%      0.14302
#          95th %ile      0.14358
 for      0.60201 seconds
Running:           strcpy_1k# bin/strcpy -E -C 200 -L -S -W -N strcpy_1k -s 1k -I 25
             prc thr   usecs/call      samples   errors cnt/samp     size
strcpy_1k      1   1      1.60244          179        0     4000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.59745                 1.59745
#                    max      1.81364                 1.60891
#                   mean      1.60656                 1.60213
#                 median      1.60270                 1.60244
#                 stddev      0.02122                 0.00233
#         standard error      0.00149                 0.00017
#   99% confidence level      0.00347                 0.00041
#                   skew      6.89756                 0.42928
#               kurtosis     54.45208                -0.35404
#       time correlation     -0.00002                 0.00000
#
#           elasped time      1.30069
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          209
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                170      1.00000 |********************************     1.60186
#
#                  9        > 95% |*                                    1.60738
#
#        mean of 95%      1.60186
#          95th %ile      1.60641
 for      1.33958 seconds

Running:           strlen_10# bin/strlen -E -C 200 -L -S -W -N strlen_10 -s 10 -I 5
             prc thr   usecs/call      samples   errors cnt/samp     size
strlen_10      1   1      0.05184          195        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.05178                 0.05178
#                    max      0.06365                 0.05334
#                   mean      0.05224                 0.05208
#                 median      0.05184                 0.05184
#                 stddev      0.00118                 0.00046
#         standard error      0.00008                 0.00003
#   99% confidence level      0.00019                 0.00008
#                   skew      6.73226                 1.26290
#               kurtosis     56.12968                -0.24503
#       time correlation     -0.00000                 0.00000
#
#           elasped time      0.21325
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          174
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      0.00000 |********************************     0.05202
#
#                 10        > 95% |*                                    0.05306
#
#        mean of 95%      0.05202
#          95th %ile      0.05289
 for      0.23205 seconds
Running:           strlen_1k# bin/strlen -E -C 200 -L -S -W -N strlen_1k -s 1k -I 100
             prc thr   usecs/call      samples   errors cnt/samp     size
strlen_1k      1   1      1.05471          185        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.05471                 1.05471
#                    max      1.55596                 1.08569
#                   mean      1.06776                 1.05968
#                 median      1.05497                 1.05471
#                 stddev      0.04223                 0.00877
#         standard error      0.00297                 0.00064
#   99% confidence level      0.00691                 0.00150
#                   skew      8.38239                 1.37195
#               kurtosis     87.91030                 0.09075
#       time correlation      0.00003                -0.00001
#
#           elasped time      0.21822
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          265
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                175      1.00000 |********************************     1.05859
#
#                 10        > 95% |*                                    1.07875
#
#        mean of 95%      1.05859
#          95th %ile      1.07570
 for      0.25881 seconds

Running:           strchr_10# bin/strchr -E -C 200 -L -S -W -N strchr_10 -s 10 -I 5
             prc thr   usecs/call      samples   errors cnt/samp     size
strchr_10      1   1      0.06223          192        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.06218                 0.06218
#                    max      0.07135                 0.06374
#                   mean      0.06268                 0.06250
#                 median      0.06223                 0.06223
#                 stddev      0.00108                 0.00047
#         standard error      0.00008                 0.00003
#   99% confidence level      0.00018                 0.00008
#                   skew      4.96704                 1.02070
#               kurtosis     31.87837                -0.76085
#       time correlation     -0.00000                 0.00000
#
#           elasped time      0.25544
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          260
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.06245
#
#                 10        > 95% |*                                    0.06347
#
#        mean of 95%      0.06245
#          95th %ile      0.06328
 for      0.28536 seconds
Running:           strchr_1k# bin/strchr -E -C 200 -L -S -W -N strchr_1k -s 1k -I 50
             prc thr   usecs/call      samples   errors cnt/samp     size
strchr_1k      1   1      1.45138          190        0     2000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.44089                 1.44089
#                    max      1.70034                 1.46239
#                   mean      1.45271                 1.44896
#                 median      1.45138                 1.45138
#                 stddev      0.02193                 0.00506
#         standard error      0.00154                 0.00037
#   99% confidence level      0.00359                 0.00085
#                   skew      8.06024                -0.58839
#               kurtosis     81.20463                -0.79179
#       time correlation     -0.00009                -0.00001
#
#           elasped time      0.58939
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          271
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      1.00000 |********************************     1.44850
#
#                 10        > 95% |*                                    1.45726
#
#        mean of 95%      1.44850
#          95th %ile      1.45484
 for      0.65436 seconds

Running:           strcmp_10# bin/strcmp -E -C 200 -L -S -W -N strcmp_10 -s 10 -I 3
             prc thr   usecs/call      samples   errors cnt/samp     size
strcmp_10      1   1      0.09311          186        0    33333       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.08795                 0.09251
#                    max      0.14555                 0.09374
#                   mean      0.09338                 0.09300
#                 median      0.09311                 0.09311
#                 stddev      0.00392                 0.00027
#         standard error      0.00028                 0.00002
#   99% confidence level      0.00064                 0.00005
#                   skew     11.85206                -0.73866
#               kurtosis    153.40796                -0.14368
#       time correlation      0.00000                -0.00000
#
#           elasped time      0.63117
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176      0.00000 |********************************     0.09297
#
#                 10        > 95% |*                                    0.09345
#
#        mean of 95%      0.09297
#          95th %ile      0.09326
 for      0.65631 seconds
Running:           strcmp_1k# bin/strcmp -E -C 200 -L -S -W -N strcmp_1k -s 1k -I 50
             prc thr   usecs/call      samples   errors cnt/samp     size
strcmp_1k      1   1      6.15437          168        0     2000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      6.15194                 6.15194
#                    max      6.44429                 6.16244
#                   mean      6.16224                 6.15523
#                 median      6.15437                 6.15437
#                 stddev      0.02595                 0.00245
#         standard error      0.00183                 0.00019
#   99% confidence level      0.00425                 0.00044
#                   skew      7.31731                 1.56625
#               kurtosis     69.41757                 1.20608
#       time correlation     -0.00005                -0.00000
#
#           elasped time      2.49217
#      number of samples          168
#     number of outliers           34
#      getnsecs overhead          247
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                159      6.00000 |********************************     6.15486
#
#                  9        > 95% |*                                    6.16182
#
#        mean of 95%      6.15486
#          95th %ile      6.16128
 for      2.53246 seconds

Running:         scasecmp_10# bin/strcasecmp -E -C 200 -L -S -W -N scasecmp_10 -s 10 -I 6
             prc thr   usecs/call      samples   errors cnt/samp     size
scasecmp_10    1   1      0.17242          190        0    16666       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.17117                 0.17117
#                    max      0.20225                 0.17356
#                   mean      0.17259                 0.17212
#                 median      0.17242                 0.17242
#                 stddev      0.00271                 0.00062
#         standard error      0.00019                 0.00005
#   99% confidence level      0.00044                 0.00011
#                   skew      7.63341                -0.50158
#               kurtosis     72.69099                -0.90155
#       time correlation     -0.00000                -0.00000
#
#           elasped time      0.58347
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          228
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      0.00000 |********************************     0.17206
#
#                 10        > 95% |*                                    0.17320
#
#        mean of 95%      0.17206
#          95th %ile      0.17296
 for      0.60481 seconds
Running:         scasecmp_1k# bin/strcasecmp -E -C 200 -L -S -W -N scasecmp_1k -s 1k -I 155
             prc thr   usecs/call      samples   errors cnt/samp     size
scasecmp_1k    1   1     13.40891          179        0      645     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.40574                13.40574
#                    max     15.01397                13.44146
#                   mean     13.44409                13.41345
#                 median     13.40891                13.40891
#                 stddev      0.15453                 0.00947
#         standard error      0.01087                 0.00071
#   99% confidence level      0.02529                 0.00165
#                   skew      7.22439                 1.45729
#               kurtosis     59.72221                 0.54201
#       time correlation     -0.00038                -0.00002
#
#           elasped time      1.75429
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          211
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                170     13.00000 |********************************    13.41224
#
#                  9        > 95% |*                                   13.43612
#
#        mean of 95%     13.41224
#          95th %ile     13.43352
 for      1.77523 seconds
Running:              strtol# bin/strtol -E -C 200 -L -S -W -N strtol -I 20
             prc thr   usecs/call      samples   errors cnt/samp
strtol         1   1      0.18798          160        0     5000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.18675                 0.18675
#                    max      0.24675                 0.19141
#                   mean      0.19104                 0.18823
#                 median      0.18798                 0.18798
#                 stddev      0.00755                 0.00106
#         standard error      0.00053                 0.00008
#   99% confidence level      0.00124                 0.00020
#                   skew      4.16606                 1.73867
#               kurtosis     22.95984                 2.30978
#       time correlation     -0.00004                 0.00000
#
#           elasped time      0.19506
#      number of samples          160
#     number of outliers           42
#      getnsecs overhead          149
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                152      0.00000 |********************************     0.18807
#
#                  8        > 95% |*                                    0.19125
#
#        mean of 95%      0.18807
#          95th %ile      0.19115
 for      0.22764 seconds

Running:          getcontext# bin/getcontext -E -C 200 -L -S -W -N getcontext -I 100
             prc thr   usecs/call      samples   errors cnt/samp
getcontext     1   1      0.55581          197        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.52970                 0.52970
#                    max      0.73476                 0.58474
#                   mean      0.55425                 0.55215
#                 median      0.55581                 0.55581
#                 stddev      0.01978                 0.01222
#         standard error      0.00139                 0.00087
#   99% confidence level      0.00324                 0.00202
#                   skew      4.43768                 0.03537
#               kurtosis     34.99421                -1.00097
#       time correlation     -0.00005                -0.00001
#
#           elasped time      0.11401
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      0.00000 |********************************     0.55085
#
#                 10        > 95% |*                                    0.57642
#
#        mean of 95%      0.55085
#          95th %ile      0.56989
 for      0.14278 seconds
Running:          setcontext# bin/setcontext -E -C 200 -L -S -W -N setcontext -I 100
             prc thr   usecs/call      samples   errors cnt/samp
setcontext     1   1      0.62288          193        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.60573                 0.60573
#                    max      0.79363                 0.64976
#                   mean      0.62649                 0.62363
#                 median      0.62365                 0.62288
#                 stddev      0.01866                 0.00963
#         standard error      0.00131                 0.00069
#   99% confidence level      0.00305                 0.00161
#                   skew      4.82972                 0.92143
#               kurtosis     35.04361                 0.46038
#       time correlation     -0.00003                -0.00000
#
#           elasped time      0.12864
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                183      0.00000 |********************************     0.62235
#
#                 10        > 95% |*                                    0.64704
#
#        mean of 95%      0.62235
#          95th %ile      0.64464
 for      0.15344 seconds

Running:            mutex_st# bin/mutex -E -C 200 -L -S -W -N mutex_st -I 10
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_st       1   1      0.10128          196        0    10000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.10118                 0.10118
#                    max      0.12268                 0.10509
#                   mean      0.10248                 0.10222
#                 median      0.10128                 0.10128
#                 stddev      0.00212                 0.00113
#         standard error      0.00015                 0.00008
#   99% confidence level      0.00035                 0.00019
#                   skew      5.18429                 0.46428
#               kurtosis     41.54604                -1.22093
#       time correlation     -0.00000                 0.00000
#
#           elasped time      0.20925
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      0.00000 |********************************     0.10209
#
#                 10        > 95% |*                                    0.10459
#
#        mean of 95%      0.10209
#          95th %ile      0.10397
 for      0.23963 seconds
Running:            mutex_mt# bin/mutex -E -C 200 -L -S -W -N mutex_mt -t -I 10
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_mt       1   1      0.12007          188        0    10000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.11996                 0.11996
#                    max      0.17037                 0.12337
#                   mean      0.12150                 0.12063
#                 median      0.12009                 0.12007
#                 stddev      0.00456                 0.00097
#         standard error      0.00032                 0.00007
#   99% confidence level      0.00075                 0.00017
#                   skew      7.25265                 1.15081
#               kurtosis     66.52064                -0.40125
#       time correlation     -0.00002                 0.00000
#
#           elasped time      0.24970
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                178      0.00000 |********************************     0.12051
#
#                 10        > 95% |*                                    0.12281
#
#        mean of 95%      0.12051
#          95th %ile      0.12219
 for      0.27473 seconds
Running:            mutex_T2# bin/mutex -E -C 200 -L -S -W -N mutex_T2 -T 2 -I 25
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_T2       1   2      0.24641          198        0     4000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.24417                 0.24417
#                    max      0.28794                 0.25767
#                   mean      0.24798                 0.24748
#                 median      0.24647                 0.24641
#                 stddev      0.00548                 0.00406
#         standard error      0.00039                 0.00029
#   99% confidence level      0.00090                 0.00067
#                   skew      2.94709                 1.17899
#               kurtosis     14.37691                -0.12684
#       time correlation     -0.00000                 0.00001
#
#           elasped time      0.22345
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                188      0.00000 |********************************     0.24699
#
#                 10        > 95% |*                                    0.25672
#
#        mean of 95%      0.24699
#          95th %ile      0.25639
 for      0.24024 seconds

Running:             longjmp# bin/longjmp -E -C 200 -L -S -W -N longjmp -I 5
             prc thr   usecs/call      samples   errors cnt/samp
longjmp        1   1      0.09824          190        0    20000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.09818                 0.09818
#                    max      0.10624                 0.10000
#                   mean      0.09889                 0.09866
#                 median      0.09904                 0.09824
#                 stddev      0.00117                 0.00049
#         standard error      0.00008                 0.00004
#   99% confidence level      0.00019                 0.00008
#                   skew      3.99736                 0.31682
#               kurtosis     19.60546                -1.50222
#       time correlation     -0.00000                -0.00000
#
#           elasped time      0.40160
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      0.00000 |********************************     0.09861
#
#                 10        > 95% |*                                    0.09955
#
#        mean of 95%      0.09861
#          95th %ile      0.09934
 for      0.42665 seconds
Running:          siglongjmp# bin/siglongjmp -E -C 200 -L -S -W -N siglongjmp -I 20
             prc thr   usecs/call      samples   errors cnt/samp
siglongjmp     1   1      0.74614          191        0     5000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.71957                 0.71957
#                    max      0.88115                 0.77594
#                   mean      0.75117                 0.74587
#                 median      0.74696                 0.74614
#                 stddev      0.02545                 0.01064
#         standard error      0.00179                 0.00077
#   99% confidence level      0.00416                 0.00179
#                   skew      3.24862                 0.12346
#               kurtosis     11.86576                -0.26952
#       time correlation     -0.00003                 0.00000
#
#           elasped time      0.76096
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          248
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      0.00000 |********************************     0.74462
#
#                 10        > 95% |*                                    0.76840
#
#        mean of 95%      0.74462
#          95th %ile      0.76416
 for      0.79487 seconds

Running:           getrusage# bin/getrusage -E -C 200 -L -S -W -N getrusage -I 200
             prc thr   usecs/call      samples   errors cnt/samp
getrusage      1   1      2.40543          197        0      500
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      2.24363                 2.24363
#                    max      3.34341                 2.53599
#                   mean      2.39406                 2.38340
#                 median      2.40543                 2.40543
#                 stddev      0.10246                 0.06337
#         standard error      0.00721                 0.00451
#   99% confidence level      0.01677                 0.01050
#                   skew      4.42358                -0.66716
#               kurtosis     37.34378                -0.39311
#       time correlation      0.00081                 0.00074
#
#           elasped time      0.24398
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          231
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      2.00000 |********************************     2.37802
#
#                 10        > 95% |*                                    2.48412
#
#        mean of 95%      2.37802
#          95th %ile      2.45560
 for      0.27878 seconds

Running:               times# bin/times -E -C 200 -L -S -W -N times -I 100
             prc thr   usecs/call      samples   errors cnt/samp
times          1   1      1.86193          171        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.72881                 1.81662
#                    max      3.25892                 1.90468
#                   mean      1.86245                 1.86262
#                 median      1.86065                 1.86193
#                 stddev      0.11199                 0.01639
#         standard error      0.00788                 0.00125
#   99% confidence level      0.01833                 0.00292
#                   skew      9.91768                -0.27783
#               kurtosis    118.57537                -0.20049
#       time correlation      0.00053                 0.00014
#
#           elasped time      0.37837
#      number of samples          171
#     number of outliers           31
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                162      1.00000 |********************************     1.86094
#
#                  9        > 95% |*                                    1.89277
#
#        mean of 95%      1.86094
#          95th %ile      1.88600
 for      0.42985 seconds
Running:                time# bin/time -E -C 200 -L -S -W -N time -I 2
             prc thr   usecs/call      samples   errors cnt/samp
time           1   1      0.10800          164        0    50000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.10719                 0.10719
#                    max      0.80392                 0.11158
#                   mean      0.14041                 0.10866
#                 median      0.10953                 0.10800
#                 stddev      0.09232                 0.00125
#         standard error      0.00650                 0.00010
#   99% confidence level      0.01511                 0.00023
#                   skew      4.03322                 0.41073
#               kurtosis     19.28097                -1.36397
#       time correlation      0.00023                -0.00000
#
#           elasped time      1.42052
#      number of samples          164
#     number of outliers           38
#      getnsecs overhead          216
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                155      0.00000 |********************************     0.10852
#
#                  9        > 95% |*                                    0.11104
#
#        mean of 95%      0.10852
#          95th %ile      0.11062
 for      1.44623 seconds
Running:         localtime_r# bin/localtime_r -E -C 200 -L -S -W -N localtime_r -I 100
             prc thr   usecs/call      samples   errors cnt/samp
localtime_r    1   1      0.93982          192        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.92778                 0.92778
#                    max      1.62282                 0.97591
#                   mean      0.95011                 0.94203
#                 median      0.93982                 0.93982
#                 stddev      0.05484                 0.01181
#         standard error      0.00386                 0.00085
#   99% confidence level      0.00898                 0.00198
#                   skew      9.61812                 0.89126
#               kurtosis    110.46981                -0.14185
#       time correlation     -0.00017                 0.00003
#
#           elasped time      0.19393
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.94052
#
#                 10        > 95% |*                                    0.96962
#
#        mean of 95%      0.94052
#          95th %ile      0.96593
 for      0.21269 seconds
Running:            strftime# bin/strftime -E -C 200 -L -S -W -N strftime -I 250
             prc thr   usecs/call      samples   errors cnt/samp   format
strftime       1   1      2.97737          193        0      400       %c
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      2.90697                 2.90697
#                    max      4.16713                 3.08745
#                   mean      2.98941                 2.97286
#                 median      2.98185                 2.97737
#                 stddev      0.10878                 0.04346
#         standard error      0.00765                 0.00313
#   99% confidence level      0.01780                 0.00728
#                   skew      6.94576                 0.41414
#               kurtosis     67.38833                -0.70903
#       time correlation     -0.00041                -0.00039
#
#           elasped time      0.24517
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                156      2.00000 |********************************     2.95706
#                 27      3.00000 |*****                                3.03091
#
#                 10        > 95% |**                                   3.06262
#
#        mean of 95%      2.96795
#          95th %ile      3.05673
 for      0.26482 seconds

Running:              mktime# bin/mktime -E -C 200 -L -S -W -N mktime -I 500
             prc thr   usecs/call      samples   errors cnt/samp
mktime         1   1     40.07323          199        0      200
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     39.37434                39.37434
#                    max     43.68923                41.18939
#                   mean     40.18760                40.14780
#                 median     40.07963                40.07323
#                 stddev      0.48143                 0.34870
#         standard error      0.03387                 0.02472
#   99% confidence level      0.07879                 0.05750
#                   skew      2.95587                 0.45861
#               kurtosis     16.35715                -0.48440
#       time correlation     -0.00284                -0.00276
#
#           elasped time      1.62852
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          203
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 78     39.00000 |**********************              39.82589
#                111     40.00000 |********************************    40.30866
#
#                 10        > 95% |**                                  40.87310
#
#        mean of 95%     40.10942
#          95th %ile     40.74907
 for      1.65381 seconds
Running:            mktimeT2# bin/mktime -E -C 200 -L -S -W -N mktimeT2 -T 2 -I 1000
             prc thr   usecs/call      samples   errors cnt/samp
mktimeT2       1   2     80.78615          197        0      100
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     79.99767                79.99767
#                    max     94.81751                82.70871
#                   mean     81.11080                80.96651
#                 median     80.79639                80.78615
#                 stddev      1.28982                 0.61593
#         standard error      0.09075                 0.04388
#   99% confidence level      0.21109                 0.10207
#                   skew      6.78434                 0.91129
#               kurtosis     63.78938                -0.00269
#       time correlation     -0.00217                 0.00001
#
#           elasped time      1.68052
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          233
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     79.00000 |*                                   79.99767
#                133     80.00000 |********************************    80.61228
#                 45     81.00000 |**********                          81.50642
#                  8     82.00000 |*                                   82.12343
#
#                 10        > 95% |**                                  82.41943
#
#        mean of 95%     80.88881
#          95th %ile     82.24791
 for      1.69604 seconds

Running:           c_mutex_1# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_1 -I 25
             prc thr   usecs/call      samples   errors cnt/samp
c_mutex_1      1   1      0.32449          189        0     4000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.32244                 0.32244
#                    max      0.50491                 0.33217
#                   mean      0.32760                 0.32549
#                 median      0.32449                 0.32449
#                 stddev      0.01414                 0.00230
#         standard error      0.00099                 0.00017
#   99% confidence level      0.00231                 0.00039
#                   skew     10.25710                 0.74230
#               kurtosis    121.15769                -0.46987
#       time correlation     -0.00002                -0.00000
#
#           elasped time      0.26694
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                179      0.00000 |********************************     0.32522
#
#                 10        > 95% |*                                    0.33031
#
#        mean of 95%      0.32522
#          95th %ile      0.32942
 for      0.30551 seconds
Running:          c_mutex_10# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_10 -T 10 -I 5000
             prc thr   usecs/call      samples   errors cnt/samp
c_mutex_10     1  10    168.94890          198        0       20
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    157.54410               157.54410
#                    max    228.78890               183.23370
#                   mean    169.74675               169.06003
#                 median    169.03850               168.94890
#                 stddev      7.58699                 5.33817
#         standard error      0.53382                 0.37937
#   99% confidence level      1.24166                 0.88241
#                   skew      3.35301                 0.55218
#               kurtosis     20.81554                 0.15009
#       time correlation     -0.02533                -0.00767
#
#           elasped time      0.85667
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    157.00000 |*                                  157.54410
#                  1    158.00000 |*                                  158.83690
#                  3    159.00000 |****                               159.63903
#                  4    160.00000 |*****                              160.63210
#                  7    161.00000 |*********                          161.58524
#                  6    162.00000 |********                           162.41023
#                 11    163.00000 |**************                     163.53450
#                 14    164.00000 |******************                 164.47439
#                 14    165.00000 |******************                 165.41336
#                 15    166.00000 |********************               166.50410
#                  9    167.00000 |************                       167.50534
#                 16    168.00000 |*********************              168.51770
#                 13    169.00000 |*****************                  169.65585
#                 24    170.00000 |********************************   170.54677
#                 13    171.00000 |*****************                  171.40552
#                 12    172.00000 |****************                   172.43903
#                  7    173.00000 |*********                          173.65016
#                  5    174.00000 |******                             174.27626
#                  3    175.00000 |****                               175.34037
#                  2    176.00000 |**                                 176.18730
#                  3    177.00000 |****                               177.39263
#                  1    178.00000 |*                                  178.89450
#                  3    179.00000 |****                               179.56863
#                  1    180.00000 |*                                  180.78890
#
#                 10        > 95% |*************                      181.97162
#
#        mean of 95%    168.37324
#          95th %ile    181.23690
 for      0.86996 seconds
Running:         c_mutex_200# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_200 -T 200 -I 2000000
             prc thr   usecs/call      samples   errors cnt/samp
c_mutex_200    1 200   7907.46950          192        0        1
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   7689.86950              7689.86950
#                    max   9706.38150              8165.00550
#                   mean   7965.61825              7912.34017
#                 median   7910.79750              7907.46950
#                 stddev    278.25194                88.43464
#         standard error     19.57774                 6.38222
#   99% confidence level     45.53782                14.84504
#                   skew      4.63438                 0.24691
#               kurtosis     24.04762                -0.25733
#       time correlation     -0.21482                -0.06900
#
#           elasped time      7.48963
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   7680.00000 |*                                 7689.86950
#                  0   7700.00000 |                                           -
#                  1   7720.00000 |*                                 7720.84550
#                  1   7740.00000 |*                                 7749.38950
#                  9   7760.00000 |************                      7769.81261
#                  6   7780.00000 |********                          7788.34417
#                 13   7800.00000 |******************                7811.45965
#                 10   7820.00000 |*************                     7830.14470
#                 15   7840.00000 |********************              7850.66310
#                 23   7860.00000 |********************************  7869.75959
#                 11   7880.00000 |***************                   7892.12114
#                 18   7900.00000 |*************************         7909.68106
#                  8   7920.00000 |***********                       7934.86150
#                 19   7940.00000 |**************************        7950.01939
#                 15   7960.00000 |********************              7970.55643
#                 12   7980.00000 |****************                  7991.34150
#                  8   8000.00000 |***********                       8008.70150
#                  4   8020.00000 |*****                             8028.74950
#                  8   8040.00000 |***********                       8048.79750
#
#                 10        > 95% |*************                     8098.97030
#
#        mean of 95%   7902.08576
#          95th %ile   8057.35750
 for      7.52285 seconds

Running:            c_cond_1# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_1 -I 100
             prc thr   usecs/call      samples   errors cnt/samp
c_cond_1       1   1      0.60061          196        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.58192                 0.58192
#                    max      0.76676                 0.62391
#                   mean      0.60112                 0.59880
#                 median      0.60061                 0.60061
#                 stddev      0.01818                 0.00915
#         standard error      0.00128                 0.00065
#   99% confidence level      0.00298                 0.00152
#                   skew      5.26513                 0.69483
#               kurtosis     39.00683                 0.46094
#       time correlation     -0.00007                -0.00001
#
#           elasped time      0.12381
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      0.00000 |********************************     0.59754
#
#                 10        > 95% |*                                    0.62222
#
#        mean of 95%      0.59754
#          95th %ile      0.62058
 for      0.14405 seconds
Running:           c_cond_10# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_10 -T 10 -I 3000
             prc thr   usecs/call      samples   errors cnt/samp
c_cond_10      1  10    248.54706          187        0       33
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    218.05294               240.90471
#                    max    348.46235               256.70141
#                   mean    250.81334               248.76002
#                 median    248.55459               248.54706
#                 stddev     16.08196                 2.94873
#         standard error      1.13152                 0.21563
#   99% confidence level      2.63192                 0.50156
#                   skew      4.20350                 0.22164
#               kurtosis     20.71488                 0.27513
#       time correlation     -0.03689                -0.01355
#
#           elasped time      1.91042
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          216
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    240.00000 |*                                  240.90471
#                  2    241.00000 |*                                  241.61247
#                  3    242.00000 |**                                 242.82471
#                  2    243.00000 |*                                  243.48353
#                  6    244.00000 |*****                              244.50753
#                 18    245.00000 |****************                   245.42779
#                 15    246.00000 |*************                      246.56783
#                 24    247.00000 |*********************              247.57922
#                 36    248.00000 |********************************   248.46549
#                 24    249.00000 |*********************              249.33231
#                 19    250.00000 |****************                   250.56534
#                 13    251.00000 |***********                        251.38391
#                  7    252.00000 |******                             252.34726
#                  5    253.00000 |****                               253.42913
#                  2    254.00000 |*                                  254.14141
#
#                 10        > 95% |********                           255.40635
#
#        mean of 95%    248.38452
#          95th %ile    254.43506
 for      1.93794 seconds
Running:          c_cond_200# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_200 -T 200 -I 2000000
             prc thr   usecs/call      samples   errors cnt/samp
c_cond_200     1 200   9238.92750          192        0        1
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   9077.39150              9077.39150
#                    max  12324.49550              9411.34350
#                   mean   9306.76053              9239.52817
#                 median   9246.99150              9238.92750
#                 stddev    372.38151                73.41655
#         standard error     26.20067                 5.29838
#   99% confidence level     60.94276                12.32404
#                   skew      5.85170                 0.19009
#               kurtosis     37.06456                -0.46726
#       time correlation     -1.11965                -0.25113
#
#           elasped time      8.01107
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   9070.00000 |**                                9077.39150
#                  0   9080.00000 |                                           -
#                  1   9090.00000 |**                                9090.31950
#                  4   9100.00000 |*********                         9104.27150
#                  4   9110.00000 |*********                         9118.51150
#                  4   9120.00000 |*********                         9122.15950
#                  1   9130.00000 |**                                9137.93550
#                  3   9140.00000 |******                            9145.23150
#                 13   9150.00000 |*****************************     9156.65304
#                  7   9160.00000 |****************                  9165.16293
#                  5   9170.00000 |***********                       9176.69390
#                  8   9180.00000 |******************                9183.63150
#                 14   9190.00000 |********************************  9194.49321
#                  6   9200.00000 |*************                     9203.94083
#                 11   9210.00000 |*************************         9216.34132
#                  5   9220.00000 |***********                       9224.25870
#                 10   9230.00000 |**********************            9235.24110
#                  7   9240.00000 |****************                  9245.78464
#                 14   9250.00000 |********************************  9255.15607
#                  9   9260.00000 |********************              9266.90261
#                  7   9270.00000 |****************                  9274.18236
#                  9   9280.00000 |********************              9283.51417
#                 11   9290.00000 |*************************         9294.73550
#                  2   9300.00000 |****                              9302.41550
#                 12   9310.00000 |***************************       9315.64217
#                  4   9320.00000 |*********                         9323.37550
#                  5   9330.00000 |***********                       9335.18350
#                  2   9340.00000 |****                              9345.87150
#                  1   9350.00000 |**                                9359.88750
#                  2   9360.00000 |****                              9365.90350
#
#                 10        > 95% |**********************            9396.99470
#
#        mean of 95%   9230.87616
#          95th %ile   9367.82350
 for      8.04187 seconds

Running:           c_lockf_1# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_1 -I 1000
             prc thr   usecs/call      samples   errors cnt/samp
c_lockf_1      1   1     21.06910          198        0      100
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     19.78910                19.78910
#                    max     26.08926                22.48734
#                   mean     21.09323                21.04430
#                 median     21.06910                21.06910
#                 stddev      0.63073                 0.48925
#         standard error      0.04438                 0.03477
#   99% confidence level      0.10322                 0.08087
#                   skew      2.66392                 0.24248
#               kurtosis     18.01763                -0.28146
#       time correlation      0.00255                 0.00150
#
#           elasped time      0.43048
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     19.00000 |*                                   19.86846
#                 87     20.00000 |****************************        20.60695
#                 99     21.00000 |********************************    21.34496
#
#                 10        > 95% |***                                 22.10795
#
#        mean of 95%     20.98772
#          95th %ile     21.76798
 for      0.47067 seconds
Running:          c_lockf_10# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_10 -P 10 -I 50000
             prc thr   usecs/call      samples   errors cnt/samp
c_lockf_10    10   1    873.85950          198        0        2
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    849.41150               849.41150
#                    max   1298.94750               935.93950
#                   mean    887.19178               882.48075
#                 median    876.29150               873.85950
#                 stddev     42.30981                19.04000
#         standard error      2.97691                 1.35311
#   99% confidence level      6.92429                 3.14734
#                   skew      6.34589                 0.51240
#               kurtosis     52.21582                -0.65998
#       time correlation     -0.09802                -0.03284
#
#           elasped time      0.61792
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          249
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    849.00000 |*                                  849.41150
#                  1    852.00000 |*                                  853.89150
#                  3    855.00000 |****                               856.40883
#                 12    858.00000 |****************                   859.67283
#                 17    861.00000 |***********************            862.71597
#                 23    864.00000 |********************************   865.71759
#                 23    867.00000 |********************************   868.46680
#                 18    870.00000 |*************************          871.11461
#                  3    873.00000 |****                               874.03017
#                  1    876.00000 |*                                  876.29150
#                  0    879.00000 |                                           -
#                  1    882.00000 |*                                  884.35550
#                  2    885.00000 |**                                 887.10750
#                 11    888.00000 |***************                    889.49877
#                 17    891.00000 |***********************            892.65291
#                 14    894.00000 |*******************                895.60121
#                 13    897.00000 |******************                 898.38627
#                 16    900.00000 |**********************             901.57950
#                  6    903.00000 |********                           904.36617
#                  3    906.00000 |****                               907.18217
#                  1    909.00000 |*                                  909.44350
#                  1    912.00000 |*                                  912.89950
#                  0    915.00000 |                                           -
#                  1    918.00000 |*                                  920.83550
#
#                 10        > 95% |*************                      925.99390
#
#        mean of 95%    880.16622
#          95th %ile    920.83550
 for      0.64557 seconds
Running:         c_lockf_200# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_200 -P 200 -I 5000000
             prc thr   usecs/call      samples   errors cnt/samp
c_lockf_200  200   1  20686.35700          184        0        1
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  20423.95700             20423.95700
#                    max  28869.90900             20920.34100
#                   mean  20851.57268             20690.67352
#                 median  20704.78900             20686.35700
#                 stddev    721.28284               103.01613
#         standard error     50.74928                 7.59445
#   99% confidence level    118.04283                17.66469
#                   skew      7.56297                -0.07542
#               kurtosis     74.71221                -0.14618
#       time correlation     -1.23504                 0.48594
#
#           elasped time     14.07972
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3  20420.00000 |*****                            20428.09567
#                  1  20440.00000 |*                                20441.36500
#                  1  20460.00000 |*                                20477.84500
#                  3  20480.00000 |*****                            20490.51700
#                  2  20500.00000 |***                              20512.40500
#                  2  20520.00000 |***                              20536.59700
#                  4  20540.00000 |*******                          20548.40500
#                  9  20560.00000 |****************                 20571.28500
#                  8  20580.00000 |**************                   20593.92500
#                  7  20600.00000 |************                     20610.14214
#                 18  20620.00000 |******************************** 20630.64144
#                 17  20640.00000 |******************************   20649.58335
#                 14  20660.00000 |************************         20671.07929
#                 10  20680.00000 |*****************                20689.94100
#                 15  20700.00000 |**************************       20712.00820
#                 14  20720.00000 |************************         20732.83929
#                 10  20740.00000 |*****************                20751.66260
#                 11  20760.00000 |*******************              20769.53373
#                 10  20780.00000 |*****************                20790.48500
#                  6  20800.00000 |**********                       20809.91967
#                  2  20820.00000 |***                              20828.88500
#                  4  20840.00000 |*******                          20854.54900
#                  3  20860.00000 |*****                            20863.42367
#
#                 10        > 95% |*****************                20891.23380
#
#        mean of 95%  20679.14707
#          95th %ile  20865.94100
 for     14.14589 seconds

Running:             c_flock# bin/cascade_flock -E -C 200 -L -S -W -N c_flock -I 500
             prc thr   usecs/call      samples   errors cnt/samp
c_flock        1   1      7.83880          200        0      200
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      7.63912                 7.63912
#                    max      9.58344                 9.08296
#                   mean      7.97549                 7.96156
#                 median      7.83880                 7.83880
#                 stddev      0.40062                 0.37677
#         standard error      0.02819                 0.02664
#   99% confidence level      0.06556                 0.06197
#                   skew      1.59134                 1.50128
#               kurtosis      1.48143                 0.86374
#       time correlation     -0.00333                -0.00303
#
#           elasped time      0.32503
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          240
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                156      7.00000 |********************************     7.77492
#                 34      8.00000 |******                               8.53102
#
#                 10        > 95% |**                                   8.93704
#
#        mean of 95%      7.91022
#          95th %ile      8.76424
 for      0.34813 seconds
Running:          c_flock_10# bin/cascade_flock -E -C 200 -L -S -W -N c_flock_10 -P 10 -I 6250
             prc thr   usecs/call      samples   errors cnt/samp
c_flock_10    10   1    114.11506          191        0       16
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    111.49106               111.49106
#                    max    151.92306               120.91506
#                   mean    115.56100               114.88675
#                 median    115.18706               114.11506
#                 stddev      4.03190                 2.22880
#         standard error      0.28368                 0.16127
#   99% confidence level      0.65985                 0.37511
#                   skew      4.29365                 0.43413
#               kurtosis     32.09344                -0.82667
#       time correlation     -0.01263                 0.00303
#
#           elasped time      0.61921
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          207
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    111.00000 |****                               111.79240
#                 47    112.00000 |********************************   112.50791
#                 39    113.00000 |**************************         113.46768
#                  8    114.00000 |*****                              114.32906
#                 18    115.00000 |************                       115.65640
#                 40    116.00000 |***************************        116.52386
#                 21    117.00000 |**************                     117.55887
#                  2    118.00000 |*                                  118.08306
#
#                 10        > 95% |******                             119.71986
#
#        mean of 95%    114.61973
#          95th %ile    118.49906
 for      0.64761 seconds
Running:         c_flock_200# bin/cascade_flock -E -C 200 -L -S -W -N c_flock_200 -P 200 -I 5000000
             prc thr   usecs/call      samples   errors cnt/samp
c_flock_200  200   1   7974.79800          199        0        1
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   7777.93400              7777.93400
#                    max  13456.91000              8141.83800
#                   mean   8027.88442              7981.85151
#                 median   7980.94200              7974.79800
#                 stddev    458.58594                77.94755
#         standard error     32.26599                 5.52556
#   99% confidence level     75.05070                12.85244
#                   skew     10.07949                -0.23841
#               kurtosis    107.79173                -0.60808
#       time correlation      0.01624                 0.91578
#
#           elasped time      8.56915
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          228
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   7760.00000 |*                                 7777.93400
#                  3   7780.00000 |****                              7790.43533
#                  1   7800.00000 |*                                 7807.88600
#                  0   7820.00000 |                                           -
#                  6   7840.00000 |********                          7853.21933
#                 13   7860.00000 |******************                7871.43308
#                 11   7880.00000 |***************                   7892.40091
#                  8   7900.00000 |***********                       7909.64600
#                 17   7920.00000 |***********************           7930.86388
#                 17   7940.00000 |***********************           7952.16459
#                 23   7960.00000 |********************************  7967.10687
#                 15   7980.00000 |********************              7987.88813
#                 12   8000.00000 |****************                  8008.61133
#                 15   8020.00000 |********************              8030.79373
#                 15   8040.00000 |********************              8050.20707
#                 22   8060.00000 |******************************    8067.38855
#                 10   8080.00000 |*************                     8086.28600
#
#                 10        > 95% |*************                     8115.27800
#
#        mean of 95%   7974.79190
#          95th %ile   8100.87800
 for      8.64248 seconds

Running:           c_fcntl_1# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_1 -I 1000
             prc thr   usecs/call      samples   errors cnt/samp
c_fcntl_1      1   1     23.86732          199        0      100
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     22.57708                22.57708
#                    max     29.19724                25.42892
#                   mean     23.98665                23.92990
#                 median     23.92876                23.86732
#                 stddev      0.83587                 0.68956
#         standard error      0.05881                 0.04888
#   99% confidence level      0.13680                 0.11370
#                   skew      1.60021                 0.10910
#               kurtosis      7.09326                -1.06996
#       time correlation      0.00433                 0.00457
#
#           elasped time      0.48886
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 16     22.00000 |*****                               22.83500
#                 91     23.00000 |********************************    23.47752
#                 81     24.00000 |****************************        24.48406
#                  1     25.00000 |*                                   25.00908
#
#                 10        > 95% |***                                 25.20185
#
#        mean of 95%     23.86261
#          95th %ile     25.02700
 for      0.49956 seconds
Running:          c_fcntl_10# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_10 -P 10 -I 20000
             prc thr   usecs/call      samples   errors cnt/samp
c_fcntl_10    10   1    698.62933          198        0        5
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    635.82400               635.82400
#                    max   1042.43733               726.44800
#                   mean    691.95601               688.79251
#                 median    698.80000               698.62933
#                 stddev     35.41571                22.67630
#         standard error      2.49184                 1.61153
#   99% confidence level      5.79602                 3.74843
#                   skew      4.65491                -1.21948
#               kurtosis     45.85869                -0.10999
#       time correlation      0.24886                 0.27225
#
#           elasped time      1.09576
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    633.00000 |*                                  635.82400
#                  2    636.00000 |*                                  637.70133
#                  1    639.00000 |*                                  641.28533
#                  9    642.00000 |******                             644.12030
#                 21    645.00000 |**************                     646.58006
#                  3    648.00000 |**                                 649.02222
#                  2    651.00000 |*                                  652.69867
#                  1    654.00000 |*                                  656.60267
#                  0    657.00000 |                                           -
#                  0    660.00000 |                                           -
#                  0    663.00000 |                                           -
#                  2    666.00000 |*                                  667.80267
#                  1    669.00000 |*                                  669.95733
#                  1    672.00000 |*                                  672.30400
#                  1    675.00000 |*                                  676.27200
#                  0    678.00000 |                                           -
#                  0    681.00000 |                                           -
#                  0    684.00000 |                                           -
#                  0    687.00000 |                                           -
#                  6    690.00000 |****                               691.76711
#                 15    693.00000 |**********                         694.32000
#                 38    696.00000 |**************************         697.60533
#                 46    699.00000 |********************************   700.54655
#                 30    702.00000 |********************               703.16480
#                  8    705.00000 |*****                              706.09067
#
#                 10        > 95% |******                             714.67200
#
#        mean of 95%    687.41594
#          95th %ile    707.63200
 for      1.13144 seconds
Running:         c_fcntl_200# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_200 -P 200 -I 5000000
             prc thr   usecs/call      samples   errors cnt/samp
c_fcntl_200  200   1  71032.33800          201        0        1
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  68426.38600             68426.38600
#                    max  81422.86600             76694.41800
#                   mean  71644.97135             71596.32510
#                 median  71051.92200             71032.33800
#                 stddev   1928.77656              1805.09432
#         standard error    135.70824               127.32154
#   99% confidence level    315.65738               296.14989
#                   skew      1.63521                 1.29453
#               kurtosis      3.14174                 0.89774
#       time correlation      0.91523                 2.38834
#
#           elasped time     36.11641
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  68400.00000 |*                                68426.38600
#                  2  68700.00000 |*                                68905.61800
#                  2  69000.00000 |*                                69121.42600
#                  5  69300.00000 |****                             69543.77480
#                  8  69600.00000 |*******                          69732.96200
#                 10  69900.00000 |*********                        70073.93800
#                 28  70200.00000 |***************************      70371.04886
#                 19  70500.00000 |******************               70673.87063
#                 33  70800.00000 |******************************** 70959.33145
#                 24  71100.00000 |***********************          71209.68200
#                  8  71400.00000 |*******                          71537.90600
#                  9  71700.00000 |********                         71843.16111
#                  4  72000.00000 |***                              72161.36200
#                  8  72300.00000 |*******                          72415.26600
#                  6  72600.00000 |*****                            72746.79133
#                  0  72900.00000 |                                           -
#                  4  73200.00000 |***                              73319.50600
#                  2  73500.00000 |*                                73643.34600
#                  2  73800.00000 |*                                73873.87400
#                  1  74100.00000 |*                                74154.38600
#                  2  74400.00000 |*                                74436.62600
#                  3  74700.00000 |**                               74876.17800
#                  3  75000.00000 |**                               75061.77800
#                  4  75300.00000 |***                              75464.01800
#                  2  75600.00000 |*                                75642.19400
#
#                 11        > 95% |**********                       76231.02309
#
#        mean of 95%  71328.00048
#          95th %ile  75767.31400
 for     36.16736 seconds

Running:           file_lock# bin/file_lock -E -C 200 -L -S -W -N file_lock -I 500
             prc thr   usecs/call      samples   errors cnt/samp
file_lock      1   1     11.20909          198        0      200
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.68301                10.68301
#                    max     13.39917                11.61869
#                   mean     11.21536                11.19233
#                 median     11.20909                11.20909
#                 stddev      0.25481                 0.17678
#         standard error      0.01793                 0.01256
#   99% confidence level      0.04170                 0.02922
#                   skew      3.39668                -0.43304
#               kurtosis     26.59467                 0.22076
#       time correlation     -0.00003                -0.00017
#
#           elasped time      0.45546
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 28     10.00000 |*****                               10.89696
#                160     11.00000 |********************************    11.22355
#
#                 10        > 95% |**                                  11.51975
#
#        mean of 95%     11.17491
#          95th %ile     11.46382
 for      0.47672 seconds

Running:         getsockname# bin/getsockname -E -C 200 -L -S -W -N getsockname -I 100
             prc thr   usecs/call      samples   errors cnt/samp
getsockname    1   1      1.70397          202        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.64663                 1.64663
#                    max      2.23978                 2.23978
#                   mean      1.77778                 1.77778
#                 median      1.70397                 1.70397
#                 stddev      0.15890                 0.15890
#         standard error      0.01118                 0.01118
#   99% confidence level      0.02600                 0.02600
#                   skew      1.49153                 1.49153
#               kurtosis      0.60117                 0.60117
#       time correlation     -0.00011                -0.00011
#
#           elasped time      0.36124
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                170      1.00000 |********************************     1.71455
#                 21      2.00000 |***                                  2.09433
#
#                 11        > 95% |**                                   2.15074
#
#        mean of 95%      1.75630
#          95th %ile      2.13891
 for      0.38514 seconds
Running:         getpeername# bin/getpeername -E -C 200 -L -S -W -N getpeername -I 100
             prc thr   usecs/call      samples   errors cnt/samp
getpeername    1   1      1.70678          195        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.64458                 1.65994
#                    max      1.87267                 1.76080
#                   mean      1.70917                 1.70677
#                 median      1.70678                 1.70678
#                 stddev      0.02787                 0.01875
#         standard error      0.00196                 0.00134
#   99% confidence level      0.00456                 0.00312
#                   skew      2.34705                 0.03789
#               kurtosis     11.49673                -0.12664
#       time correlation     -0.00000                 0.00006
#
#           elasped time      0.34754
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      1.00000 |********************************     1.70466
#
#                 10        > 95% |*                                    1.74564
#
#        mean of 95%      1.70466
#          95th %ile      1.73878
 for      0.36904 seconds

Running:           chdir_tmp# bin/chdir -E -C 200 -L -S -W -N chdir_tmp -I 1000 /tmp/libmicro.8008/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.8008/1/2/3/4/5/6/7/8/9/0
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chdir_tmp      1   1     14.07759          196        0      100     2     n
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.75759                13.75759
#                    max     19.53807                14.74831
#                   mean     14.22190                14.16473
#                 median     14.08783                14.07759
#                 stddev      0.50118                 0.26471
#         standard error      0.03526                 0.01891
#   99% confidence level      0.08202                 0.04398
#                   skew      6.34128                 0.35814
#               kurtosis     61.41391                -1.06190
#       time correlation     -0.00053                 0.00002
#
#           elasped time      0.28962
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          241
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 60     13.00000 |***************                     13.88828
#                126     14.00000 |********************************    14.25774
#
#                 10        > 95% |**                                  14.65154
#
#        mean of 95%     14.13856
#          95th %ile     14.60751
 for      0.31101 seconds
Running:           chdir_usr# bin/chdir -E -C 200 -L -S -W -N chdir_usr -I 1000 /var/tmp/libmicro.8008/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.8008/1/2/3/4/5/6/7/8/9/
0
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chdir_usr      1   1     13.17660          193        0      100     2     n
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     12.94876                12.94876
#                    max     19.71740                13.77820
#                   mean     13.36480                13.27233
#                 median     13.19708                13.17660
#                 stddev      0.61706                 0.22347
#         standard error      0.04342                 0.01609
#   99% confidence level      0.10099                 0.03742
#                   skew      6.97113                 0.68420
#               kurtosis     61.94507                -0.99710
#       time correlation      0.00149                 0.00033
#
#           elasped time      0.27231
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          228
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  8     12.00000 |*                                   12.97052
#                175     13.00000 |********************************    13.26080
#
#                 10        > 95% |*                                   13.71548
#
#        mean of 95%     13.24811
#          95th %ile     13.66812
 for      0.30233 seconds

Running:         chgetwd_tmp# bin/chdir -E -C 200 -L -S -W -N chgetwd_tmp -I 1500 -g /tmp/libmicro.8008/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.8008/1/2/3/4/5/6/7/8/9/0
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_tmp    1   1     19.31721          198        0       66     2     y
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     18.78582                18.78582
#                    max     23.31624                20.64764
#                   mean     19.51927                19.47587
#                 median     19.32885                19.31721
#                 stddev      0.51828                 0.39925
#         standard error      0.03647                 0.02837
#   99% confidence level      0.08482                 0.06600
#                   skew      2.51484                 0.57251
#               kurtosis     13.41596                -0.85818
#       time correlation      0.00024                 0.00125
#
#           elasped time      0.26268
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          200
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10     18.00000 |*                                   18.95183
#                163     19.00000 |********************************    19.40114
#                 15     20.00000 |**                                  20.08625
#
#                 10        > 95% |*                                   20.30242
#
#        mean of 95%     19.43190
#          95th %ile     20.22485
 for      0.27451 seconds
Running:         chgetwd_usr# bin/chdir -E -C 200 -L -S -W -N chgetwd_usr -I 1500 -g /var/tmp/libmicro.8008/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.8008/1/2/3/4/5/6/7
/8/9/0
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_usr    1   1     17.46685          196        0       66     2     y
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     17.13327                17.13327
#                    max     40.15000                18.72358
#                   mean     17.82761                17.64302
#                 median     17.48236                17.46685
#                 stddev      1.73606                 0.38821
#         standard error      0.12215                 0.02773
#   99% confidence level      0.28412                 0.06450
#                   skew     10.97800                 0.75420
#               kurtosis    134.30598                -0.90499
#       time correlation      0.00066                -0.00012
#
#           elasped time      0.24004
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                144     17.00000 |********************************    17.43135
#                 42     18.00000 |*********                           18.18692
#
#                 10        > 95% |**                                  18.40668
#
#        mean of 95%     17.60196
#          95th %ile     18.32794
 for      0.26896 seconds

Running:        realpath_tmp# bin/realpath -E -C 200 -L -S -W -N realpath_tmp -I 3000 -f /tmp/libmicro.8008/0/1/2/3/4/5/6/7/8/9
             prc thr   usecs/call      samples   errors cnt/samp
realpath_tmp   1   1    112.50918          190        0       33
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    107.96324               110.08106
#                    max    130.32833               114.75112
#                   mean    112.61998               112.43144
#                 median    112.50918               112.50918
#                 stddev      1.95336                 0.80658
#         standard error      0.13744                 0.05852
#   99% confidence level      0.31968                 0.13611
#                   skew      5.11328                -0.28284
#               kurtosis     39.13619                 0.72928
#       time correlation      0.00568                 0.00757
#
#           elasped time      0.75324
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  9    110.00000 |**                                 110.47497
#                 41    111.00000 |*************                      111.60760
#                 99    112.00000 |********************************   112.53418
#                 31    113.00000 |**********                         113.24365
#
#                 10        > 95% |***                                114.03510
#
#        mean of 95%    112.34235
#          95th %ile    113.60300
 for      0.78407 seconds
Running:        realpath_usr# bin/realpath -E -C 200 -L -S -W -N realpath_usr -I 3000 -f /var/tmp/libmicro.8008/0/1/2/3/4/5/6/7/8/9
             prc thr   usecs/call      samples   errors cnt/samp
realpath_usr   1   1    122.81145          201        0       33
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    117.62939               117.62939
#                    max    139.87036               134.63400
#                   mean    123.84486               123.76513
#                 median    122.81145               122.81145
#                 stddev      4.21502                 4.06998
#         standard error      0.29657                 0.28707
#   99% confidence level      0.68982                 0.66773
#                   skew      1.41031                 1.32908
#               kurtosis      1.59513                 1.21829
#       time correlation      0.03612                 0.03899
#
#           elasped time      0.82792
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    117.00000 |*                                  117.73412
#                 24    118.00000 |********                           118.87869
#                  8    119.00000 |**                                 119.37776
#                  3    120.00000 |*                                  120.41695
#                  1    121.00000 |*                                  121.74867
#                 87    122.00000 |********************************   122.77606
#                 36    123.00000 |*************                      123.43465
#                  4    124.00000 |*                                  124.47158
#                  4    125.00000 |*                                  125.25121
#                  0    126.00000 |                                           -
#                  1    127.00000 |*                                  127.41945
#                  4    128.00000 |*                                  128.27473
#                  4    129.00000 |*                                  129.57994
#                  0    130.00000 |                                           -
#                  3    131.00000 |*                                  131.37840
#                  4    132.00000 |*                                  132.53170
#                  5    133.00000 |*                                  133.64258
#
#                 11        > 95% |****                               134.07687
#
#        mean of 95%    123.16814
#          95th %ile    133.81170
 for      0.86103 seconds

Running:            stat_tmp# bin/stat -E -C 200 -L -S -W -N stat_tmp -I 500 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp
stat_tmp       1   1     11.75955          201        0      200
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.20915                11.20915
#                    max     13.79347                12.24851
#                   mean     11.74657                11.73638
#                 median     11.75955                11.75955
#                 stddev      0.23342                 0.18359
#         standard error      0.01642                 0.01295
#   99% confidence level      0.03820                 0.03012
#                   skew      3.04356                -0.44318
#               kurtosis     27.37008                -0.24005
#       time correlation      0.00161                 0.00137
#
#           elasped time      0.47688
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          218
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190     11.00000 |********************************    11.71970
#
#                 11        > 95% |*                                   12.02451
#
#        mean of 95%     11.71970
#          95th %ile     11.94899
 for      0.49251 seconds
Running:            stat_usr# bin/stat -E -C 200 -L -S -W -N stat_usr -I 500 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp
stat_usr       1   1     11.06839          197        0      200
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     10.56919                10.56919
#                    max     14.28887                11.60855
#                   mean     11.11053                11.07194
#                 median     11.07991                11.06839
#                 stddev      0.33629                 0.18775
#         standard error      0.02366                 0.01338
#   99% confidence level      0.05504                 0.03111
#                   skew      5.05603                 0.27654
#               kurtosis     40.71469                 0.41902
#       time correlation     -0.00008                -0.00044
#
#           elasped time      0.45131
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 80     10.00000 |***********************             10.90119
#                107     11.00000 |********************************    11.15755
#
#                 10        > 95% |**                                  11.52189
#
#        mean of 95%     11.04788
#          95th %ile     11.45367
 for      0.47295 seconds

Running:           fcntl_tmp# bin/fcntl -E -C 200 -L -S -W -N fcntl_tmp -I 100 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp
fcntl_tmp      1   1      0.55172          195        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.52765                 0.52765
#                    max      0.73373                 0.58295
#                   mean      0.55589                 0.55275
#                 median      0.55172                 0.55172
#                 stddev      0.02167                 0.01056
#         standard error      0.00153                 0.00076
#   99% confidence level      0.00355                 0.00176
#                   skew      4.68949                 0.53746
#               kurtosis     30.14876                 0.66144
#       time correlation     -0.00011                -0.00005
#
#           elasped time      0.11438
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      0.00000 |********************************     0.55135
#
#                 10        > 95% |*                                    0.57852
#
#        mean of 95%      0.55135
#          95th %ile      0.57373
 for      0.13442 seconds
Running:           fcntl_usr# bin/fcntl -E -C 200 -L -S -W -N fcntl_usr -I 100 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp
fcntl_usr      1   1      0.54992          192        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.53584                 0.53584
#                    max      0.73578                 0.57782
#                   mean      0.55417                 0.55127
#                 median      0.55094                 0.54992
#                 stddev      0.01840                 0.00913
#         standard error      0.00129                 0.00066
#   99% confidence level      0.00301                 0.00153
#                   skew      5.47435                 0.82130
#               kurtosis     46.49474                 0.35942
#       time correlation     -0.00004                -0.00002
#
#           elasped time      0.11399
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.55002
#
#                 10        > 95% |*                                    0.57409
#
#        mean of 95%      0.55002
#          95th %ile      0.57091
 for      0.14382 seconds
Running:        fcntl_ndelay# bin/fcntl_ndelay -E -C 200 -L -S -W -N fcntl_ndelay -I 100
             prc thr   usecs/call      samples   errors cnt/samp
fcntl_ndelay   1   1      0.87195          191        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.87067                 0.87067
#                    max      1.36578                 0.92674
#                   mean      0.89081                 0.88310
#                 median      0.87195                 0.87195
#                 stddev      0.04523                 0.01664
#         standard error      0.00318                 0.00120
#   99% confidence level      0.00740                 0.00280
#                   skew      6.65783                 1.10071
#               kurtosis     60.63856                -0.13537
#       time correlation     -0.00016                -0.00010
#
#           elasped time      0.18204
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          239
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      0.00000 |********************************     0.88083
#
#                 10        > 95% |*                                    0.92423
#
#        mean of 95%      0.88083
#          95th %ile      0.92085
 for      0.20007 seconds

Running:           lseek_t8k# bin/lseek -E -C 200 -L -S -W -N lseek_t8k -s 8k -I 50 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
lseek_t8k      1   1      0.51547          197        0     2000     8192
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.49435                 0.49435
#                    max      0.59688                 0.54388
#                   mean      0.51686                 0.51542
#                 median      0.51585                 0.51547
#                 stddev      0.01378                 0.01026
#         standard error      0.00097                 0.00073
#   99% confidence level      0.00225                 0.00170
#                   skew      1.98356                 0.23401
#               kurtosis      7.71921                -0.50299
#       time correlation      0.00002                 0.00004
#
#           elasped time      0.21104
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      0.00000 |********************************     0.51427
#
#                 10        > 95% |*                                    0.53681
#
#        mean of 95%      0.51427
#          95th %ile      0.53339
 for      0.23403 seconds
Running:           lseek_u8k# bin/lseek -E -C 200 -L -S -W -N lseek_u8k -s 8k -I 50 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
lseek_u8k      1   1      0.52136          195        0     2000     8192
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.50178                 0.50178
#                    max      0.76443                 0.55733
#                   mean      0.52669                 0.52300
#                 median      0.52187                 0.52136
#                 stddev      0.02618                 0.01199
#         standard error      0.00184                 0.00086
#   99% confidence level      0.00428                 0.00200
#                   skew      5.48722                 0.41674
#               kurtosis     41.23109                -0.39276
#       time correlation     -0.00002                 0.00002
#
#           elasped time      0.21501
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      0.00000 |********************************     0.52159
#
#                 10        > 95% |*                                    0.54906
#
#        mean of 95%      0.52159
#          95th %ile      0.54440
 for      0.23458 seconds

Running:            open_tmp# bin/open -E -C 200 -L -S -W -N open_tmp -B 256 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp
open_tmp       1   1     16.59718          190        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.61618                15.61618
#                    max     21.73318                17.78418
#                   mean     16.75843                16.57918
#                 median     16.64018                16.59718
#                 stddev      0.86310                 0.46981
#         standard error      0.06073                 0.03408
#   99% confidence level      0.14125                 0.07928
#                   skew      2.36548                 0.10916
#               kurtosis      7.59811                -0.87544
#       time correlation     -0.00120                -0.00060
#
#           elasped time      1.19610
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          209
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 24     15.00000 |******                              15.88481
#                127     16.00000 |********************************    16.50955
#                 29     17.00000 |*******                             17.14767
#
#                 10        > 95% |**                                  17.48128
#
#        mean of 95%     16.52906
#          95th %ile     17.33918
 for      1.21782 seconds
Running:            open_usr# bin/open -E -C 200 -L -S -W -N open_usr -B 256 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp
open_usr       1   1     17.05013          201        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     16.07713                16.07713
#                    max     22.38913                20.52313
#                   mean     17.56622                17.54223
#                 median     17.05813                17.05013
#                 stddev      1.29517                 1.25258
#         standard error      0.09113                 0.08835
#   99% confidence level      0.21196                 0.20550
#                   skew      1.05092                 0.94076
#               kurtosis     -0.02215                -0.60274
#       time correlation     -0.00110                -0.00092
#
#           elasped time      1.25802
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 94     16.00000 |********************************    16.58439
#                 56     17.00000 |*******************                 17.31999
#                  7     18.00000 |**                                  18.83385
#                 33     19.00000 |***********                         19.52038
#
#                 11        > 95% |***                                 20.10241
#
#        mean of 95%     17.39401
#          95th %ile     19.89313
 for      1.27853 seconds
Running:           open_zero# bin/open -E -C 200 -L -S -W -N open_zero -B 256 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp
open_zero      1   1     21.42911          200        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     19.91311                19.91311
#                    max     24.60411                23.31511
#                   mean     21.48435                21.45642
#                 median     21.42911                21.42911
#                 stddev      0.77497                 0.72548
#         standard error      0.05453                 0.05130
#   99% confidence level      0.12683                 0.11932
#                   skew      0.54339                 0.18959
#               kurtosis      0.45067                -0.82087
#       time correlation     -0.00065                -0.00039
#
#           elasped time      1.46361
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     19.00000 |*                                   19.95061
#                 60     20.00000 |********************                20.65806
#                 93     21.00000 |********************************    21.51086
#                 35     22.00000 |************                        22.36911
#
#                 10        > 95% |***                                 22.84701
#
#        mean of 95%     21.38323
#          95th %ile     22.71811
 for      1.48362 seconds

Running:                 dup# bin/dup -E -C 200 -L -S -W -N dup -B 1024
             prc thr   usecs/call      samples   errors cnt/samp
dup            1   1      1.57678          201        0     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.26928                 1.26928
#                    max      2.10053                 1.74878
#                   mean      1.55249                 1.54977
#                 median      1.57703                 1.57678
#                 stddev      0.11862                 0.11239
#         standard error      0.00835                 0.00793
#   99% confidence level      0.01941                 0.01844
#                   skew     -0.52659                -1.12657
#               kurtosis      1.99531                 0.30333
#       time correlation      0.00002                -0.00003
#
#           elasped time      0.54627
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      1.00000 |********************************     1.54090
#
#                 11        > 95% |*                                    1.70282
#
#        mean of 95%      1.54090
#          95th %ile      1.68253
 for      0.57311 seconds

Running:            socket_u# bin/socket -E -C 200 -L -S -W -N socket_u -B 256
             prc thr   usecs/call      samples   errors cnt/samp
socket_u       1   1     34.66719          200        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     32.90119                33.84319
#                    max     37.72919                35.51819
#                   mean     34.69530                34.68910
#                 median     34.66719                34.66719
#                 stddev      0.38508                 0.29548
#         standard error      0.02709                 0.02089
#   99% confidence level      0.06302                 0.04860
#                   skew      1.94331                 0.11399
#               kurtosis     19.57395                 0.40847
#       time correlation      0.00026                 0.00037
#
#           elasped time      3.23507
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          207
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     33.00000 |*                                   33.90219
#                170     34.00000 |********************************    34.62873
#                 16     35.00000 |***                                 35.11875
#
#                 10        > 95% |*                                   35.34269
#
#        mean of 95%     34.65470
#          95th %ile     35.22519
 for      3.26322 seconds
Running:            socket_i# bin/socket -E -C 200 -L -S -W -N socket_i -B 256 -f PF_INET
             prc thr   usecs/call      samples   errors cnt/samp
socket_i       1   1     41.26513          202        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     37.61213                37.61213
#                    max     42.34713                42.34713
#                   mean     40.74502                40.74502
#                 median     41.26513                41.26513
#                 stddev      1.08301                 1.08301
#         standard error      0.07620                 0.07620
#   99% confidence level      0.17724                 0.17724
#                   skew     -0.72462                -0.72462
#               kurtosis     -1.08815                -1.08815
#       time correlation     -0.00001                -0.00001
#
#           elasped time      4.07517
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     37.00000 |*                                   37.61213
#                  6     38.00000 |*                                   38.88196
#                 56     39.00000 |**************                      39.26061
#                  7     40.00000 |*                                   40.88413
#                121     41.00000 |********************************    41.42915
#
#                 11        > 95% |**                                  41.98904
#
#        mean of 95%     40.67337
#          95th %ile     41.83113
 for      4.09591 seconds

Running:          socketpair# bin/socketpair -E -C 200 -L -S -W -N socketpair -B 256
             prc thr   usecs/call      samples   errors cnt/samp
socketpair     1   1     66.10024          199        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     58.92824                64.95824
#                    max     72.13824                67.28624
#                   mean     66.13793                66.12759
#                 median     66.11424                66.10024
#                 stddev      0.84326                 0.47277
#         standard error      0.05933                 0.03351
#   99% confidence level      0.13801                 0.07795
#                   skew     -1.00881                 0.14525
#               kurtosis     37.49908                -0.51361
#       time correlation      0.00178                 0.00131
#
#           elasped time      3.10835
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     64.00000 |*                                   64.95824
#                 80     65.00000 |***********************             65.67959
#                108     66.00000 |********************************    66.38024
#
#                 10        > 95% |**                                  67.09984
#
#        mean of 95%     66.07615
#          95th %ile     66.85824
 for      3.11903 seconds

Running:          setsockopt# bin/setsockopt -E -C 200 -L -S -W -N setsockopt -I 200
             prc thr   usecs/call      samples   errors cnt/samp
setsockopt     1   1      2.46941          202        0      500
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      2.36137                 2.36137
#                    max      2.86518                 2.86518
#                   mean      2.52884                 2.52884
#                 median      2.46941                 2.46941
#                 stddev      0.12699                 0.12699
#         standard error      0.00894                 0.00894
#   99% confidence level      0.02078                 0.02078
#                   skew      0.63063                 0.63063
#               kurtosis     -0.73035                -0.73035
#       time correlation     -0.00003                -0.00003
#
#           elasped time      0.27551
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          241
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                191      2.00000 |********************************     2.51336
#
#                 11        > 95% |*                                    2.79774
#
#        mean of 95%      2.51336
#          95th %ile      2.75561
 for      0.29088 seconds

Running:                bind# bin/bind -E -C 200 -L -S -W -N bind -B 200
             prc thr   usecs/call      samples   errors cnt/samp
bind           1   1     15.03376          201        0      200
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.82929                13.82929
#                    max     18.80337                16.10000
#                   mean     14.99051                14.97154
#                 median     15.03505                15.03376
#                 stddev      0.48042                 0.39864
#         standard error      0.03380                 0.02812
#   99% confidence level      0.07862                 0.06540
#                   skew      2.05163                -0.60211
#               kurtosis     18.24666                 0.27734
#       time correlation      0.00100                 0.00045
#
#           elasped time     13.99153
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     13.00000 |*                                   13.89425
#                 81     14.00000 |************************            14.64939
#                105     15.00000 |********************************    15.18957
#
#                 11        > 95% |***                                 15.65433
#
#        mean of 95%     14.93201
#          95th %ile     15.44848
 for     14.00198 seconds

Running:              listen# bin/listen -E -C 200 -L -S -W -N listen -B 800
             prc thr   usecs/call      samples   errors cnt/samp
listen         1   1      1.63716          200        0      800
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.35972                 1.35972
#                    max      2.16964                 2.05604
#                   mean      1.62600                 1.62059
#                 median      1.63716                 1.63716
#                 stddev      0.15733                 0.14844
#         standard error      0.01107                 0.01050
#   99% confidence level      0.02575                 0.02441
#                   skew      0.64720                 0.40395
#               kurtosis      0.90071                 0.26303
#       time correlation     -0.00014                -0.00008
#
#           elasped time      0.26485
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      1.00000 |********************************     1.60101
#
#                 10        > 95% |*                                    1.99252
#
#        mean of 95%      1.60101
#          95th %ile      1.96100
 for      0.28127 seconds

Running:          connection# bin/connection -E -C 200 -L -S -W -N connection -B 256
             prc thr   usecs/call      samples   errors cnt/samp
connection     1   1    375.18616          201        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    371.82316               371.82316
#                    max    380.65916               378.51516
#                   mean    375.16491               375.13758
#                 median    375.19816               375.18616
#                 stddev      1.35463                 1.30097
#         standard error      0.09531                 0.09176
#   99% confidence level      0.22169                 0.21344
#                   skew      0.16446                -0.12543
#               kurtosis      0.61462                -0.32570
#       time correlation      0.01528                 0.01486
#
#           elasped time     40.51902
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    371.00000 |*                                  371.82316
#                 10    372.00000 |*****                              372.50926
#                 31    373.00000 |******************                 373.57784
#                 47    374.00000 |***************************        374.57776
#                 55    375.00000 |********************************   375.44102
#                 46    376.00000 |**************************         376.45271
#
#                 11        > 95% |******                             377.59898
#
#        mean of 95%    374.99507
#          95th %ile    377.11716
 for     40.54090 seconds

Running:             poll_10# bin/poll -E -C 200 -L -S -W -N poll_10 -n 10 -I 250
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_10        1   1      7.72680          195        0      400       10   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      6.65991                 7.13927
#                    max     11.45159                 8.08455
#                   mean      7.70628                 7.69558
#                 median      7.72680                 7.72680
#                 stddev      0.36549                 0.19550
#         standard error      0.02572                 0.01400
#   99% confidence level      0.05982                 0.03256
#                   skew      5.11045                -0.83012
#               kurtosis     53.52087                -0.04389
#       time correlation      0.00094                 0.00018
#
#           elasped time      0.62522
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      7.00000 |********************************     7.68188
#
#                 10        > 95% |*                                    7.94887
#
#        mean of 95%      7.68188
#          95th %ile      7.91431
 for      0.64543 seconds
Running:            poll_100# bin/poll -E -C 200 -L -S -W -N poll_100 -n 100 -I 1000
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_100       1   1    186.22761          194        0      100      100   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    184.98601               184.98601
#                    max    194.13801               187.95817
#                   mean    186.39710               186.25621
#                 median    186.24809               186.22761
#                 stddev      0.97091                 0.59972
#         standard error      0.06831                 0.04306
#   99% confidence level      0.15890                 0.10015
#                   skew      3.29965                 0.27113
#               kurtosis     20.08059                -0.53100
#       time correlation     -0.00126                 0.00076
#
#           elasped time      3.76807
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    184.00000 |*                                  184.98601
#                 70    185.00000 |**********************             185.65081
#                100    186.00000 |********************************   186.45468
#                 13    187.00000 |****                               187.13326
#
#                 10        > 95% |***                                187.49609
#
#        mean of 95%    186.18882
#          95th %ile    187.24905
 for      3.79981 seconds
Running:           poll_1000# bin/poll -E -C 200 -L -S -W -N poll_1000 -n 1000 -I 5000
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_1000      1   1   1917.44170          189        0       20     1000   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1909.59530              1909.59530
#                    max   1963.29130              1927.69450
#                   mean   1918.86453              1917.49940
#                 median   1917.88970              1917.44170
#                 stddev      6.74511                 3.72179
#         standard error      0.47458                 0.27072
#   99% confidence level      1.10388                 0.62970
#                   skew      2.75710                 0.25901
#               kurtosis     11.79270                -0.18131
#       time correlation      0.00593                 0.01460
#
#           elasped time      7.75598
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   1909.00000 |***                               1909.71690
#                  5   1910.00000 |********                          1910.57066
#                  5   1911.00000 |********                          1911.38986
#                 13   1912.00000 |********************              1912.65450
#                  7   1913.00000 |***********                       1913.77541
#                 19   1914.00000 |******************************    1914.53408
#                 20   1915.00000 |********************************  1915.50250
#                 17   1916.00000 |***************************       1916.55549
#                 17   1917.00000 |***************************       1917.53055
#                 19   1918.00000 |******************************    1918.52701
#                 20   1919.00000 |********************************  1919.57290
#                 14   1920.00000 |**********************            1920.48719
#                 13   1921.00000 |********************              1921.53179
#                  4   1922.00000 |******                            1922.47530
#                  4   1923.00000 |******                            1923.64010
#
#                 10        > 95% |****************                  1925.68874
#
#        mean of 95%   1917.04190
#          95th %ile   1924.13610
 for      7.81350 seconds

Running:            poll_w10# bin/poll -E -C 200 -L -S -W -N poll_w10 -n 10 -I 250 -w 1
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w10       1   1      6.54155          198        0      400       10   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      6.35723                 6.35723
#                    max      7.87915                 6.72394
#                   mean      6.55011                 6.53654
#                 median      6.54410                 6.54155
#                 stddev      0.13573                 0.07609
#         standard error      0.00955                 0.00541
#   99% confidence level      0.02221                 0.01258
#                   skew      5.48884                -0.18058
#               kurtosis     47.69598                -0.62320
#       time correlation     -0.00002                -0.00001
#
#           elasped time      0.53160
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                188      6.00000 |********************************     6.52905
#
#                 10        > 95% |*                                    6.67735
#
#        mean of 95%      6.52905
#          95th %ile      6.63178
 for      0.55020 seconds
Running:           poll_w100# bin/poll -E -C 200 -L -S -W -N poll_w100 -n 100 -I 2000 -w 10
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w100      1   1    185.47792          192        0       50      100   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    184.37712               184.37712
#                    max    204.25808               187.35696
#                   mean    185.91102               185.63957
#                 median    185.49840               185.47792
#                 stddev      1.69925                 0.58745
#         standard error      0.11956                 0.04240
#   99% confidence level      0.27809                 0.09861
#                   skew      7.13545                 0.58240
#               kurtosis     67.73824                -0.13668
#       time correlation     -0.00323                 0.00076
#
#           elasped time      1.88047
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          216
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 20    184.00000 |*****                              184.79466
#                116    185.00000 |********************************   185.42041
#                 46    186.00000 |************                       186.26907
#
#                 10        > 95% |**                                 186.97603
#
#        mean of 95%    185.56614
#          95th %ile    186.73232
 for      1.90264 seconds
Running:          poll_w1000# bin/poll -E -C 200 -L -S -W -N poll_w1000 -n 1000 -I 20000 -w 100
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w1000     1   1   1913.76080          198        0        5     1000   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1899.73200              1899.73200
#                    max   2197.56240              1934.34320
#                   mean   1916.91416              1914.27926
#                 median   1913.76080              1913.76080
#                 stddev     23.52681                 6.69506
#         standard error      1.65534                 0.47580
#   99% confidence level      3.85032                 1.10670
#                   skew      9.27110                 0.59310
#               kurtosis    101.49524                 0.00167
#       time correlation     -0.01751                 0.01235
#
#           elasped time      1.93956
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1899.00000 |**                                1899.73200
#                  1   1900.00000 |**                                1900.75600
#                  0   1901.00000 |                                           -
#                  0   1902.00000 |                                           -
#                  3   1903.00000 |******                            1903.50373
#                  3   1904.00000 |******                            1904.69840
#                  7   1905.00000 |****************                  1905.67851
#                 14   1906.00000 |********************************  1906.53429
#                 11   1907.00000 |*************************         1907.64473
#                  7   1908.00000 |****************                  1908.56766
#                 13   1909.00000 |*****************************     1909.53877
#                  9   1910.00000 |********************              1910.58071
#                 14   1911.00000 |********************************  1911.61771
#                  9   1912.00000 |********************              1912.70836
#                 14   1913.00000 |********************************  1913.56697
#                 10   1914.00000 |**********************            1914.46736
#                 11   1915.00000 |*************************         1915.65520
#                 12   1916.00000 |***************************       1916.58107
#                  9   1917.00000 |********************              1917.44720
#                  8   1918.00000 |******************                1918.61200
#                  7   1919.00000 |****************                  1919.58297
#                  6   1920.00000 |*************                     1920.57040
#                  2   1921.00000 |****                              1921.95280
#                  6   1922.00000 |*************                     1922.63547
#                  3   1923.00000 |******                            1923.42053
#                  1   1924.00000 |**                                1924.35920
#                  5   1925.00000 |***********                       1925.85424
#                  2   1926.00000 |****                              1926.56080
#
#                 10        > 95% |**********************            1930.17040
#
#        mean of 95%   1913.43399
#          95th %ile   1927.78960
 for      1.99820 seconds

Running:           select_10# bin/select -E -C 200 -L -S -W -N select_10 -n 10 -I 250
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_10      1   1      6.75656          199        0      400       10   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      6.30663                 6.30663
#                    max      8.23944                 7.33448
#                   mean      6.77476                 6.76054
#                 median      6.76168                 6.75656
#                 stddev      0.22888                 0.19349
#         standard error      0.01610                 0.01372
#   99% confidence level      0.03746                 0.03190
#                   skew      1.53107                 0.17169
#               kurtosis      7.40997                -0.34728
#       time correlation     -0.00006                -0.00019
#
#           elasped time      0.54969
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      6.00000 |********************************     6.72420
#                  9      7.00000 |*                                    7.03616
#
#                 10        > 95% |*                                    7.16673
#
#        mean of 95%      6.73905
#          95th %ile      7.06696
 for      0.57562 seconds
Running:          select_100# bin/select -E -C 200 -L -S -W -N select_100 -n 100 -I 1000
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_100     1   1    177.62839          193        0      100      100   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    176.45847               176.45847
#                    max    213.78839               179.18743
#                   mean    178.17382               177.64505
#                 median    177.64887               177.62839
#                 stddev      3.61657                 0.54126
#         standard error      0.25446                 0.03896
#   99% confidence level      0.59188                 0.09062
#                   skew      8.03414                 0.45008
#               kurtosis     68.84343                -0.20268
#       time correlation      0.01059                 0.00355
#
#           elasped time      3.60172
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          233
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 22    176.00000 |*****                              176.84689
#                118    177.00000 |********************************   177.48110
#                 43    178.00000 |***********                        178.21278
#
#                 10        > 95% |**                                 178.89431
#
#        mean of 95%    177.57678
#          95th %ile    178.65751
 for      3.63043 seconds
Running:         select_1000# bin/select -E -C 200 -L -S -W -N select_1000 -n 1000 -I 5000
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_1000    1   1   1855.78400          193        0       20     1000   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1844.63520              1844.63520
#                    max   2095.74560              1869.18560
#                   mean   1857.95670              1855.50996
#                 median   1856.33440              1855.78400
#                 stddev     19.10228                 4.79432
#         standard error      1.34403                 0.34510
#   99% confidence level      3.12622                 0.80271
#                   skew     10.04021                 0.00190
#               kurtosis    117.85602                -0.14003
#       time correlation     -0.02820                 0.00986
#
#           elasped time      7.50947
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1844.00000 |*                                 1844.63520
#                  2   1845.00000 |**                                1845.35840
#                  7   1846.00000 |*********                         1846.51680
#                  5   1847.00000 |******                            1847.36928
#                  3   1848.00000 |****                              1848.48800
#                 10   1849.00000 |*************                     1849.31872
#                  6   1850.00000 |********                          1850.35467
#                 14   1851.00000 |*******************               1851.55177
#                 10   1852.00000 |*************                     1852.53664
#                  9   1853.00000 |************                      1853.72747
#                 17   1854.00000 |***********************           1854.43247
#                 13   1855.00000 |******************                1855.38622
#                 12   1856.00000 |****************                  1856.47307
#                 23   1857.00000 |********************************  1857.54261
#                 19   1858.00000 |**************************        1858.42349
#                 18   1859.00000 |*************************         1859.52018
#                  7   1860.00000 |*********                         1860.51086
#                  4   1861.00000 |*****                             1861.33600
#                  3   1862.00000 |****                              1862.55520
#
#                 10        > 95% |*************                     1865.96640
#
#        mean of 95%   1854.93857
#          95th %ile   1863.28480
 for      7.56282 seconds

Running:          select_w10# bin/select -E -C 200 -L -S -W -N select_w10 -n 10 -I 250 -w 1
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w10     1   1      7.91687          193        0      400       10   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      7.83687                 7.83687
#                    max      9.36647                 7.97703
#                   mean      7.91918                 7.90268
#                 median      7.91687                 7.91687
#                 stddev      0.11953                 0.03375
#         standard error      0.00841                 0.00243
#   99% confidence level      0.01956                 0.00565
#                   skew      9.28065                -1.01529
#               kurtosis    105.43768                -0.15083
#       time correlation     -0.00001                -0.00003
#
#           elasped time      0.64226
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          228
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                183      7.00000 |********************************     7.89992
#
#                 10        > 95% |*                                    7.95329
#
#        mean of 95%      7.89992
#          95th %ile      7.93927
 for      0.66096 seconds
Running:         select_w100# bin/select -E -C 200 -L -S -W -N select_w100 -n 100 -I 2000 -w 10
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w100    1   1    176.93228          190        0       50      100   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    175.79564               175.79564
#                    max    242.23276               178.57580
#                   mean    177.63849               177.06950
#                 median    176.95276               176.93228
#                 stddev      4.79950                 0.51089
#         standard error      0.33769                 0.03706
#   99% confidence level      0.78547                 0.08621
#                   skew     12.24155                 0.67806
#               kurtosis    159.90683                 0.03116
#       time correlation     -0.00111                 0.00003
#
#           elasped time      1.79677
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          234
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    175.00000 |*                                  175.79564
#                112    176.00000 |********************************   176.74622
#                 67    177.00000 |*******************                177.45574
#
#                 10        > 95% |**                                 178.22969
#
#        mean of 95%    177.00504
#          95th %ile    178.01772
 for      1.81946 seconds
Running:        select_w1000# bin/select -E -C 200 -L -S -W -N select_w1000 -n 1000 -I 20000 -w 100
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w1000   1   1   1851.76100          193        0        5     1000   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1842.59620              1842.59620
#                    max   1993.73860              1869.52740
#                   mean   1855.39721              1853.29435
#                 median   1851.96580              1851.76100
#                 stddev     13.63701                 5.65007
#         standard error      0.95950                 0.40670
#   99% confidence level      2.23179                 0.94599
#                   skew      6.20791                 0.59603
#               kurtosis     53.70784                 0.16951
#       time correlation     -0.00982                 0.01926
#
#           elasped time      1.87714
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          203
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3   1842.00000 |***                               1842.71567
#                  3   1843.00000 |***                               1843.34713
#                  6   1844.00000 |******                            1844.62713
#                  7   1845.00000 |********                          1845.45609
#                  3   1846.00000 |***                               1846.69220
#                  2   1847.00000 |**                                1847.25540
#                  9   1848.00000 |**********                        1848.58091
#                 24   1849.00000 |***************************       1849.62553
#                 21   1850.00000 |************************          1850.68336
#                 28   1851.00000 |********************************  1851.56717
#                  8   1852.00000 |*********                         1852.54180
#                  7   1853.00000 |********                          1853.63346
#                  4   1854.00000 |****                              1854.71780
#                 10   1855.00000 |***********                       1855.62148
#                  4   1856.00000 |****                              1856.49700
#                 10   1857.00000 |***********                       1857.51076
#                 14   1858.00000 |****************                  1858.58889
#                 12   1859.00000 |*************                     1859.61593
#                  3   1860.00000 |***                               1860.24313
#                  2   1861.00000 |**                                1861.38660
#                  2   1862.00000 |**                                1862.25700
#                  1   1863.00000 |*                                 1863.58820
#
#                 10        > 95% |***********                       1867.14148
#
#        mean of 95%   1852.53767
#          95th %ile   1864.56100
 for      1.95368 seconds

Running:               semop# bin/semop -E -C 200 -L -S -W -N semop -I 200
             prc thr   usecs/call      samples   errors cnt/samp
semop          1   1      0.59347          186   201798      500
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.58118                 0.58118
#                    max      0.94982                 0.59756
#                   mean      0.59669                 0.59077
#                 median      0.59347                 0.59347
#                 stddev      0.03002                 0.00525
#         standard error      0.00211                 0.00038
#   99% confidence level      0.00491                 0.00090
#                   skew      8.62209                -0.31958
#               kurtosis     93.43267                -1.43323
#       time correlation     -0.00007                -0.00003
#
#           elasped time      0.06262
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176      0.00000 |********************************     0.59039
#
#                 10        > 95% |*                                    0.59756
#
#        mean of 95%      0.59039
#          95th %ile      0.59756
#
# WARNINGS
#     Errors occured during benchmark.
 for      0.08776 seconds

Running:           sigaction# bin/sigaction -E -C 200 -L -S -W -N sigaction -I 100
             prc thr   usecs/call      samples   errors cnt/samp
sigaction      1   1      1.52377          192        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.47973                 1.47973
#                    max      1.99583                 1.57983
#                   mean      1.53054                 1.52162
#                 median      1.52402                 1.52377
#                 stddev      0.05033                 0.01971
#         standard error      0.00354                 0.00142
#   99% confidence level      0.00824                 0.00331
#                   skew      5.27743                 0.02454
#               kurtosis     38.93898                -0.29199
#       time correlation      0.00002                 0.00001
#
#           elasped time      0.31151
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          203
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      1.00000 |********************************     1.51950
#
#                 10        > 95% |*                                    1.56027
#
#        mean of 95%      1.51950
#          95th %ile      1.55167
 for      0.35159 seconds
Running:              signal# bin/signal -E -C 200 -L -S -W -N signal -I 500
             prc thr   usecs/call      samples   errors cnt/samp
signal         1   1     15.87862          189        0      200
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.18870                15.60342
#                    max     18.26838                16.10902
#                   mean     15.84658                15.83700
#                 median     15.87862                15.87862
#                 stddev      0.24182                 0.09214
#         standard error      0.01701                 0.00670
#   99% confidence level      0.03958                 0.01559
#                   skew      5.69074                -0.71350
#               kurtosis     53.17034                -0.13574
#       time correlation     -0.00036                -0.00023
#
#           elasped time      0.64267
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                179     15.00000 |********************************    15.82940
#
#                 10        > 95% |*                                   15.97308
#
#        mean of 95%     15.82940
#          95th %ile     15.92470
 for      0.67319 seconds
Running:         sigprocmask# bin/sigprocmask -E -C 200 -L -S -W -N sigprocmask -I 100
             prc thr   usecs/call      samples   errors cnt/samp
sigprocmask    1   1      1.04784          196        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.01686                 1.01686
#                    max      1.57878                 1.08675
#                   mean      1.05557                 1.04985
#                 median      1.04860                 1.04784
#                 stddev      0.04440                 0.01308
#         standard error      0.00312                 0.00093
#   99% confidence level      0.00727                 0.00217
#                   skew      8.79318                 0.52588
#               kurtosis     95.06555                -0.07679
#       time correlation      0.00000                 0.00001
#
#           elasped time      0.21536
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      1.00000 |********************************     1.04824
#
#                 10        > 95% |*                                    1.07976
#
#        mean of 95%      1.04824
#          95th %ile      1.07471
 for      0.22701 seconds

Running:          pthread_16# bin/pthread_create -E -C 200 -L -S -W -N pthread_16 -B 16
             prc thr   usecs/call      samples   errors cnt/samp
pthread_16     1   1   1214.11444          192        0       16
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1199.29844              1202.22644
#                    max   1632.61044              1224.61044
#                   mean   1219.51222              1213.92644
#                 median   1214.22644              1214.11444
#                 stddev     42.93567                 4.32705
#         standard error      3.02094                 0.31228
#   99% confidence level      7.02671                 0.72636
#                   skew      8.37837                -0.17881
#               kurtosis     71.95881                 0.01899
#       time correlation     -0.13535                -0.01363
#
#           elasped time      7.00765
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   1202.00000 |**                                1202.38644
#                  1   1203.00000 |*                                 1203.81044
#                  3   1204.00000 |****                              1204.73310
#                  2   1205.00000 |**                                1205.45844
#                  5   1206.00000 |******                            1206.36404
#                  7   1207.00000 |*********                         1207.56587
#                  7   1208.00000 |*********                         1208.60358
#                  6   1209.00000 |********                          1209.43177
#                 11   1210.00000 |***************                   1210.56971
#                 13   1211.00000 |******************                1211.41290
#                 15   1212.00000 |********************              1212.57204
#                 23   1213.00000 |********************************  1213.49113
#                 16   1214.00000 |**********************            1214.41244
#                 20   1215.00000 |***************************       1215.51284
#                 17   1216.00000 |***********************           1216.50879
#                 12   1217.00000 |****************                  1217.53710
#                 13   1218.00000 |******************                1218.44182
#                  8   1219.00000 |***********                       1219.51644
#                  1   1220.00000 |*                                 1220.05044
#
#                 10        > 95% |*************                     1222.71924
#
#        mean of 95%   1213.44332
#          95th %ile   1220.35444
 for      7.02991 seconds
Running:          pthread_32# bin/pthread_create -E -C 200 -L -S -W -N pthread_32 -B 32
             prc thr   usecs/call      samples   errors cnt/samp
pthread_32     1   1   1397.71303          198        0       32
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1388.40103              1388.40103
#                    max   1600.74503              1408.96103
#                   mean   1399.00060              1397.75469
#                 median   1397.83303              1397.71303
#                 stddev     14.89133                 3.80022
#         standard error      1.04775                 0.27007
#   99% confidence level      2.43707                 0.62818
#                   skew     12.31355                 0.11646
#               kurtosis    163.80761                -0.04007
#       time correlation     -0.03379                -0.00201
#
#           elasped time     15.98664
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   1388.00000 |**                                1388.44903
#                  4   1389.00000 |*****                             1389.60703
#                  1   1390.00000 |*                                 1390.64903
#                  3   1391.00000 |***                               1391.70236
#                 13   1392.00000 |****************                  1392.59549
#                 11   1393.00000 |**************                    1393.50649
#                 10   1394.00000 |************                      1394.53463
#                 18   1395.00000 |***********************           1395.64236
#                 21   1396.00000 |**************************        1396.40827
#                 23   1397.00000 |*****************************     1397.58955
#                 25   1398.00000 |********************************  1398.44231
#                 18   1399.00000 |***********************           1399.49703
#                 10   1400.00000 |************                      1400.53223
#                  9   1401.00000 |***********                       1401.42681
#                 11   1402.00000 |**************                    1402.43958
#                  7   1403.00000 |********                          1403.46503
#                  2   1404.00000 |**                                1404.05703
#
#                 10        > 95% |************                      1405.66183
#
#        mean of 95%   1397.33410
#          95th %ile   1404.18503
 for     16.02841 seconds
Running:         pthread_128# bin/pthread_create -E -C 200 -L -S -W -N pthread_128 -B 128
             prc thr   usecs/call      samples   errors cnt/samp
pthread_128    1   1   1551.28625          196        0      128
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1543.31025              1543.31025
#                    max   1606.34225              1559.77825
#                   mean   1551.81976              1550.92519
#                 median   1551.41225              1551.28625
#                 stddev      6.48990                 3.29141
#         standard error      0.45663                 0.23510
#   99% confidence level      1.06212                 0.54684
#                   skew      4.47105                -0.09944
#               kurtosis     29.33074                -0.26314
#       time correlation     -0.01083                 0.00204
#
#           elasped time     70.62318
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3   1543.00000 |***                               1543.50025
#                  7   1544.00000 |*******                           1544.47996
#                  6   1545.00000 |******                            1545.59358
#                 11   1546.00000 |***********                       1546.46007
#                 11   1547.00000 |***********                       1547.62243
#                 19   1548.00000 |*******************               1548.56014
#                 13   1549.00000 |*************                     1549.46933
#                 26   1550.00000 |**************************        1550.52433
#                 18   1551.00000 |******************                1551.54092
#                 32   1552.00000 |********************************  1552.49550
#                 16   1553.00000 |****************                  1553.45888
#                 17   1554.00000 |*****************                 1554.38849
#                  7   1555.00000 |*******                           1555.37854
#
#                 10        > 95% |**********                        1557.64425
#
#        mean of 95%   1550.56395
#          95th %ile   1555.83425
 for     70.63987 seconds
Running:         pthread_512# bin/pthread_create -E -C 200 -L -S -W -N pthread_512 -B 512
             prc thr   usecs/call      samples   errors cnt/samp
pthread_512    1   1    939.31198          194        0      512
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    905.69698               905.69698
#                    max   1076.64198               994.85898
#                   mean    944.04227               939.59076
#                 median    940.24948               939.31198
#                 stddev     31.41462                22.55192
#         standard error      2.21033                 1.61913
#   99% confidence level      5.14122                 3.76611
#                   skew      1.67486                 0.33403
#               kurtosis      4.11593                -1.07251
#       time correlation      0.36334                 0.35893
#
#           elasped time    171.49606
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          268
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    903.00000 |**                                 905.69698
#                  3    906.00000 |******                             907.43564
#                 12    909.00000 |************************           910.70285
#                 16    912.00000 |********************************   913.48254
#                 15    915.00000 |******************************     916.34651
#                 11    918.00000 |**********************             919.27807
#                 16    921.00000 |********************************   922.56454
#                  5    924.00000 |**********                         924.59518
#                  0    927.00000 |                                           -
#                  2    930.00000 |****                               932.08548
#                  5    933.00000 |**********                         934.55018
#                  7    936.00000 |**************                     937.39098
#                 15    939.00000 |******************************     940.29351
#                 11    942.00000 |**********************             942.87566
#                  2    945.00000 |****                               946.22798
#                  7    948.00000 |**************                     949.53805
#                  8    951.00000 |****************                   952.55929
#                 13    954.00000 |**************************         955.25898
#                  9    957.00000 |******************                 958.61231
#                  0    960.00000 |                                           -
#                  1    963.00000 |**                                 965.67948
#                  3    966.00000 |******                             968.26181
#                  7    969.00000 |**************                     970.59962
#                 13    972.00000 |**************************         973.62055
#                  2    975.00000 |****                               975.15873
#
#                 10        > 95% |********************               981.48688
#
#        mean of 95%    937.31379
#          95th %ile    975.34898
 for    171.52960 seconds

Running:             fork_10# bin/fork -E -C 200 -L -S -W -N fork_10 -B 10
             prc thr   usecs/call      samples   errors cnt/samp
fork_10        1   1   1839.08050          200        0       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1600.97490              1600.97490
#                    max   2154.98450              1961.39730
#                   mean   1822.23367              1819.38629
#                 median   1839.25970              1839.08050
#                 stddev     78.71111                73.56329
#         standard error      5.53809                 5.20171
#   99% confidence level     12.88161                12.09918
#                   skew      0.17298                -0.29976
#               kurtosis      0.72262                -0.75669
#       time correlation     -0.21584                -0.15878
#
#           elasped time      4.05001
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          235
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1600.00000 |*                                 1600.97490
#                  0   1620.00000 |                                           -
#                  0   1640.00000 |                                           -
#                  3   1660.00000 |**                                1675.75250
#                 15   1680.00000 |***********                       1689.97927
#                  2   1700.00000 |*                                 1713.56370
#                  3   1720.00000 |**                                1735.37490
#                 20   1740.00000 |***************                   1752.64722
#                 34   1760.00000 |**************************        1766.29217
#                  2   1780.00000 |*                                 1784.52690
#                  2   1800.00000 |*                                 1815.17010
#                 23   1820.00000 |*****************                 1834.27104
#                 41   1840.00000 |********************************  1846.45580
#                  5   1860.00000 |***                               1868.97106
#                  4   1880.00000 |***                               1895.12530
#                 35   1900.00000 |***************************       1909.57997
#
#                 10        > 95% |*******                           1930.62354
#
#        mean of 95%   1813.53170
#          95th %ile   1919.87410
 for      4.06625 seconds
Running:            fork_100# bin/fork -E -C 200 -L -S -W -N fork_100 -B 100 -C 100
             prc thr   usecs/call      samples   errors cnt/samp
fork_100       1   1   1987.50756          101        0      100
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1955.31812              1955.31812
#                    max   2138.92644              2044.08868
#                   mean   1992.70004              1991.25226
#                 median   1987.97604              1987.50756
#                 stddev     24.24887                19.44092
#         standard error      2.40100                 1.93444
#   99% confidence level      5.58472                 4.49952
#                   skew      2.25964                 0.43682
#               kurtosis     10.95559                -0.47882
#       time correlation     -0.04564                 0.02766
#
#           elasped time     20.80164
#      number of samples          101
#     number of outliers            1
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1953.00000 |**                                1955.31812
#                  2   1956.00000 |*****                             1956.66852
#                  0   1959.00000 |                                           -
#                  2   1962.00000 |*****                             1963.35780
#                  5   1965.00000 |*************                     1966.78180
#                  5   1968.00000 |*************                     1969.74423
#                  4   1971.00000 |**********                        1973.71044
#                 12   1974.00000 |********************************  1975.94340
#                  3   1977.00000 |********                          1977.73433
#                  6   1980.00000 |****************                  1980.99151
#                  9   1983.00000 |************************          1984.88185
#                  6   1986.00000 |****************                  1987.99780
#                  2   1989.00000 |*****                             1990.46692
#                  3   1992.00000 |********                          1993.19161
#                  3   1995.00000 |********                          1996.39076
#                  3   1998.00000 |********                          1999.93465
#                  4   2001.00000 |**********                        2002.41764
#                  8   2004.00000 |*********************             2005.20548
#                  5   2007.00000 |*************                     2008.25534
#                  5   2010.00000 |*************                     2011.24439
#                  2   2013.00000 |*****                             2013.90244
#                  2   2016.00000 |*****                             2017.19204
#                  1   2019.00000 |**                                2019.57924
#                  2   2022.00000 |*****                             2022.54244
#
#                  6        > 95% |****************                  2032.68132
#
#        mean of 95%   1988.63568
#          95th %ile   2025.40580
 for     20.84273 seconds
Running:           fork_1000# bin/fork -E -C 200 -L -S -W -N fork_1000 -B 1000 -C 50
             prc thr   usecs/call      samples   errors cnt/samp
fork_1000      1   1   2047.73764           43        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1857.14461              2034.39466
#                    max   2086.43178              2059.96983
#                   mean   2034.99381              2048.06486
#                 median   2047.42583              2047.73764
#                 stddev     40.64079                 5.47321
#         standard error      5.63586                 0.83466
#   99% confidence level     13.10902                 1.94141
#                   skew     -2.55030                -0.01243
#               kurtosis      6.52066                -0.42977
#       time correlation      0.09323                 0.14848
#
#           elasped time    108.81208
#      number of samples           43
#     number of outliers            9
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   2034.00000 |*****                             2034.39466
#                  0   2035.00000 |                                           -
#                  0   2036.00000 |                                           -
#                  0   2037.00000 |                                           -
#                  0   2038.00000 |                                           -
#                  0   2039.00000 |                                           -
#                  2   2040.00000 |**********                        2040.56989
#                  3   2041.00000 |****************                  2041.52571
#                  5   2042.00000 |**************************        2042.55195
#                  0   2043.00000 |                                           -
#                  3   2044.00000 |****************                  2044.64951
#                  1   2045.00000 |*****                             2045.95076
#                  2   2046.00000 |**********                        2046.65578
#                  6   2047.00000 |********************************  2047.48044
#                  2   2048.00000 |**********                        2048.82359
#                  2   2049.00000 |**********                        2049.29284
#                  3   2050.00000 |****************                  2050.41403
#                  0   2051.00000 |                                           -
#                  4   2052.00000 |*********************             2052.36753
#                  5   2053.00000 |**************************        2053.64924
#                  0   2054.00000 |                                           -
#                  1   2055.00000 |*****                             2055.50160
#
#                  3        > 95% |****************                  2058.37717
#
#        mean of 95%   2047.29144
#          95th %ile   2056.46877
 for    108.84954 seconds

Running:             exit_10# bin/exit -E -C 200 -L -S -W -N exit_10 -B 10
             prc thr   usecs/call      samples   errors cnt/samp
exit_10        1   1   1329.66700          202        0       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    756.79020               756.79020
#                    max   1848.27180              1848.27180
#                   mean   1215.36972              1215.36972
#                 median   1329.66700              1329.66700
#                 stddev    270.37568               270.37568
#         standard error     19.02357                19.02357
#   99% confidence level     44.24882                44.24882
#                   skew     -0.27587                -0.27587
#               kurtosis     -1.58161                -1.58161
#       time correlation     -0.17444                -0.17444
#
#           elasped time      4.02954
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    750.00000 |**                                 763.77047
#                  1    780.00000 |*                                  790.47980
#                  7    810.00000 |**                                 837.52163
#                 15    840.00000 |******                             844.86273
#                  3    870.00000 |*                                  892.81153
#                 22    900.00000 |*********                          908.98336
#                  3    930.00000 |*                                  951.97313
#                 13    960.00000 |*****                              974.69740
#                  0    990.00000 |                                           -
#                 12   1020.00000 |****                              1042.34540
#                  5   1050.00000 |**                                1055.75724
#                  0   1080.00000 |                                           -
#                  0   1110.00000 |                                           -
#                  0   1140.00000 |                                           -
#                  0   1170.00000 |                                           -
#                  0   1200.00000 |                                           -
#                  1   1230.00000 |*                                 1256.88620
#                  6   1260.00000 |**                                1266.20460
#                  1   1290.00000 |*                                 1319.06860
#                 11   1320.00000 |****                              1329.35282
#                  0   1350.00000 |                                           -
#                  3   1380.00000 |*                                 1399.87073
#                  1   1410.00000 |*                                 1432.88620
#                 78   1440.00000 |********************************  1463.32329
#                  3   1470.00000 |*                                 1472.25047
#
#                 11        > 95% |****                              1511.04300
#
#        mean of 95%   1198.34141
#          95th %ile   1473.99980
 for      4.06107 seconds
Running:            exit_100# bin/exit -E -C 200 -L -S -W -N exit_100 -B 100
             prc thr   usecs/call      samples   errors cnt/samp
exit_100       1   1    804.44668          202        0      100
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    776.55804               776.55804
#                    max    869.70620               869.70620
#                   mean    807.49521               807.49521
#                 median    804.44668               804.44668
#                 stddev     21.08408                21.08408
#         standard error      1.48347                 1.48347
#   99% confidence level      3.45055                 3.45055
#                   skew      0.54440                 0.54440
#               kurtosis     -0.65965                -0.65965
#       time correlation     -0.01075                -0.01075
#
#           elasped time     40.89735
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          260
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    774.00000 |****                               776.79441
#                  9    777.00000 |*************                      778.13272
#                  5    780.00000 |*******                            781.66524
#                 22    783.00000 |********************************   784.53197
#                  6    786.00000 |********                           787.01777
#                  8    789.00000 |***********                        790.78844
#                 22    792.00000 |********************************   793.40005
#                  7    795.00000 |**********                         796.68842
#                  9    798.00000 |*************                      799.68224
#                  6    801.00000 |********                           802.66705
#                 16    804.00000 |***********************            805.14732
#                  7    807.00000 |**********                         808.73943
#                 13    810.00000 |******************                 810.99043
#                  9    813.00000 |*************                      814.90200
#                  5    816.00000 |*******                            817.84982
#                  6    819.00000 |********                           820.57681
#                  1    822.00000 |*                                  823.58524
#                  3    825.00000 |****                               826.67943
#                  2    828.00000 |**                                 830.30268
#                 10    831.00000 |**************                     832.35631
#                 11    834.00000 |****************                   835.50553
#                  6    837.00000 |********                           838.45116
#                  3    840.00000 |****                               840.42407
#                  2    843.00000 |**                                 843.76188
#
#                 11        > 95% |****************                   851.65052
#
#        mean of 95%    804.95223
#          95th %ile    845.86748
 for     40.93884 seconds
Running:           exit_1000# bin/exit -E -C 200 -L -S -W -N exit_1000 -B 1000 -C 50
             prc thr   usecs/call      samples   errors cnt/samp
exit_1000      1   1    793.73877           49        0     1000
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    785.13282               785.13282
#                    max    825.10159               808.19586
#                   mean    796.07268               794.73970
#                 median    794.54082               793.73877
#                 stddev      7.41671                 5.00910
#         standard error      1.02851                 0.71559
#   99% confidence level      2.39232                 1.66445
#                   skew      1.76698                 0.86204
#               kurtosis      3.66616                 0.62400
#       time correlation     -0.00697                 0.01796
#
#           elasped time    107.08107
#      number of samples           49
#     number of outliers            3
#      getnsecs overhead          237
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    785.00000 |*****                              785.13282
#                  0    786.00000 |                                           -
#                  2    787.00000 |**********                         787.16674
#                  1    788.00000 |*****                              788.79183
#                  2    789.00000 |**********                         789.41224
#                  4    790.00000 |*********************              790.75387
#                  5    791.00000 |**************************         791.69185
#                  4    792.00000 |*********************              792.48680
#                  6    793.00000 |********************************   793.41988
#                  4    794.00000 |*********************              794.50108
#                  4    795.00000 |*********************              795.41211
#                  5    796.00000 |**************************         796.24184
#                  2    797.00000 |**********                         797.36719
#                  2    798.00000 |**********                         798.62235
#                  1    799.00000 |*****                              799.34875
#                  0    800.00000 |                                           -
#                  1    801.00000 |*****                              801.52783
#                  0    802.00000 |                                           -
#                  0    803.00000 |                                           -
#                  2    804.00000 |**********                         804.41090
#
#                  3        > 95% |****************                   806.89410
#
#        mean of 95%    793.94703
#          95th %ile    804.71477
 for    107.09266 seconds

Running:      exit_10_nolibc# bin/exit -E -C 200 -L -S -W -N exit_10_nolibc -e -B 10
             prc thr   usecs/call      samples   errors cnt/samp
exit_10_nolibc   1   1    726.86370          202        0       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    448.56610               448.56610
#                    max   1170.38370              1170.38370
#                   mean    797.00884               797.00884
#                 median    726.86370               726.86370
#                 stddev    252.23194               252.23194
#         standard error     17.74698                17.74698
#   99% confidence level     41.27947                41.27947
#                   skew      0.39099                 0.39099
#               kurtosis     -1.44982                -1.44982
#       time correlation      0.08077                 0.08077
#
#           elasped time      3.39701
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    420.00000 |*                                  449.07810
#                  3    450.00000 |**                                 456.51063
#                  0    480.00000 |                                           -
#                 45    510.00000 |********************************   522.64510
#                  3    540.00000 |**                                 545.53037
#                 10    570.00000 |*******                            590.89954
#                  1    600.00000 |*                                  601.57730
#                  2    630.00000 |*                                  653.68610
#                 24    660.00000 |*****************                  675.40343
#                  4    690.00000 |**                                 698.74850
#                 27    720.00000 |*******************                731.89173
#                  4    750.00000 |**                                 753.84610
#                  7    780.00000 |****                               794.95239
#                  0    810.00000 |                                           -
#                  0    840.00000 |                                           -
#                  0    870.00000 |                                           -
#                  0    900.00000 |                                           -
#                  6    930.00000 |****                               954.32823
#                  1    960.00000 |*                                  962.25570
#                  4    990.00000 |**                                1011.98370
#                  0   1020.00000 |                                           -
#                  1   1050.00000 |*                                 1073.48770
#                  0   1080.00000 |                                           -
#                  4   1110.00000 |**                                1134.60770
#                 43   1140.00000 |******************************    1147.24130
#
#                 11        > 95% |*******                           1157.20668
#
#        mean of 95%    776.26446
#          95th %ile   1152.69410
 for      3.40849 seconds

Running:                exec# bin/exec -E -C 200 -L -S -W -N exec -B 10
             prc thr   usecs/call      samples   errors cnt/samp
exec           1   1   2606.05890          195        0       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   2589.36770              2589.36770
#                    max   2690.28290              2630.68610
#                   mean   2607.08024              2605.54690
#                 median   2606.67330              2606.05890
#                 stddev     12.14856                 8.59465
#         standard error      0.85477                 0.61548
#   99% confidence level      1.98819                 1.43160
#                   skew      2.33157                 0.28605
#               kurtosis     11.13149                -0.40903
#       time correlation     -0.01886                -0.00538
#
#           elasped time      5.28197
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          211
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3   2589.00000 |******                            2589.64077
#                  1   2590.00000 |**                                2590.77570
#                  2   2591.00000 |****                              2591.47970
#                  3   2592.00000 |******                            2592.75543
#                  7   2593.00000 |****************                  2593.52953
#                  7   2594.00000 |****************                  2594.42553
#                  7   2595.00000 |****************                  2595.44587
#                  9   2596.00000 |********************              2596.47597
#                  7   2597.00000 |****************                  2597.62919
#                 11   2598.00000 |*************************         2598.48363
#                 10   2599.00000 |**********************            2599.56930
#                  3   2600.00000 |******                            2600.64023
#                  4   2601.00000 |*********                         2601.47650
#                  5   2602.00000 |***********                       2602.85890
#                  8   2603.00000 |******************                2603.61730
#                  7   2604.00000 |****************                  2604.62530
#                  3   2605.00000 |******                            2605.64077
#                  5   2606.00000 |***********                       2606.41218
#                  8   2607.00000 |******************                2607.40610
#                 14   2608.00000 |********************************  2608.63353
#                  9   2609.00000 |********************              2609.47792
#                  9   2610.00000 |********************              2610.51046
#                  9   2611.00000 |********************              2611.62548
#                  4   2612.00000 |*********                         2612.48450
#                  8   2613.00000 |******************                2613.59170
#                  8   2614.00000 |******************                2614.48130
#                  5   2615.00000 |***********                       2615.51554
#                  4   2616.00000 |*********                         2616.75970
#                  4   2617.00000 |*********                         2617.50210
#                  1   2618.00000 |**                                2618.27010
#
#                 10        > 95% |**********************            2624.17346
#
#        mean of 95%   2604.54006
#          95th %ile   2618.57730
 for      5.31701 seconds

Running:              system# bin/system -E -C 200 -L -S -W -N system -I 1000000
             prc thr   usecs/call      samples   errors cnt/samp  command
system         1   1  15175.71700          201        0        1     A=$$
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  14748.70900             14748.70900
#                    max  15939.87700             15621.92500
#                   mean  15185.09649             15181.34136
#                 median  15176.99700             15175.71700
#                 stddev    157.73810               148.80550
#         standard error     11.09841                10.49593
#   99% confidence level     25.81491                24.41353
#                   skew      0.51275                 0.03988
#               kurtosis      2.10537                 0.18526
#       time correlation     -0.03685                 0.04217
#
#           elasped time      3.07026
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  14730.00000 |*                                14748.70900
#                  0  14760.00000 |                                           -
#                  0  14790.00000 |                                           -
#                  4  14820.00000 |*****                            14838.50100
#                  0  14850.00000 |                                           -
#                  1  14880.00000 |*                                14901.79700
#                  1  14910.00000 |*                                14911.78100
#                 11  14940.00000 |****************                 14958.72209
#                  6  14970.00000 |********                         14994.29833
#                 10  15000.00000 |**************                   15016.22900
#                  8  15030.00000 |***********                      15042.08500
#                  8  15060.00000 |***********                      15077.44500
#                 12  15090.00000 |*****************                15102.84233
#                 22  15120.00000 |******************************** 15136.90973
#                 18  15150.00000 |**************************       15165.73300
#                 14  15180.00000 |********************             15197.51357
#                 13  15210.00000 |******************               15225.61731
#                 18  15240.00000 |**************************       15253.02900
#                 18  15270.00000 |**************************       15284.46011
#                  7  15300.00000 |**********                       15312.16500
#                  7  15330.00000 |**********                       15342.62900
#                  8  15360.00000 |***********                      15375.39700
#                  3  15390.00000 |****                             15411.49300
#
#                 11        > 95% |****************                 15498.13736
#
#        mean of 95%  15163.00054
#          95th %ile  15423.78100
 for      3.08684 seconds

Running:             recurse# bin/recurse -E -C 200 -L -S -W -N recurse -B 512
             prc thr   usecs/call      samples   errors cnt/samp
recurse        1   1      3.51910          191        0      512
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.51710                 3.51710
#                    max      3.98210                 3.59510
#                   mean      3.54549                 3.53593
#                 median      3.51910                 3.51910
#                 stddev      0.05274                 0.02046
#         standard error      0.00371                 0.00148
#   99% confidence level      0.00863                 0.00344
#                   skew      5.03310                 0.48770
#               kurtosis     32.70608                -1.18209
#       time correlation     -0.00009                 0.00001
#
#           elasped time      0.36887
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          205
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      3.00000 |********************************     3.53366
#
#                 10        > 95% |*                                    3.57690
#
#        mean of 95%      3.53366
#          95th %ile      3.56210
 for      0.41360 seconds

Running:            read_t1k# bin/read -E -C 200 -L -S -W -N read_t1k -s 1k -B 800 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t1k       1   1      3.84357          196        0      800     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.76741                 3.76741
#                    max      4.50725                 3.93221
#                   mean      3.84273                 3.83553
#                 median      3.84453                 3.84357
#                 stddev      0.06275                 0.03274
#         standard error      0.00441                 0.00234
#   99% confidence level      0.01027                 0.00544
#                   skew      6.24190                -0.48116
#               kurtosis     61.32158                -0.23769
#       time correlation     -0.00002                -0.00000
#
#           elasped time      0.62462
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      3.00000 |********************************     3.83233
#
#                 10        > 95% |*                                    3.89512
#
#        mean of 95%      3.83233
#          95th %ile      3.87461
 for      0.66010 seconds
Running:           read_t10k# bin/read -E -C 200 -L -S -W -N read_t10k -s 10k -B 200 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t10k      1   1     20.79376          178        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     20.70928                20.70928
#                    max     23.67888                20.89360
#                   mean     20.86147                20.79912
#                 median     20.80400                20.79376
#                 stddev      0.27968                 0.04013
#         standard error      0.01968                 0.00301
#   99% confidence level      0.04577                 0.00700
#                   skew      7.22959                 0.27307
#               kurtosis     61.71603                -0.35047
#       time correlation     -0.00091                -0.00022
#
#           elasped time      0.84644
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                169     20.00000 |********************************    20.79459
#
#                  9        > 95% |*                                   20.88421
#
#        mean of 95%     20.79459
#          95th %ile     20.87952
 for      0.87717 seconds
Running:          read_t100k# bin/read -E -C 200 -L -S -W -N read_t100k -s 100k -B 20 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t100k     1   1    177.38455          189        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    174.38935               174.38935
#                    max    277.89015               179.84215
#                   mean    178.52666               177.10356
#                 median    177.39735               177.38455
#                 stddev      8.70535                 0.97995
#         standard error      0.61251                 0.07128
#   99% confidence level      1.42469                 0.16580
#                   skew      8.63186                -1.53220
#               kurtosis     86.68648                 2.31185
#       time correlation     -0.00851                -0.00005
#
#           elasped time      0.72514
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          213
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 23    174.00000 |****                               174.69377
#                  1    175.00000 |*                                  175.43895
#                  6    176.00000 |*                                  176.93442
#                149    177.00000 |********************************   177.40362
#
#                 10        > 95% |**                                 178.44311
#
#        mean of 95%    177.02872
#          95th %ile    177.88375
 for      0.75102 seconds

Running:            read_u1k# bin/read -E -C 200 -L -S -W -N read_u1k -s 1k -B 500 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u1k       1   1      4.82772          191        0      500     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      4.70125                 4.70125
#                    max      7.74970                 4.93933
#                   mean      4.84020                 4.80711
#                 median      4.83130                 4.82772
#                 stddev      0.23737                 0.05160
#         standard error      0.01670                 0.00373
#   99% confidence level      0.03885                 0.00869
#                   skew      9.85534                -0.23516
#               kurtosis    112.39183                -1.17904
#       time correlation     -0.00068                -0.00010
#
#           elasped time      0.49210
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      4.00000 |********************************     4.80256
#
#                 10        > 95% |*                                    4.88941
#
#        mean of 95%      4.80256
#          95th %ile      4.86560
 for      0.51810 seconds
Running:           read_u10k# bin/read -E -C 200 -L -S -W -N read_u10k -s 10k -B 200 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u10k      1   1     21.36470          172        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     21.22902                21.24438
#                    max     24.65942                21.47478
#                   mean     21.44509                21.36801
#                 median     21.37494                21.36470
#                 stddev      0.32263                 0.04319
#         standard error      0.02270                 0.00329
#   99% confidence level      0.05280                 0.00766
#                   skew      6.90878                 0.20899
#               kurtosis     56.80544                -0.27631
#       time correlation     -0.00082                 0.00030
#
#           elasped time      0.87009
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                163     21.00000 |********************************    21.36296
#
#                  9        > 95% |*                                   21.45956
#
#        mean of 95%     21.36296
#          95th %ile     21.44918
 for      0.89143 seconds
Running:          read_u100k# bin/read -E -C 200 -L -S -W -N read_u100k -s 100k -B 20 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u100k     1   1    175.98835          194        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    172.99315               172.99315
#                    max    214.93875               178.54835
#                   mean    176.31798               175.74713
#                 median    175.98835               175.98835
#                 stddev      3.89409                 0.96941
#         standard error      0.27399                 0.06960
#   99% confidence level      0.63729                 0.16189
#                   skew      7.35590                -1.38763
#               kurtosis     61.96404                 2.32144
#       time correlation     -0.00766                 0.00008
#
#           elasped time      0.71616
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          233
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    172.00000 |*                                  172.99315
#                 23    173.00000 |*********                          173.42056
#                  0    174.00000 |                                           -
#                 79    175.00000 |*******************************    175.81109
#                 81    176.00000 |********************************   176.19236
#
#                 10        > 95% |***                                177.26195
#
#        mean of 95%    175.66480
#          95th %ile    176.44915
 for      0.74641 seconds

Running:            read_z1k# bin/read -E -C 200 -L -S -W -N read_z1k -s 1k -B 600 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z1k       1   1      1.58768          195        0      600     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.55312                 1.55312
#                    max      1.87994                 1.64101
#                   mean      1.59616                 1.59202
#                 median      1.58811                 1.58768
#                 stddev      0.03339                 0.02074
#         standard error      0.00235                 0.00148
#   99% confidence level      0.00546                 0.00345
#                   skew      4.08494                 0.69076
#               kurtosis     28.00063                -0.44911
#       time correlation     -0.00006                 0.00004
#
#           elasped time      0.19594
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      1.00000 |********************************     1.58957
#
#                 10        > 95% |*                                    1.63739
#
#        mean of 95%      1.58957
#          95th %ile      1.63291
 for      0.21624 seconds
Running:           read_z10k# bin/read -E -C 200 -L -S -W -N read_z10k -s 10k -B 200 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z10k      1   1      5.87922          197        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      5.68466                 5.68466
#                    max      7.33842                 6.24402
#                   mean      5.94055                 5.92126
#                 median      5.87922                 5.87922
#                 stddev      0.17581                 0.10804
#         standard error      0.01237                 0.00770
#   99% confidence level      0.02877                 0.01791
#                   skew      4.20373                 0.63429
#               kurtosis     27.82855                 0.59777
#       time correlation     -0.00041                -0.00022
#
#           elasped time      0.24267
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                139      5.00000 |********************************     5.86136
#                 48      6.00000 |***********                          6.04013
#
#                 10        > 95% |**                                   6.18335
#
#        mean of 95%      5.90724
#          95th %ile      6.15826
 for      0.27123 seconds
Running:          read_z100k# bin/read -E -C 200 -L -S -W -N read_z100k -s 100k -B 40 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z100k     1   1     65.99073          192        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     65.29313                65.29313
#                    max     84.01313                66.84833
#                   mean     66.05558                65.80899
#                 median     65.99712                65.99073
#                 stddev      1.65189                 0.36484
#         standard error      0.11623                 0.02633
#   99% confidence level      0.27034                 0.06124
#                   skew      8.30064                -0.31644
#               kurtosis     79.15497                -1.16290
#       time correlation     -0.00499                -0.00030
#
#           elasped time      0.53661
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          243
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                102     65.00000 |********************************    65.55596
#                 80     66.00000 |*************************           66.05705
#
#                 10        > 95% |***                                 66.40545
#
#        mean of 95%     65.77622
#          95th %ile     66.22113
 for      0.56706 seconds
Running:         read_zw100k# bin/read -E -C 200 -L -S -W -N read_zw100k -s 100k -B 40 -w -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size
read_zw100k    1   1     71.21995          190        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     70.51595                70.51595
#                    max     88.69195                71.71915
#                   mean     71.32717                71.04813
#                 median     71.21995                71.21995
#                 stddev      1.67806                 0.33283
#         standard error      0.11807                 0.02415
#   99% confidence level      0.27463                 0.05616
#                   skew      7.64987                -0.65723
#               kurtosis     67.57317                -1.13561
#       time correlation     -0.00564                -0.00018
#
#           elasped time      0.57919
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 57     70.00000 |**************                      70.55570
#                123     71.00000 |********************************    71.23717
#
#                 10        > 95% |**                                  71.52971
#
#        mean of 95%     71.02137
#          95th %ile     71.41835
 for      0.60428 seconds

Running:           write_t1k# bin/write -E -C 200 -L -S -W -N write_t1k -s 1k -B 200 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t1k      1   1      8.82432          200        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      7.94881                 7.94881
#                    max     10.02881                 9.29792
#                   mean      8.75598                 8.74481
#                 median      8.82817                 8.82432
#                 stddev      0.30704                 0.28687
#         standard error      0.02160                 0.02028
#   99% confidence level      0.05025                 0.04718
#                   skew     -0.22748                -0.79122
#               kurtosis      1.26820                -0.04789
#       time correlation      0.00018                 0.00049
#
#           elasped time      0.35705
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          255
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2      7.00000 |*                                    7.96865
#                160      8.00000 |********************************     8.67659
#                 28      9.00000 |*****                                9.04284
#
#                 10        > 95% |**                                   9.15700
#
#        mean of 95%      8.72311
#          95th %ile      9.10848
 for      0.37275 seconds
Running:          write_t10k# bin/write -E -C 200 -L -S -W -N write_t10k -s 10k -B 100 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t10k     1   1     22.63574          192        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     21.88566                21.88566
#                    max     27.65846                23.68790
#                   mean     22.70893                22.58470
#                 median     22.65878                22.63574
#                 stddev      0.70076                 0.36836
#         standard error      0.04931                 0.02658
#   99% confidence level      0.11468                 0.06183
#                   skew      3.42038                 0.14660
#               kurtosis     17.57103                -0.59427
#       time correlation     -0.00235                -0.00148
#
#           elasped time      0.46209
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          234
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7     21.00000 |*                                   21.94491
#                163     22.00000 |********************************    22.53474
#                 12     23.00000 |**                                  23.03787
#
#                 10        > 95% |*                                   23.30313
#
#        mean of 95%     22.54523
#          95th %ile     23.09654
 for      0.48210 seconds
Running:         write_t100k# bin/write -E -C 200 -L -S -W -N write_t100k -s 100k -B 10 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t100k    1   1    196.07340          197        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    194.38380               194.38380
#                    max    253.36620               206.18540
#                   mean    198.61464               197.88515
#                 median    199.27340               196.07340
#                 stddev      6.13054                 2.84221
#         standard error      0.43134                 0.20250
#   99% confidence level      1.00330                 0.47101
#                   skew      5.89803                 0.28612
#               kurtosis     45.44059                -1.29578
#       time correlation     -0.02002                -0.00260
#
#           elasped time      0.40481
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 25    194.00000 |***********                        194.75961
#                 72    195.00000 |********************************   195.33491
#                  4    196.00000 |*                                  196.15020
#                  0    197.00000 |                                           -
#                  0    198.00000 |                                           -
#                 14    199.00000 |******                             199.73420
#                 70    200.00000 |*******************************    200.53731
#                  2    201.00000 |*                                  201.12940
#
#                 10        > 95% |****                               202.95212
#
#        mean of 95%    197.61419
#          95th %ile    201.19340
 for      0.41687 seconds

Running:           write_u1k# bin/write -E -C 200 -L -S -W -N write_u1k -s 1k -B 200 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u1k      1   1      8.48786          200        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      7.93874                 7.93874
#                    max     12.22291                 9.36339
#                   mean      8.62096                 8.59624
#                 median      8.48915                 8.48786
#                 stddev      0.41850                 0.31943
#         standard error      0.02945                 0.02259
#   99% confidence level      0.06849                 0.05254
#                   skew      3.24771                 0.06803
#               kurtosis     25.38973                -0.92918
#       time correlation      0.00111                 0.00147
#
#           elasped time      0.35156
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4      7.00000 |*                                    7.95795
#                180      8.00000 |********************************     8.56508
#                  6      9.00000 |*                                    9.01736
#
#                 10        > 95% |*                                    9.15961
#
#        mean of 95%      8.56658
#          95th %ile      9.04850
 for      0.36218 seconds
Running:          write_u10k# bin/write -E -C 200 -L -S -W -N write_u10k -s 10k -B 100 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u10k     1   1     26.72927          199        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     25.38783                25.38783
#                    max     37.57855                28.34719
#                   mean     26.61920                26.51853
#                 median     26.74719                26.72927
#                 stddev      1.12893                 0.63015
#         standard error      0.07943                 0.04467
#   99% confidence level      0.18476                 0.10390
#                   skew      5.72420                -0.18953
#               kurtosis     49.48908                -0.48781
#       time correlation     -0.00180                 0.00018
#
#           elasped time      0.54127
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 60     25.00000 |*****************                   25.67306
#                110     26.00000 |********************************    26.76602
#                 19     27.00000 |*****                               27.09495
#
#                 10        > 95% |**                                  27.77375
#
#        mean of 95%     26.45211
#          95th %ile     27.33855
 for      0.56165 seconds
Running:         write_u100k# bin/write -E -C 200 -L -S -W -N write_u100k -s 100k -B 10 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u100k    1   1    227.86860          199        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    217.09100               217.09100
#                    max    282.57580               239.59340
#                   mean    225.30721               224.54485
#                 median    227.99660               227.86860
#                 stddev      8.14883                 5.25188
#         standard error      0.57335                 0.37230
#   99% confidence level      1.33361                 0.86596
#                   skew      3.55861                -0.04273
#               kurtosis     21.02734                -1.25357
#       time correlation     -0.00868                -0.00466
#
#           elasped time      0.45871
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 24    217.00000 |*************                      217.73207
#                 45    218.00000 |*************************          218.46714
#                  3    219.00000 |*                                  219.09633
#                  0    220.00000 |                                           -
#                  0    221.00000 |                                           -
#                  1    222.00000 |*                                  222.97900
#                 17    223.00000 |*********                          223.30879
#                  7    224.00000 |****                               224.24071
#                  1    225.00000 |*                                  225.89740
#                  1    226.00000 |*                                  226.17900
#                  3    227.00000 |*                                  227.95393
#                 56    228.00000 |********************************   228.65031
#                 31    229.00000 |*****************                  229.25843
#
#                 10        > 95% |*****                              233.42636
#
#        mean of 95%    224.07492
#          95th %ile    229.96780
 for      0.46975 seconds

Running:           write_n1k# bin/write -E -C 200 -L -S -W -N write_n1k -s 1k -I 100 -B 0 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n1k      1   1      0.80490          199        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.74270                 0.74270
#                    max      0.99972                 0.85662
#                   mean      0.80693                 0.80512
#                 median      0.80490                 0.80490
#                 stddev      0.02754                 0.02253
#         standard error      0.00194                 0.00160
#   99% confidence level      0.00451                 0.00372
#                   skew      1.62695                -0.41367
#               kurtosis     11.45370                 0.68048
#       time correlation     -0.00004                 0.00001
#
#           elasped time      0.16546
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          216
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                189      0.00000 |********************************     0.80277
#
#                 10        > 95% |*                                    0.84955
#
#        mean of 95%      0.80277
#          95th %ile      0.84382
 for      0.17723 seconds
Running:          write_n10k# bin/write -E -C 200 -L -S -W -N write_n10k -s 10k -I 100 -B 0 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n10k     1   1      0.80079          199        0     1000    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.73858                 0.73858
#                    max      0.99867                 0.85864
#                   mean      0.80220                 0.80038
#                 median      0.80181                 0.80079
#                 stddev      0.02815                 0.02314
#         standard error      0.00198                 0.00164
#   99% confidence level      0.00461                 0.00382
#                   skew      1.53306                -0.53062
#               kurtosis     11.02022                -0.03396
#       time correlation     -0.00005                -0.00001
#
#           elasped time      0.16459
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          238
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                189      0.00000 |********************************     0.79829
#
#                 10        > 95% |*                                    0.83995
#
#        mean of 95%      0.79829
#          95th %ile      0.83381
 for      0.18938 seconds
Running:         write_n100k# bin/write -E -C 200 -L -S -W -N write_n100k -s 100k -I 100 -B 0 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n100k    1   1      0.75575          199        0     1000   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.72374                 0.72374
#                    max      1.02070                 0.80771
#                   mean      0.76148                 0.75939
#                 median      0.75575                 0.75575
#                 stddev      0.02588                 0.01635
#         standard error      0.00182                 0.00116
#   99% confidence level      0.00424                 0.00270
#                   skew      5.52100                 1.08655
#               kurtosis     48.75270                 0.52057
#       time correlation     -0.00007                -0.00001
#
#           elasped time      0.15646
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                189      0.00000 |********************************     0.75726
#
#                 10        > 95% |*                                    0.79978
#
#        mean of 95%      0.75726
#          95th %ile      0.79466
 for      0.19187 seconds

Running:          writev_t1k# bin/writev -E -C 200 -L -S -W -N writev_t1k -s 1k -B 200 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t1k     1   1     41.53366          191        0      200     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     41.17910                41.17910
#                    max     45.12790                41.97014
#                   mean     41.62984                41.55728
#                 median     41.54390                41.53366
#                 stddev      0.38913                 0.14518
#         standard error      0.02738                 0.01050
#   99% confidence level      0.06368                 0.02443
#                   skew      5.14724                 0.50893
#               kurtosis     35.85659                 0.14574
#       time correlation     -0.00096                -0.00023
#
#           elasped time      1.68564
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181     41.00000 |********************************    41.53872
#
#                 10        > 95% |*                                   41.89321
#
#        mean of 95%     41.53872
#          95th %ile     41.83318
 for      1.70996 seconds
Running:         writev_t10k# bin/writev -E -C 200 -L -S -W -N writev_t10k -s 10k -B 10 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t10k    1   1    195.48160          195        0       10    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    193.35680               193.35680
#                    max    231.96160               204.97920
#                   mean    197.89434               197.30406
#                 median    199.06560               195.48160
#                 stddev      4.55215                 2.93196
#         standard error      0.32029                 0.20996
#   99% confidence level      0.74499                 0.48837
#                   skew      3.16745                 0.13689
#               kurtosis     18.26505                -1.68994
#       time correlation     -0.01228                -0.00172
#
#           elasped time      0.40343
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          256
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 14    193.00000 |******                             193.79200
#                 71    194.00000 |********************************   194.51313
#                 15    195.00000 |******                             195.26144
#                  0    196.00000 |                                           -
#                  0    197.00000 |                                           -
#                  1    198.00000 |*                                  198.88640
#                 42    199.00000 |******************                 199.67878
#                 37    200.00000 |****************                   200.36566
#                  5    201.00000 |**                                 201.09312
#
#                 10        > 95% |****                               201.74592
#
#        mean of 95%    197.06396
#          95th %ile    201.19040
 for      0.44012 seconds
Running:        writev_t100k# bin/writev -E -C 200 -L -S -W -N writev_t100k -s 100k -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t100k   1   1   1699.87000          196        0        1   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1680.92600              1680.92600
#                    max   7879.71000              1786.65400
#                   mean   1750.34636              1713.59735
#                 median   1700.89400              1699.87000
#                 stddev    436.69554                24.56582
#         standard error     30.72579                 1.75470
#   99% confidence level     71.46819                 4.08144
#                   skew     13.69654                 0.38455
#               kurtosis    189.13911                -1.35025
#       time correlation     -1.03135                -0.02299
#
#           elasped time      0.35769
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   1680.00000 |**                                1681.31000
#                  8   1683.00000 |**********                        1684.86200
#                 16   1686.00000 |********************              1687.83800
#                 25   1689.00000 |********************************  1690.92024
#                 25   1692.00000 |********************************  1693.71576
#                 18   1695.00000 |***********************           1696.71267
#                 11   1698.00000 |**************                    1700.10273
#                  5   1701.00000 |******                            1702.78840
#                  2   1704.00000 |**                                1704.73400
#                  0   1707.00000 |                                           -
#                  0   1710.00000 |                                           -
#                  0   1713.00000 |                                           -
#                  0   1716.00000 |                                           -
#                  0   1719.00000 |                                           -
#                  0   1722.00000 |                                           -
#                  0   1725.00000 |                                           -
#                  0   1728.00000 |                                           -
#                  7   1731.00000 |********                          1732.93057
#                 16   1734.00000 |********************              1736.11000
#                 25   1737.00000 |********************************  1738.76152
#                 17   1740.00000 |*********************             1741.77871
#                  9   1743.00000 |***********                       1744.18644
#
#                 10        > 95% |************                      1755.16600
#
#        mean of 95%   1711.36247
#          95th %ile   1745.69400
 for      0.38880 seconds

Running:          writev_u1k# bin/writev -E -C 200 -L -S -W -N writev_u1k -s 1k -B 100 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u1k     1   1     49.04738          190        0      100     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     48.63778                48.63778
#                    max     55.95938                50.63714
#                   mean     49.39901                49.22634
#                 median     49.06786                49.04738
#                 stddev      0.91311                 0.48326
#         standard error      0.06425                 0.03506
#   99% confidence level      0.14944                 0.08155
#                   skew      3.51096                 1.29273
#               kurtosis     17.43949                 0.40030
#       time correlation     -0.00211                -0.00010
#
#           elasped time      1.00173
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 79     48.00000 |*****************************       48.87829
#                 86     49.00000 |********************************    49.25444
#                 15     50.00000 |*****                               50.11490
#
#                 10        > 95% |***                                 50.40136
#
#        mean of 95%     49.16106
#          95th %ile     50.20962
 for      1.03624 seconds
Running:         writev_u10k# bin/writev -E -C 200 -L -S -W -N writev_u10k -s 10k -B 10 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u10k    1   1    246.66180          198        0       10    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    235.50020               235.50020
#                    max    298.88580               259.35940
#                   mean    244.66652               244.05202
#                 median    246.68740               246.66180
#                 stddev      7.04661                 5.15118
#         standard error      0.49580                 0.36608
#   99% confidence level      1.15323                 0.85150
#                   skew      2.77427                -0.14845
#               kurtosis     18.12727                -1.02186
#       time correlation     -0.00347                -0.00295
#
#           elasped time      0.49828
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          198
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    235.00000 |*                                  235.75620
#                 14    236.00000 |********                           236.64854
#                 38    237.00000 |***********************            237.45254
#                  5    238.00000 |***                                238.20868
#                  0    239.00000 |                                           -
#                  4    240.00000 |**                                 240.65220
#                  6    241.00000 |***                                241.67407
#                 11    242.00000 |******                             242.47038
#                  3    243.00000 |*                                  243.28260
#                  1    244.00000 |*                                  244.89540
#                  2    245.00000 |*                                  245.57380
#                 30    246.00000 |******************                 246.66351
#                 52    247.00000 |********************************   247.55140
#                 11    248.00000 |******                             248.29555
#                  1    249.00000 |*                                  249.68260
#                  6    250.00000 |***                                250.58287
#                  1    251.00000 |*                                  251.19300
#
#                 10        > 95% |******                             253.37924
#
#        mean of 95%    243.55589
#          95th %ile    251.57700
 for      0.52166 seconds
Running:        writev_u100k# bin/writev -E -C 200 -L -S -W -N writev_u100k -s 100k -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u100k   1   1   2123.55100          177        0        1   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   2101.79100              2101.79100
#                    max   6932.76700              2158.62300
#                   mean   2162.63916              2124.47954
#                 median   2126.62300              2123.55100
#                 stddev    342.44762                11.62428
#         standard error     24.09453                 0.87373
#   99% confidence level     56.04388                 2.03231
#                   skew     13.40283                 0.39093
#               kurtosis    183.40677                -0.55495
#       time correlation     -0.61152                -0.01573
#
#           elasped time      0.44103
#      number of samples          177
#     number of outliers           25
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   2100.00000 |**                                2101.79100
#                  1   2102.00000 |**                                2102.81500
#                  2   2104.00000 |****                              2105.75900
#                  4   2106.00000 |*********                         2107.55100
#                 10   2108.00000 |**********************            2109.29180
#                  9   2110.00000 |********************              2111.20611
#                 12   2112.00000 |***************************       2113.26833
#                 13   2114.00000 |*****************************     2115.12269
#                 14   2116.00000 |********************************  2116.91329
#                  8   2118.00000 |******************                2119.48700
#                 10   2120.00000 |**********************            2121.37500
#                  7   2122.00000 |****************                  2123.07557
#                 10   2124.00000 |**********************            2125.08700
#                 10   2126.00000 |**********************            2127.33980
#                  9   2128.00000 |********************              2129.41056
#                  8   2130.00000 |******************                2131.03900
#                  9   2132.00000 |********************              2133.44967
#                 11   2134.00000 |*************************         2135.23391
#                  6   2136.00000 |*************                     2137.03367
#                  4   2138.00000 |*********                         2139.80700
#                  7   2140.00000 |****************                  2141.17843
#                  3   2142.00000 |******                            2143.17767
#
#                  9        > 95% |********************              2149.32167
#
#        mean of 95%   2123.14871
#          95th %ile   2143.77500
 for      0.47821 seconds

Running:          writev_n1k# bin/writev -E -C 200 -L -S -W -N writev_n1k -s 1k -I 100 -B 0 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n1k     1   1      4.21661          196        0     1000     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      4.14672                 4.16183
#                    max      4.73578                 4.27575
#                   mean      4.22623                 4.22061
#                 median      4.21687                 4.21661
#                 stddev      0.04900                 0.02167
#         standard error      0.00345                 0.00155
#   99% confidence level      0.00802                 0.00360
#                   skew      6.41958                 0.07597
#               kurtosis     58.81465                 0.04000
#       time correlation     -0.00003                -0.00006
#
#           elasped time      0.85678
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                186      4.00000 |********************************     4.21820
#
#                 10        > 95% |*                                    4.26535
#
#        mean of 95%      4.21820
#          95th %ile      4.25271
 for      0.88501 seconds
Running:         writev_n10k# bin/writev -E -C 200 -L -S -W -N writev_n10k -s 10k -I 100 -B 0 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n10k    1   1      4.21070          195        0     1000    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      4.14286                 4.14696
#                    max      5.01787                 4.26190
#                   mean      4.21605                 4.20848
#                 median      4.21070                 4.21070
#                 stddev      0.06631                 0.02120
#         standard error      0.00467                 0.00152
#   99% confidence level      0.01085                 0.00353
#                   skew      9.19992                -0.33041
#               kurtosis    104.69778                 0.49543
#       time correlation     -0.00027                -0.00006
#
#           elasped time      0.85488
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          241
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      4.00000 |********************************     4.20613
#
#                 10        > 95% |*                                    4.25205
#
#        mean of 95%      4.20613
#          95th %ile      4.24168
 for      0.88031 seconds
Running:        writev_n100k# bin/writev -E -C 200 -L -S -W -N writev_n100k -s 100k -I 100 -B 0 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n100k   1   1      4.25373          176        0     1000   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      4.18486                 4.23478
#                    max      4.76368                 4.27882
#                   mean      4.26324                 4.25671
#                 median      4.25373                 4.25373
#                 stddev      0.04248                 0.00801
#         standard error      0.00299                 0.00060
#   99% confidence level      0.00695                 0.00140
#                   skew      8.65313                 1.15792
#               kurtosis     94.62981                 1.45054
#       time correlation      0.00000                 0.00000
#
#           elasped time      0.86464
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                167      4.00000 |********************************     4.25557
#
#                  9        > 95% |*                                    4.27799
#
#        mean of 95%      4.25557
#          95th %ile      4.27677
 for      0.89667 seconds

Running:           pread_t1k# bin/pread -E -C 200 -L -S -W -N pread_t1k -s 1k -I 150 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t1k      1   1      3.70092          192        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.22659                 3.61827
#                    max      5.85116                 3.76395
#                   mean      3.70043                 3.68536
#                 median      3.70245                 3.70092
#                 stddev      0.17580                 0.02872
#         standard error      0.01237                 0.00207
#   99% confidence level      0.02877                 0.00482
#                   skew      9.54408                -0.04020
#               kurtosis    111.10508                -0.32677
#       time correlation     -0.00009                 0.00002
#
#           elasped time      0.50123
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      3.00000 |********************************     3.68207
#
#                 10        > 95% |*                                    3.74516
#
#        mean of 95%      3.68207
#          95th %ile      3.72359
 for      0.51981 seconds
Running:          pread_t10k# bin/pread -E -C 200 -L -S -W -N pread_t10k -s 10k -I 500 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t10k     1   1     13.22898          189        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     12.56977                12.76946
#                    max     16.98833                13.65393
#                   mean     13.27732                13.19147
#                 median     13.25842                13.22898
#                 stddev      0.46504                 0.17051
#         standard error      0.03272                 0.01240
#   99% confidence level      0.07611                 0.02885
#                   skew      4.73139                -0.34372
#               kurtosis     29.11800                -0.02802
#       time correlation     -0.00048                -0.00029
#
#           elasped time      0.53886
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 23     12.00000 |****                                12.86774
#                156     13.00000 |********************************    13.21792
#
#                 10        > 95% |**                                  13.52337
#
#        mean of 95%     13.17293
#          95th %ile     13.46321
 for      0.55995 seconds
Running:         pread_t100k# bin/pread -E -C 200 -L -S -W -N pread_t100k -s 100k -I 5000 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t100k    1   1    169.58870          186        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    165.88950               165.88950
#                    max   1149.54390               398.38870
#                   mean    231.51897               197.72861
#                 median    169.69110               169.58870
#                 stddev    145.61865                66.88753
#         standard error     10.24569                 4.90443
#   99% confidence level     23.83148                11.40771
#                   skew      3.31256                 2.09273
#               kurtosis     13.38278                 2.62093
#       time correlation      0.52133                 0.27134
#
#           elasped time      0.93829
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 25    161.00000 |******                             166.78294
#                126    168.00000 |********************************   169.79360
#                  1    175.00000 |*                                  180.23830
#                  2    182.00000 |*                                  186.26710
#                  1    189.00000 |*                                  192.93590
#                  0    196.00000 |                                           -
#                  0    203.00000 |                                           -
#                  1    210.00000 |*                                  211.98230
#                  1    217.00000 |*                                  217.84470
#                  0    224.00000 |                                           -
#                  0    231.00000 |                                           -
#                  1    238.00000 |*                                  243.08630
#                  2    245.00000 |*                                  247.42550
#                  1    252.00000 |*                                  252.78870
#                  1    259.00000 |*                                  265.78070
#                  0    266.00000 |                                           -
#                  0    273.00000 |                                           -
#                  0    280.00000 |                                           -
#                  0    287.00000 |                                           -
#                  0    294.00000 |                                           -
#                  1    301.00000 |*                                  305.48630
#                  0    308.00000 |                                           -
#                  1    315.00000 |*                                  319.54070
#                  1    322.00000 |*                                  322.68950
#                  0    329.00000 |                                           -
#                  0    336.00000 |                                           -
#                  1    343.00000 |*                                  347.39350
#                  1    350.00000 |*                                  354.13910
#                  0    357.00000 |                                           -
#                  1    364.00000 |*                                  369.88310
#                  8    371.00000 |**                                 372.40950
#
#                 10        > 95% |**                                 378.35030
#
#        mean of 95%    187.46601
#          95th %ile    373.53110
 for      0.97019 seconds

Running:           pread_u1k# bin/pread -E -C 200 -L -S -W -N pread_u1k -s 1k -I 150 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u1k      1   1      3.53099          192        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.46218                 3.46218
#                    max      4.48464                 3.60940
#                   mean      3.53400                 3.51911
#                 median      3.53137                 3.53099
#                 stddev      0.09065                 0.03184
#         standard error      0.00638                 0.00230
#   99% confidence level      0.01484                 0.00535
#                   skew      6.76647                 0.53740
#               kurtosis     61.36613                -0.22238
#       time correlation      0.00006                -0.00001
#
#           elasped time      0.47796
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          235
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      3.00000 |********************************     3.51487
#
#                 10        > 95% |*                                    3.59625
#
#        mean of 95%      3.51487
#          95th %ile      3.57634
 for      0.49763 seconds
Running:          pread_u10k# bin/pread -E -C 200 -L -S -W -N pread_u10k -s 10k -I 500 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u10k     1   1     13.48879          200        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     12.42383                12.42383
#                    max     15.49455                14.59854
#                   mean     13.45688                13.43856
#                 median     13.48879                13.48879
#                 stddev      0.49820                 0.46497
#         standard error      0.03505                 0.03288
#   99% confidence level      0.08153                 0.07647
#                   skew      0.38470                -0.03933
#               kurtosis      0.74733                -0.62049
#       time correlation     -0.00186                -0.00233
#
#           elasped time      0.54629
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 40     12.00000 |*********                           12.77771
#                142     13.00000 |********************************    13.52400
#                  8     14.00000 |*                                   14.06351
#
#                 10        > 95% |**                                  14.36866
#
#        mean of 95%     13.38961
#          95th %ile     14.24911
 for      0.55702 seconds
Running:         pread_u100k# bin/pread -E -C 200 -L -S -W -N pread_u100k -s 100k -I 5000 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u100k    1   1    168.33490          193        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    165.03250               165.03250
#                    max    211.33010               171.08690
#                   mean    168.64438               167.99328
#                 median    168.38610               168.33490
#                 stddev      4.30748                 1.07201
#         standard error      0.30307                 0.07717
#   99% confidence level      0.70495                 0.17949
#                   skew      7.23827                -1.22658
#               kurtosis     59.98108                 1.30285
#       time correlation     -0.00768                 0.00061
#
#           elasped time      0.68424
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 25    165.00000 |*****                              165.63666
#                  7    166.00000 |*                                  166.23753
#                 11    167.00000 |**                                 167.89854
#                140    168.00000 |********************************   168.40210
#
#                 10        > 95% |**                                 169.49458
#
#        mean of 95%    167.91124
#          95th %ile    168.78290
 for      0.71579 seconds

Running:           pread_z1k# bin/pread -E -C 200 -L -S -W -N pread_z1k -s 1k -I 150 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z1k      1   1      1.49954          189        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.47532                 1.47532
#                    max      2.24601                 1.55989
#                   mean      1.51840                 1.50590
#                 median      1.49992                 1.49954
#                 stddev      0.06818                 0.01822
#         standard error      0.00480                 0.00132
#   99% confidence level      0.01116                 0.00308
#                   skew      7.18319                 0.97449
#               kurtosis     66.09792                -0.22686
#       time correlation      0.00001                 0.00002
#
#           elasped time      0.20656
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                179      1.00000 |********************************     1.50368
#
#                 10        > 95% |*                                    1.54574
#
#        mean of 95%      1.50368
#          95th %ile      1.54144
 for      0.22595 seconds
Running:          pread_z10k# bin/pread -E -C 200 -L -S -W -N pread_z10k -s 10k -I 500 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z10k     1   1      5.37875          197        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      5.34802                 5.34802
#                    max      6.72402                 5.67443
#                   mean      5.44441                 5.42546
#                 median      5.38002                 5.37875
#                 stddev      0.16013                 0.08371
#         standard error      0.01127                 0.00596
#   99% confidence level      0.02621                 0.01387
#                   skew      5.19880                 1.09367
#               kurtosis     36.27786                -0.54062
#       time correlation     -0.00062                -0.00010
#
#           elasped time      0.22231
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      5.00000 |********************************     5.41615
#
#                 10        > 95% |*                                    5.59967
#
#        mean of 95%      5.41615
#          95th %ile      5.56947
 for      0.23944 seconds
Running:         pread_z100k# bin/pread -E -C 200 -L -S -W -N pread_z100k -s 100k -I 2000 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z100k    1   1     65.93096          183        0       50   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     65.31656                65.31656
#                    max     97.61352                66.37640
#                   mean     66.63940                65.83200
#                 median     65.93608                65.93096
#                 stddev      3.85011                 0.25357
#         standard error      0.27089                 0.01874
#   99% confidence level      0.63010                 0.04360
#                   skew      5.74016                -1.05163
#               kurtosis     35.18238                 0.22484
#       time correlation      0.00727                -0.00002
#
#           elasped time      0.67571
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                163     65.00000 |********************************    65.79391
#                 10     66.00000 |*                                   66.05026
#
#                 10        > 95% |*                                   66.23458
#
#        mean of 95%     65.80873
#          95th %ile     66.09480
 for      0.70775 seconds
Running:        pread_zw100k# bin/pread -E -C 200 -L -S -W -N pread_zw100k -s 100k -w -I 2500 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_zw100k   1   1     70.29948          189        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     69.49307                69.49307
#                    max     88.79548                71.27227
#                   mean     70.51112                70.16734
#                 median     70.31867                70.29948
#                 stddev      1.96957                 0.37201
#         standard error      0.13858                 0.02706
#   99% confidence level      0.32233                 0.06294
#                   skew      6.92963                -0.34931
#               kurtosis     53.72536                -0.35907
#       time correlation     -0.00279                -0.00036
#
#           elasped time      0.57231
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          181
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 54     69.00000 |*************                       69.62890
#                125     70.00000 |********************************    70.34422
#
#                 10        > 95% |**                                  70.86396
#
#        mean of 95%     70.12843
#          95th %ile     70.60027
 for      0.60281 seconds

Running:          pwrite_t1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t1k -s 1k -I 500 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t1k     1   1      7.83866          197        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      7.24858                 7.24858
#                    max     10.18874                 8.25338
#                   mean      7.81024                 7.78318
#                 median      7.83866                 7.83866
#                 stddev      0.27201                 0.18585
#         standard error      0.01914                 0.01324
#   99% confidence level      0.04452                 0.03080
#                   skew      3.39882                -0.76653
#               kurtosis     28.25213                 0.42477
#       time correlation     -0.00040                -0.00039
#
#           elasped time      0.31815
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          268
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                168      7.00000 |********************************     7.74239
#                 19      8.00000 |***                                  8.00755
#
#                 10        > 95% |*                                    8.04205
#
#        mean of 95%      7.76933
#          95th %ile      8.01402
 for      0.35353 seconds
Running:         pwrite_t10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t10k -s 10k -I 1000 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t10k    1   1     16.51004          197        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     16.28988                16.28988
#                    max     21.03868                18.01788
#                   mean     16.83142                16.77683
#                 median     16.51772                16.51004
#                 stddev      0.56591                 0.41553
#         standard error      0.03982                 0.02961
#   99% confidence level      0.09262                 0.06886
#                   skew      2.87723                 0.73127
#               kurtosis     15.62240                -0.86657
#       time correlation     -0.00138                -0.00002
#
#           elasped time      0.34272
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          196
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                134     16.00000 |********************************    16.52171
#                 53     17.00000 |************                        17.25746
#
#                 10        > 95% |**                                  17.64796
#
#        mean of 95%     16.73024
#          95th %ile     17.51868
 for      0.38388 seconds
Running:        pwrite_t100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t100k -s 100k -I 10000 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t100k   1   1    188.16290          196        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    185.96130               185.96130
#                    max    240.36130               197.48130
#                   mean    190.20051               189.43167
#                 median    191.08130               188.16290
#                 stddev      5.83268                 2.88924
#         standard error      0.41039                 0.20637
#   99% confidence level      0.95456                 0.48003
#                   skew      5.07143                 0.22759
#               kurtosis     36.05579                -1.38765
#       time correlation     -0.02595                -0.00620
#
#           elasped time      0.38709
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    185.00000 |**                                 185.98263
#                 73    186.00000 |********************************   186.55326
#                 19    187.00000 |********                           187.39759
#                  2    188.00000 |*                                  188.32930
#                  0    189.00000 |                                           -
#                  1    190.00000 |*                                  190.67170
#                 47    191.00000 |********************               191.68590
#                 37    192.00000 |****************                   192.43533
#                  1    193.00000 |*                                  193.07810
#
#                 10        > 95% |****                               194.40162
#
#        mean of 95%    189.16447
#          95th %ile    193.07810
 for      0.43216 seconds

Running:          pwrite_u1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u1k -s 1k -I 500 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u1k     1   1      7.85424          200        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      7.24880                 7.24880
#                    max     10.48977                 8.81297
#                   mean      7.93685                 7.91642
#                 median      7.85424                 7.85424
#                 stddev      0.40283                 0.34486
#         standard error      0.02834                 0.02439
#   99% confidence level      0.06593                 0.05672
#                   skew      1.53140                 0.17489
#               kurtosis      7.39645                -0.39677
#       time correlation     -0.00275                -0.00243
#
#           elasped time      0.32331
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                137      7.00000 |********************************     7.72539
#                 53      8.00000 |************                         8.27249
#
#                 10        > 95% |**                                   8.64631
#
#        mean of 95%      7.87801
#          95th %ile      8.56849
 for      0.34306 seconds
Running:         pwrite_u10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u10k -s 10k -I 1000 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u10k    1   1     21.48899          200        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     19.99651                19.99651
#                    max     27.84803                22.89699
#                   mean     21.49268                21.44597
#                 median     21.49923                21.48899
#                 stddev      0.79509                 0.62333
#         standard error      0.05594                 0.04408
#   99% confidence level      0.13012                 0.10252
#                   skew      2.67259                -0.02326
#               kurtosis     19.03164                -0.80223
#       time correlation     -0.00355                -0.00324
#
#           elasped time      0.43696
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     19.00000 |*                                   19.99651
#                 60     20.00000 |*******************                 20.71216
#                100     21.00000 |********************************    21.56950
#                 29     22.00000 |*********                           22.18178
#
#                 10        > 95% |***                                 22.62461
#
#        mean of 95%     21.38394
#          95th %ile     22.42851
 for      0.45749 seconds
Running:        pwrite_u100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u100k -s 100k -I 10000 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u100k   1   1    221.87490          197        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    211.27650               211.27650
#                    max    291.68610               232.67810
#                   mean    220.04488               218.97820
#                 median    222.25890               221.87490
#                 stddev      9.16031                 5.60455
#         standard error      0.64452                 0.39931
#   99% confidence level      1.49915                 0.92879
#                   skew      3.68039                -0.00802
#               kurtosis     22.68726                -1.44343
#       time correlation     -0.00281                 0.00302
#
#           elasped time      0.44751
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          259
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 12    211.00000 |*******                            211.60930
#                 47    212.00000 |****************************       212.56031
#                 16    213.00000 |*********                          213.27810
#                  3    214.00000 |*                                  214.50210
#                  1    215.00000 |*                                  215.47490
#                  0    216.00000 |                                           -
#                  9    217.00000 |*****                              217.79028
#                  6    218.00000 |***                                218.49143
#                  4    219.00000 |**                                 219.44930
#                  0    220.00000 |                                           -
#                  1    221.00000 |*                                  221.87490
#                 18    222.00000 |**********                         222.61019
#                 53    223.00000 |********************************   223.61667
#                 11    224.00000 |******                             224.53963
#                  6    225.00000 |***                                225.45463
#
#                 10        > 95% |******                             228.55650
#
#        mean of 95%    218.46599
#          95th %ile    226.17570
 for      0.49480 seconds

Running:          pwrite_n1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n1k -s 1k -I 100 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n1k     1   1      0.71069          199        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.68765                 0.68765
#                    max      0.90858                 0.75089
#                   mean      0.71520                 0.71377
#                 median      0.71069                 0.71069
#                 stddev      0.01999                 0.01391
#         standard error      0.00141                 0.00099
#   99% confidence level      0.00327                 0.00229
#                   skew      4.65912                 0.47322
#               kurtosis     41.27176                -0.26173
#       time correlation      0.00010                 0.00014
#
#           elasped time      0.14672
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                189      0.00000 |********************************     0.71209
#
#                 10        > 95% |*                                    0.74564
#
#        mean of 95%      0.71209
#          95th %ile      0.74295
 for      0.17688 seconds
Running:         pwrite_n10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n10k -s 10k -I 100 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n10k    1   1      0.70660          192        0     1000    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.67767                 0.67767
#                    max      1.17892                 0.74065
#                   mean      0.71251                 0.70661
#                 median      0.70686                 0.70660
#                 stddev      0.03958                 0.01258
#         standard error      0.00278                 0.00091
#   99% confidence level      0.00648                 0.00211
#                   skew      8.58366                 0.50863
#               kurtosis     94.05167                 0.24594
#       time correlation     -0.00002                 0.00005
#
#           elasped time      0.14632
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.70502
#
#                 10        > 95% |*                                    0.73568
#
#        mean of 95%      0.70502
#          95th %ile      0.73194
 for      0.18234 seconds
Running:        pwrite_n100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n100k -s 100k -I 100 -f /dev/null
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n100k   1   1      0.70070          195        0     1000   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.68381                 0.68381
#                    max      0.89373                 0.72989
#                   mean      0.70559                 0.70298
#                 median      0.70070                 0.70070
#                 stddev      0.02019                 0.00950
#         standard error      0.00142                 0.00068
#   99% confidence level      0.00330                 0.00158
#                   skew      6.02488                 0.82786
#               kurtosis     48.32462                 0.73437
#       time correlation     -0.00004                 0.00001
#
#           elasped time      0.14491
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      0.00000 |********************************     0.70168
#
#                 10        > 95% |*                                    0.72707
#
#        mean of 95%      0.70168
#          95th %ile      0.72374
 for      0.16943 seconds

Running:            mmap_z8k# bin/mmap -E -C 200 -L -S -W -N mmap_z8k -l 8k -I 300 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_z8k       1   1     32.05082          193        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     31.37738                31.37738
#                    max     37.55443                32.74040
#                   mean     32.18249                32.06747
#                 median     32.07157                32.05082
#                 stddev      0.67945                 0.27332
#         standard error      0.04781                 0.01967
#   99% confidence level      0.11120                 0.04576
#                   skew      4.94804                 0.09750
#               kurtosis     31.22924                -0.39771
#       time correlation     -0.00161                 0.00017
#
#           elasped time      4.44274
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 81     31.00000 |*************************           31.81429
#                102     32.00000 |********************************    32.21404
#
#                 10        > 95% |***                                 32.62309
#
#        mean of 95%     32.03711
#          95th %ile     32.55205
 for      4.47085 seconds
Running:          mmap_z128k# bin/mmap -E -C 200 -L -S -W -N mmap_z128k -l 128k -I 300 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_z128k     1   1     32.18000          198        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     31.32974                31.32974
#                    max     33.95740                33.05640
#                   mean     32.20036                32.17369
#                 median     32.18846                32.18000
#                 stddev      0.38091                 0.33264
#         standard error      0.02680                 0.02364
#   99% confidence level      0.06234                 0.05499
#                   skew      0.80630                 0.06360
#               kurtosis      2.10205                -0.35592
#       time correlation     -0.00074                -0.00026
#
#           elasped time      4.56925
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 63     31.00000 |****************                    31.79957
#                125     32.00000 |********************************    32.30853
#
#                 10        > 95% |**                                  32.84506
#
#        mean of 95%     32.13798
#          95th %ile     32.70200
 for      4.58614 seconds
Running:            mmap_t8k# bin/mmap -E -C 200 -L -S -W -N mmap_t8k -l 8k -I 300 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_t8k       1   1     33.04409          200        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     32.44676                32.44676
#                    max     35.45572                33.87667
#                   mean     33.08757                33.06874
#                 median     33.04717                33.04409
#                 stddev      0.35117                 0.29358
#         standard error      0.02471                 0.02076
#   99% confidence level      0.05747                 0.04829
#                   skew      1.89749                 0.30676
#               kurtosis      9.95266                 0.09152
#       time correlation     -0.00032                 0.00017
#
#           elasped time      4.49193
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 83     32.00000 |************************            32.80323
#                107     33.00000 |********************************    33.21052
#
#                 10        > 95% |**                                  33.75528
#
#        mean of 95%     33.03260
#          95th %ile     33.56070
 for      4.50339 seconds
Running:          mmap_t128k# bin/mmap -E -C 200 -L -S -W -N mmap_t128k -l 128k -I 300 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_t128k     1   1     33.76829          195        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     33.09870                33.09870
#                    max     40.52193                34.61240
#                   mean     33.87663                33.79914
#                 median     33.77983                33.76829
#                 stddev      0.61700                 0.29735
#         standard error      0.04341                 0.02129
#   99% confidence level      0.10098                 0.04953
#                   skew      6.71298                 0.34275
#               kurtosis     65.83540                -0.22911
#       time correlation     -0.00114                -0.00002
#
#           elasped time      4.65214
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                146     33.00000 |********************************    33.66302
#                 39     34.00000 |********                            34.14282
#
#                 10        > 95% |**                                  34.44612
#
#        mean of 95%     33.76417
#          95th %ile     34.32104
 for      4.68095 seconds
Running:            mmap_u8k# bin/mmap -E -C 200 -L -S -W -N mmap_u8k -l 8k -I 300 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_u8k       1   1     32.54589          197        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     32.05926                32.05926
#                    max     34.15262                33.14707
#                   mean     32.58260                32.55407
#                 median     32.55819                32.54589
#                 stddev      0.28610                 0.22042
#         standard error      0.02013                 0.01570
#   99% confidence level      0.04682                 0.03653
#                   skew      1.66591                 0.02923
#               kurtosis      6.44467                -0.41032
#       time correlation     -0.00056                -0.00031
#
#           elasped time      4.45518
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          235
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187     32.00000 |********************************    32.53029
#
#                 10        > 95% |*                                   32.99877
#
#        mean of 95%     32.53029
#          95th %ile     32.93335
 for      4.47220 seconds
Running:          mmap_u128k# bin/mmap -E -C 200 -L -S -W -N mmap_u128k -l 128k -I 300 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_u128k     1   1     33.18247          195        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     32.50980                32.50980
#                    max     49.68717                33.86744
#                   mean     33.37666                33.18790
#                 median     33.19784                33.18247
#                 stddev      1.58890                 0.26421
#         standard error      0.11179                 0.01892
#   99% confidence level      0.26003                 0.04401
#                   skew      9.19767                 0.09845
#               kurtosis     87.26418                -0.25710
#       time correlation      0.00159                -0.00005
#
#           elasped time      4.63521
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 46     32.00000 |**********                          32.84205
#                139     33.00000 |********************************    33.26228
#
#                 10        > 95% |**                                  33.74498
#
#        mean of 95%     33.15779
#          95th %ile     33.66910
 for      4.65379 seconds
Running:            mmap_a8k# bin/mmap -E -C 200 -L -S -W -N mmap_a8k -l 8k -I 200 -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_a8k       1   1     14.51937          202        0      500     8192  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.95566                13.95566
#                    max     14.95560                14.95560
#                   mean     14.51130                14.51130
#                 median     14.51937                14.51937
#                 stddev      0.19663                 0.19663
#         standard error      0.01383                 0.01383
#   99% confidence level      0.03218                 0.03218
#                   skew     -0.31203                -0.31203
#               kurtosis     -0.17229                -0.17229
#       time correlation     -0.00045                -0.00045
#
#           elasped time      7.13985
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     13.00000 |*                                   13.97563
#                189     14.00000 |********************************    14.49603
#
#                 11        > 95% |*                                   14.87112
#
#        mean of 95%     14.49058
#          95th %ile     14.82555
 for      7.17999 seconds
Running:          mmap_a128k# bin/mmap -E -C 200 -L -S -W -N mmap_a128k -l 128k -I 200 -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_a128k     1   1     15.07745          199        0      500   131072  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     14.53780                14.53780
#                    max     19.38132                15.70157
#                   mean     15.11099                15.08274
#                 median     15.08154                15.07745
#                 stddev      0.37485                 0.21243
#         standard error      0.02637                 0.01506
#   99% confidence level      0.06135                 0.03503
#                   skew      7.30131                -0.02355
#               kurtosis     80.75778                -0.42723
#       time correlation     -0.00114                -0.00090
#
#           elasped time      7.25431
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 78     14.00000 |**********************              14.87282
#                111     15.00000 |********************************    15.19426
#
#                 10        > 95% |**                                  15.48218
#
#        mean of 95%     15.06160
#          95th %ile     15.40359
 for      7.26635 seconds

Running:           mmap_rz8k# bin/mmap -E -C 200 -L -S -W -N mmap_rz8k -l 8k -I 1000 -r -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rz8k      1   1     68.51611          199        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     67.59963                67.59963
#                    max     74.91611                69.70907
#                   mean     68.58670                68.53930
#                 median     68.54683                68.51611
#                 stddev      0.62857                 0.41465
#         standard error      0.04423                 0.02939
#   99% confidence level      0.10287                 0.06837
#                   skew      5.15917                 0.16968
#               kurtosis     48.83140                -0.08717
#       time correlation      0.00064                 0.00143
#
#           elasped time      2.43908
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 24     67.00000 |*****                               67.85478
#                150     68.00000 |********************************    68.53029
#                 15     69.00000 |***                                 69.11788
#
#                 10        > 95% |**                                  69.44949
#
#        mean of 95%     68.49115
#          95th %ile     69.30971
 for      2.46031 seconds
Running:         mmap_rz128k# bin/mmap -E -C 200 -L -S -W -N mmap_rz128k -l 128k -I 1000 -r -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rz128k    1   1    378.64739          196        0      100   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    373.51715               373.51715
#                    max    419.97859               384.58659
#                   mean    379.35550               378.92578
#                 median    378.75747               378.64739
#                 stddev      3.75060                 1.90896
#         standard error      0.26389                 0.13635
#   99% confidence level      0.61381                 0.31716
#                   skew      6.68814                 0.32128
#               kurtosis     66.74820                 0.10735
#       time correlation     -0.00096                -0.00214
#
#           elasped time      8.88610
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    373.00000 |*                                  373.69251
#                  0    374.00000 |                                           -
#                  6    375.00000 |****                               375.67779
#                 21    376.00000 |**************                     376.58281
#                 35    377.00000 |************************           377.60810
#                 46    378.00000 |********************************   378.41259
#                 32    379.00000 |**********************             379.48267
#                 26    380.00000 |******************                 380.44796
#                 15    381.00000 |**********                         381.51374
#                  3    382.00000 |**                                 382.17080
#
#                 10        > 95% |******                             383.21878
#
#        mean of 95%    378.69497
#          95th %ile    382.40803
 for      8.90664 seconds
Running:           mmap_rt8k# bin/mmap -E -C 200 -L -S -W -N mmap_rt8k -l 8k -I 1000 -r -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rt8k      1   1     71.95682          199        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     70.92770                70.92770
#                    max     77.49666                72.97826
#                   mean     72.01688                71.96496
#                 median     71.95938                71.95682
#                 stddev      0.60912                 0.38335
#         standard error      0.04286                 0.02717
#   99% confidence level      0.09969                 0.06321
#                   skew      4.62121                -0.04169
#               kurtosis     36.60300                 0.19001
#       time correlation     -0.00105                -0.00076
#
#           elasped time      2.64285
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     70.00000 |*                                   70.93794
#                108     71.00000 |********************************    71.71097
#                 79     72.00000 |***********************             72.23226
#
#                 10        > 95% |**                                  72.80188
#
#        mean of 95%     71.92068
#          95th %ile     72.64802
 for      2.65506 seconds
Running:         mmap_rt128k# bin/mmap -E -C 200 -L -S -W -N mmap_rt128k -l 128k -I 10000 -r -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rt128k    1   1    247.48140          198        0       10   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    240.36460               240.36460
#                    max    287.98060               250.50220
#                   mean    246.50226               246.07456
#                 median    247.48140               247.48140
#                 stddev      4.53420                 2.87431
#         standard error      0.31903                 0.20427
#   99% confidence level      0.74205                 0.47513
#                   skew      4.37117                -0.40887
#               kurtosis     35.80346                -1.42645
#       time correlation      0.00567                 0.00571
#
#           elasped time      0.67823
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          194
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    240.00000 |***                                240.74860
#                 12    241.00000 |*******                            241.59767
#                 31    242.00000 |******************                 242.62566
#                 25    243.00000 |***************                    243.43865
#                  2    244.00000 |*                                  244.71660
#                  3    245.00000 |*                                  245.68087
#                  8    246.00000 |****                               246.65580
#                 37    247.00000 |**********************             247.57411
#                 53    248.00000 |********************************   248.51748
#                 11    249.00000 |******                             249.20824
#
#                 10        > 95% |******                             249.90572
#
#        mean of 95%    245.87078
#          95th %ile    249.37580
 for      0.70260 seconds
Running:           mmap_ru8k# bin/mmap -E -C 200 -L -S -W -N mmap_ru8k -l 8k -I 1000 -r -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ru8k      1   1     72.01820          197        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     71.19900                71.19900
#                    max     77.59900                73.00892
#                   mean     72.08754                72.01837
#                 median     72.03612                72.01820
#                 stddev      0.62091                 0.35988
#         standard error      0.04369                 0.02564
#   99% confidence level      0.10162                 0.05964
#                   skew      4.68940                 0.04306
#               kurtosis     35.47140                -0.01730
#       time correlation     -0.00079                -0.00012
#
#           elasped time      2.63084
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          228
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 95     71.00000 |********************************    71.73067
#                 92     72.00000 |******************************      72.23090
#
#                 10        > 95% |***                                 72.79618
#
#        mean of 95%     71.97677
#          95th %ile     72.61980
 for      2.64987 seconds
Running:         mmap_ru128k# bin/mmap -E -C 200 -L -S -W -N mmap_ru128k -l 128k -I 10000 -r -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ru128k    1   1    242.38420          196        0       10   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    235.70260               235.70260
#                    max    311.47860               248.88660
#                   mean    241.70225               240.87759
#                 median    242.48660               242.38420
#                 stddev      6.55819                 3.02421
#         standard error      0.46143                 0.21602
#   99% confidence level      1.07329                 0.50245
#                   skew      6.57825                -0.14395
#               kurtosis     63.01020                -1.12792
#       time correlation     -0.00177                -0.00144
#
#           elasped time      0.66649
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    235.00000 |*                                  235.79220
#                 26    236.00000 |***************                    236.70592
#                 40    237.00000 |************************           237.55988
#                  8    238.00000 |****                               238.29140
#                  0    239.00000 |                                           -
#                  0    240.00000 |                                           -
#                  9    241.00000 |*****                              241.71291
#                 53    242.00000 |********************************   242.61557
#                 47    243.00000 |****************************       243.37552
#                  1    244.00000 |*                                  244.07380
#
#                 10        > 95% |******                             246.05780
#
#        mean of 95%    240.59908
#          95th %ile    244.17620
 for      0.69902 seconds
Running:           mmap_ra8k# bin/mmap -E -C 200 -L -S -W -N mmap_ra8k -l 8k -I 500 -r -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ra8k      1   1     56.05394          192        0      200     8192  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     55.24370                55.40371
#                    max     76.37906                56.71827
#                   mean     56.23391                56.04711
#                 median     56.06418                56.05394
#                 stddev      1.60505                 0.23025
#         standard error      0.11293                 0.01662
#   99% confidence level      0.26268                 0.03865
#                   skew     10.58777                 0.21544
#               kurtosis    123.89799                 0.03287
#       time correlation     -0.00166                -0.00056
#
#           elasped time      5.49927
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 83     55.00000 |**************************          55.83812
#                 99     56.00000 |********************************    56.17089
#
#                 10        > 95% |***                                 56.55634
#
#        mean of 95%     56.01913
#          95th %ile     56.43923
 for      5.52336 seconds
Running:         mmap_ra128k# bin/mmap -E -C 200 -L -S -W -N mmap_ra128k -l 128k -I 5000 -r -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ra128k    1   1    357.99250          196        0       20   131072  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    346.53650               346.53650
#                    max    516.78930               368.28370
#                   mean    359.13677               357.98388
#                 median    358.03090               357.99250
#                 stddev     12.02285                 3.91485
#         standard error      0.84592                 0.27963
#   99% confidence level      1.96762                 0.65042
#                   skew     11.17517                 0.16118
#               kurtosis    143.44466                 0.18063
#       time correlation     -0.02399                -0.01207
#
#           elasped time      1.80016
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    346.00000 |*                                  346.53650
#                  0    347.00000 |                                           -
#                  1    348.00000 |*                                  348.99410
#                  2    349.00000 |**                                 349.49330
#                  3    350.00000 |***                                350.67517
#                  4    351.00000 |****                               351.34930
#                  8    352.00000 |********                           352.43570
#                 11    353.00000 |***********                        353.56719
#                 10    354.00000 |**********                         354.48146
#                 15    355.00000 |****************                   355.62962
#                 19    356.00000 |********************               356.57709
#                 25    357.00000 |**************************         357.51224
#                 30    358.00000 |********************************   358.39485
#                 21    359.00000 |**********************             359.36820
#                  6    360.00000 |******                             360.43090
#                  6    361.00000 |******                             361.31410
#                 11    362.00000 |***********                        362.36428
#                  6    363.00000 |******                             363.46237
#                  7    364.00000 |*******                            364.44370
#
#                 10        > 95% |**********                         366.52114
#
#        mean of 95%    357.52489
#          95th %ile    365.49330
 for      1.84334 seconds

Running:           mmap_wz8k# bin/mmap -E -C 200 -L -S -W -N mmap_wz8k -l 8k -I 1250 -w -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wz8k      1   1    109.83404          191        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    109.09804               109.09804
#                    max    184.78764               111.04684
#                   mean    110.37899               109.84801
#                 median    109.85964               109.83404
#                 stddev      5.33934                 0.41178
#         standard error      0.37567                 0.02980
#   99% confidence level      0.87382                 0.06930
#                   skew     13.41424                 0.56960
#               kurtosis    183.74069                -0.00755
#       time correlation      0.00790                -0.00013
#
#           elasped time      3.06331
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                135    109.00000 |********************************   109.63998
#                 46    110.00000 |**********                         110.24899
#
#                 10        > 95% |**                                 110.81196
#
#        mean of 95%    109.79475
#          95th %ile    110.69484
 for      3.08674 seconds
Running:         mmap_wz128k# bin/mmap -E -C 200 -L -S -W -N mmap_wz128k -l 128k -I 25000 -w -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wz128k    1   1    820.93575          199        0        4   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    802.18375               802.18375
#                    max    967.17575               840.71175
#                   mean    821.03048               819.52293
#                 median    821.19175               820.93575
#                 stddev     14.83878                 7.16354
#         standard error      1.04405                 0.50781
#   99% confidence level      2.42847                 1.18117
#                   skew      6.16279                -0.29885
#               kurtosis     52.58704                 0.43295
#       time correlation     -0.01532                -0.00689
#
#           elasped time      0.79473
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    802.00000 |**                                 802.18375
#                  1    803.00000 |*                                  803.65575
#                  2    804.00000 |**                                 804.67975
#                  6    805.00000 |*******                            805.73575
#                  6    806.00000 |*******                            806.69575
#                  5    807.00000 |******                             807.80295
#                  3    808.00000 |***                                808.37042
#                  5    809.00000 |******                             809.83815
#                  5    810.00000 |******                             810.78535
#                  5    811.00000 |******                             811.48935
#                  2    812.00000 |**                                 812.45575
#                  2    813.00000 |**                                 813.79975
#                  2    814.00000 |**                                 814.95175
#                  2    815.00000 |**                                 815.68775
#                  5    816.00000 |******                             816.58375
#                  4    817.00000 |*****                              817.62375
#                 10    818.00000 |************                       818.64455
#                 12    819.00000 |***************                    819.56508
#                 22    820.00000 |****************************       820.62739
#                 17    821.00000 |*********************              821.53810
#                 17    822.00000 |*********************              822.50940
#                 25    823.00000 |********************************   823.58279
#                  9    824.00000 |***********                        824.55531
#                 11    825.00000 |**************                     825.55539
#                  5    826.00000 |******                             826.43975
#                  4    827.00000 |*****                              827.46375
#
#                 10        > 95% |************                       834.36295
#
#        mean of 95%    818.73774
#          95th %ile    827.91175
 for      0.82138 seconds
Running:           mmap_wt8k# bin/mmap -E -C 200 -L -S -W -N mmap_wt8k -l 8k -I 1250 -w -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wt8k      1   1    131.83406          195        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    130.02286               130.02286
#                    max    140.02286               133.59726
#                   mean    131.98819               131.81242
#                 median    131.87246               131.83406
#                 stddev      1.19667                 0.68697
#         standard error      0.08420                 0.04919
#   99% confidence level      0.19584                 0.11443
#                   skew      3.15103                -0.27925
#               kurtosis     15.54233                -0.33718
#       time correlation     -0.00254                -0.00033
#
#           elasped time      3.36638
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 24    130.00000 |********                           130.58953
#                 89    131.00000 |********************************   131.55476
#                 72    132.00000 |*************************          132.37046
#
#                 10        > 95% |***                                133.02254
#
#        mean of 95%    131.74701
#          95th %ile    132.81006
 for      3.39837 seconds
Running:         mmap_wt128k# bin/mmap -E -C 200 -L -S -W -N mmap_wt128k -l 128k -I 25000 -w -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wt128k    1   1   1165.44725          195        0        4   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1158.40725              1158.40725
#                    max   1419.14325              1186.69525
#                   mean   1170.42816              1167.74698
#                 median   1165.70325              1165.44725
#                 stddev     20.82208                 6.48083
#         standard error      1.46504                 0.46410
#   99% confidence level      3.40767                 1.07950
#                   skew      9.03396                 0.95195
#               kurtosis    100.15839                -0.12881
#       time correlation     -0.03678                -0.00414
#
#           elasped time      1.07865
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3   1158.00000 |****                              1158.53525
#                  2   1159.00000 |**                                1159.71925
#                 17   1160.00000 |************************          1160.63219
#                 10   1161.00000 |**************                    1161.55605
#                 14   1162.00000 |********************              1162.67239
#                 20   1163.00000 |*****************************     1163.59445
#                 22   1164.00000 |********************************  1164.55416
#                 18   1165.00000 |**************************        1165.53614
#                 15   1166.00000 |*********************             1166.55232
#                  9   1167.00000 |*************                     1167.47392
#                  8   1168.00000 |***********                       1168.51925
#                  3   1169.00000 |****                              1169.71392
#                  4   1170.00000 |*****                             1170.50325
#                  2   1171.00000 |**                                1171.27125
#                  3   1172.00000 |****                              1172.46592
#                  6   1173.00000 |********                          1173.56458
#                  4   1174.00000 |*****                             1174.56725
#                  4   1175.00000 |*****                             1175.71925
#                  7   1176.00000 |**********                        1176.54668
#                  2   1177.00000 |**                                1177.41525
#                  2   1178.00000 |**                                1178.43925
#                  9   1179.00000 |*************                     1179.56992
#                  1   1180.00000 |*                                 1180.23125
#
#                 10        > 95% |**************                    1182.89365
#
#        mean of 95%   1166.92824
#          95th %ile   1181.19125
 for      1.12893 seconds
Running:           mmap_wu8k# bin/mmap -E -C 200 -L -S -W -N mmap_wu8k -l 8k -I 1250 -w -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wu8k      1   1    129.97156          200        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    128.42276               128.42276
#                    max    135.27396               131.36996
#                   mean    129.95344               129.91518
#                 median    129.97156               129.97156
#                 stddev      0.72800                 0.60354
#         standard error      0.05122                 0.04268
#   99% confidence level      0.11914                 0.09927
#                   skew      1.98959                 0.00233
#               kurtosis     12.90964                -0.31891
#       time correlation     -0.00112                 0.00001
#
#           elasped time      3.33777
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 15    128.00000 |*****                              128.80484
#                 90    129.00000 |********************************   129.56890
#                 85    130.00000 |******************************     130.32755
#
#                 10        > 95% |***                                131.19204
#
#        mean of 95%    129.84798
#          95th %ile    130.99876
 for      3.38620 seconds
Running:         mmap_wu128k# bin/mmap -E -C 200 -L -S -W -N mmap_wu128k -l 128k -I 12500 -w -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wu128k    1   1   1151.74762          189        0        8   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1142.21162              1142.21162
#                    max   4785.82762              1165.73162
#                   mean   1222.00315              1152.43131
#                 median   1152.61163              1151.74762
#                 stddev    406.88697                 5.08859
#         standard error     28.62847                 0.37014
#   99% confidence level     66.58982                 0.86095
#                   skew      6.84957                 0.48189
#               kurtosis     49.46935                -0.48400
#       time correlation      1.93638                 0.00442
#
#           elasped time      2.24155
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1142.00000 |*                                 1142.21162
#                  1   1143.00000 |*                                 1143.58762
#                  2   1144.00000 |***                               1144.65963
#                  7   1145.00000 |***********                       1145.42077
#                 17   1146.00000 |****************************      1146.52221
#                 19   1147.00000 |********************************  1147.47310
#                 12   1148.00000 |********************              1148.59296
#                 16   1149.00000 |**************************        1149.48363
#                 12   1150.00000 |********************              1150.46762
#                  9   1151.00000 |***************                   1151.52007
#                  9   1152.00000 |***************                   1152.52985
#                  9   1153.00000 |***************                   1153.48629
#                 13   1154.00000 |*********************             1154.46762
#                 18   1155.00000 |******************************    1155.57696
#                  9   1156.00000 |***************                   1156.18140
#                  9   1157.00000 |***************                   1157.57162
#                  5   1158.00000 |********                          1158.34602
#                  4   1159.00000 |******                            1159.37162
#                  4   1160.00000 |******                            1160.37963
#                  1   1161.00000 |*                                 1161.12362
#                  2   1162.00000 |***                               1162.08362
#
#                 10        > 95% |****************                  1163.70282
#
#        mean of 95%   1151.80161
#          95th %ile   1162.11562
 for      2.26548 seconds
Running:           mmap_wa8k# bin/mmap -E -C 200 -L -S -W -N mmap_wa8k -l 8k -I 1500 -w -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wa8k      1   1     87.25411          183        0       66     8192  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     86.22235                86.22235
#                    max    377.34865                88.89095
#                   mean     95.57343                87.21899
#                 median     87.33168                87.25411
#                 stddev     39.42142                 0.57352
#         standard error      2.77368                 0.04240
#   99% confidence level      6.45158                 0.09861
#                   skew      5.55791                 0.27479
#               kurtosis     32.64941                -0.53297
#       time correlation     -0.21017                 0.00082
#
#           elasped time      2.82965
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          205
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 70     86.00000 |**********************              86.62125
#                100     87.00000 |********************************    87.48947
#                  3     88.00000 |*                                   88.09322
#
#                 10        > 95% |***                                 88.43597
#
#        mean of 95%     87.14864
#          95th %ile     88.17726
 for      2.86504 seconds
Running:         mmap_wa128k# bin/mmap -E -C 200 -L -S -W -N mmap_wa128k -l 128k -I 25000 -w -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wa128k    1   1    811.65150          198        0        4   131072  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    786.17950               786.17950
#                    max    957.95550               833.15550
#                   mean    810.97475               809.48811
#                 median    811.71550               811.65150
#                 stddev     14.94441                 8.66803
#         standard error      1.05149                 0.61601
#   99% confidence level      2.44575                 1.43284
#                   skew      5.20234                -0.63833
#               kurtosis     46.81242                 0.35118
#       time correlation     -0.01004                -0.01296
#
#           elasped time      0.80117
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          242
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    786.00000 |***                                786.84083
#                  7    788.00000 |*******                            788.81264
#                  1    790.00000 |*                                  791.49150
#                  1    792.00000 |*                                  792.13150
#                  5    794.00000 |*****                              795.10110
#                  5    796.00000 |*****                              797.09790
#                  9    798.00000 |*********                          799.24972
#                  6    800.00000 |******                             800.75017
#                  8    802.00000 |********                           802.89950
#                 10    804.00000 |**********                         804.88670
#                 13    806.00000 |*************                      807.16165
#                 18    808.00000 |******************                 808.96350
#                 19    810.00000 |*******************                811.07550
#                 31    812.00000 |********************************   813.08840
#                 27    814.00000 |***************************        815.08380
#                 13    816.00000 |*************                      816.86504
#                  8    818.00000 |********                           818.90750
#                  4    820.00000 |****                               820.86750
#
#                 10        > 95% |**********                         825.01470
#
#        mean of 95%    808.66222
#          95th %ile    822.21150
 for      0.82231 seconds

Running:           unmap_z8k# bin/munmap -E -C 200 -L -S -W -N unmap_z8k -l 8k -I 250 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_z8k      1   1     34.67466          200        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     33.09450                33.09450
#                    max     37.94443                36.17482
#                   mean     34.69848                34.67351
#                 median     34.68234                34.67466
#                 stddev      0.62191                 0.56721
#         standard error      0.04376                 0.04011
#   99% confidence level      0.10178                 0.09329
#                   skew      0.56765                -0.19624
#               kurtosis      3.00668                -0.09193
#       time correlation     -0.00097                -0.00073
#
#           elasped time      5.47471
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 22     33.00000 |*****                               33.64400
#                118     34.00000 |********************************    34.54256
#                 50     35.00000 |*************                       35.21973
#
#                 10        > 95% |**                                  35.75243
#
#        mean of 95%     34.61672
#          95th %ile     35.58922
 for      5.49300 seconds
Running:         unmap_z128k# bin/munmap -E -C 200 -L -S -W -N unmap_z128k -l 128k -I 250 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_z128k    1   1     35.91944          190        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     35.51432                35.51432
#                    max     83.02151                36.51911
#                   mean     36.57184                35.95040
#                 median     35.94183                35.91944
#                 stddev      4.59321                 0.19239
#         standard error      0.32318                 0.01396
#   99% confidence level      0.75171                 0.03247
#                   skew      8.35110                 0.58378
#               kurtosis     71.41024                 0.32693
#       time correlation     -0.01137                -0.00020
#
#           elasped time      5.70676
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                118     35.00000 |********************************    35.83169
#                 62     36.00000 |****************                    36.10025
#
#                 10        > 95% |**                                  36.42209
#
#        mean of 95%     35.92419
#          95th %ile     36.33736
 for      5.72635 seconds
Running:           unmap_t8k# bin/munmap -E -C 200 -L -S -W -N unmap_t8k -l 8k -I 250 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_t8k      1   1     35.63147          194        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     35.08683                35.13227
#                    max     39.52459                36.06475
#                   mean     35.66274                35.62124
#                 median     35.63467                35.63147
#                 stddev      0.35503                 0.16654
#         standard error      0.02498                 0.01196
#   99% confidence level      0.05810                 0.02781
#                   skew      6.77950                -0.13686
#               kurtosis     68.24569                 0.34857
#       time correlation     -0.00065                -0.00019
#
#           elasped time      5.68165
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          211
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                184     35.00000 |********************************    35.60230
#
#                 10        > 95% |*                                   35.96978
#
#        mean of 95%     35.60230
#          95th %ile     35.91179
 for      5.70097 seconds
Running:         unmap_t128k# bin/munmap -E -C 200 -L -S -W -N unmap_t128k -l 128k -I 250 -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_t128k    1   1     33.85482          201        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     33.35178                33.35178
#                    max     35.33706                35.05930
#                   mean     34.00872                34.00211
#                 median     33.85674                33.85482
#                 stddev      0.41651                 0.40680
#         standard error      0.02931                 0.02869
#   99% confidence level      0.06817                 0.06674
#                   skew      0.85357                 0.79604
#               kurtosis     -0.18124                -0.40221
#       time correlation      0.00057                 0.00072
#
#           elasped time      5.50710
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                123     33.00000 |********************************    33.72297
#                 67     34.00000 |*****************                   34.36273
#
#                 11        > 95% |**                                  34.92699
#
#        mean of 95%     33.94857
#          95th %ile     34.73674
 for      5.53748 seconds
Running:           unmap_u8k# bin/munmap -E -C 200 -L -S -W -N unmap_u8k -l 8k -I 250 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_u8k      1   1     35.53160          195        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     35.18984                35.18984
#                    max     51.90472                36.07944
#                   mean     35.78511                35.55685
#                 median     35.53672                35.53160
#                 stddev      1.65087                 0.18918
#         standard error      0.11615                 0.01355
#   99% confidence level      0.27018                 0.03151
#                   skew      7.86721                 0.46569
#               kurtosis     64.34823                -0.19805
#       time correlation      0.00278                -0.00029
#
#           elasped time      5.67147
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185     35.00000 |********************************    35.53316
#
#                 10        > 95% |*                                   35.99515
#
#        mean of 95%     35.53316
#          95th %ile     35.90472
 for      5.69076 seconds
Running:         unmap_u128k# bin/munmap -E -C 200 -L -S -W -N unmap_u128k -l 128k -I 250 -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_u128k    1   1     33.99433          196        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     33.51177                33.51177
#                    max     37.99945                35.06185
#                   mean     34.13310                34.08257
#                 median     34.00713                33.99433
#                 stddev      0.48000                 0.34688
#         standard error      0.03377                 0.02478
#   99% confidence level      0.07856                 0.05763
#                   skew      3.13202                 0.79942
#               kurtosis     19.60402                -0.10444
#       time correlation     -0.00150                -0.00078
#
#           elasped time      5.51109
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          221
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                100     33.00000 |********************************    33.81389
#                 86     34.00000 |***************************         34.29837
#
#                 10        > 95% |***                                 34.91343
#
#        mean of 95%     34.03790
#          95th %ile     34.80201
 for      5.53082 seconds
Running:           unmap_a8k# bin/munmap -E -C 200 -L -S -W -N unmap_a8k -l 8k -I 250 -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_a8k      1   1     56.64709          189        0      400     8192  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     55.48933                55.95717
#                    max     58.50437                57.45669
#                   mean     56.66786                56.65239
#                 median     56.64709                56.64709
#                 stddev      0.40155                 0.27029
#         standard error      0.02825                 0.01966
#   99% confidence level      0.06572                 0.04573
#                   skew      0.78947                 0.03272
#               kurtosis      3.88600                 0.26088
#       time correlation      0.00070                 0.00009
#
#           elasped time      5.72643
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          235
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     55.00000 |*                                   55.96581
#                168     56.00000 |********************************    56.60539
#                  9     57.00000 |*                                   57.04723
#
#                 10        > 95% |*                                   57.22399
#
#        mean of 95%     56.62046
#          95th %ile     57.07653
 for      5.74567 seconds
Running:         unmap_a128k# bin/munmap -E -C 200 -L -S -W -N unmap_a128k -l 128k -I 250 -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_a128k    1   1     56.70920          196        0      400   131072  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     55.82216                55.82216
#                    max     65.18216                57.47656
#                   mean     56.80415                56.73257
#                 median     56.71432                56.70920
#                 stddev      0.69094                 0.30568
#         standard error      0.04861                 0.02183
#   99% confidence level      0.11308                 0.05079
#                   skew      8.88568                 0.04008
#               kurtosis    104.33509                -0.23577
#       time correlation     -0.00047                 0.00023
#
#           elasped time      5.75266
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     55.00000 |*                                   55.89704
#                153     56.00000 |********************************    56.62696
#                 31     57.00000 |******                              57.11141
#
#                 10        > 95% |**                                  57.34113
#
#        mean of 95%     56.69985
#          95th %ile     57.25448
 for      5.78192 seconds

Running:          unmap_rz8k# bin/munmap -E -C 200 -L -S -W -N unmap_rz8k -l 8k -I 250 -r -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rz8k     1   1     56.58953          201        0      400     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     55.80232                55.80232
#                    max     59.82664                58.40457
#                   mean     56.73367                56.71828
#                 median     56.59464                56.58953
#                 stddev      0.61749                 0.57890
#         standard error      0.04345                 0.04083
#   99% confidence level      0.10106                 0.09498
#                   skew      1.23430                 0.82596
#               kurtosis      2.38881                 0.03998
#       time correlation     -0.00085                -0.00130
#
#           elasped time     10.72767
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          222
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10     55.00000 |**                                  55.87676
#                134     56.00000 |********************************    56.45405
#                 46     57.00000 |**********                          57.34198
#
#                 11        > 95% |**                                  58.09393
#
#        mean of 95%     56.63864
#          95th %ile     57.86185
 for     10.74323 seconds
Running:        unmap_rz128k# bin/munmap -E -C 200 -L -S -W -N unmap_rz128k -l 128k -I 500 -r -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rz128k   1   1     62.20819          197        0      200   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     61.59891                61.59891
#                    max     64.30867                62.98899
#                   mean     62.28410                62.24862
#                 median     62.21843                62.20819
#                 stddev      0.34538                 0.25502
#         standard error      0.02430                 0.01817
#   99% confidence level      0.05652                 0.04226
#                   skew      2.29120                 0.44529
#               kurtosis     10.04547                 0.14625
#       time correlation     -0.00011                 0.00003
#
#           elasped time     17.81686
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          218
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 29     61.00000 |*****                               61.89741
#                158     62.00000 |********************************    62.27598
#
#                 10        > 95% |**                                  62.83475
#
#        mean of 95%     62.21727
#          95th %ile     62.72915
 for     17.83469 seconds
Running:          unmap_rt8k# bin/munmap -E -C 200 -L -S -W -N unmap_rt8k -l 8k -I 500 -r -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rt8k     1   1     61.88439          189        0      200     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     61.38903                61.38903
#                    max     67.91319                62.49879
#                   mean     62.01004                61.88501
#                 median     61.90487                61.88439
#                 stddev      0.61120                 0.23341
#         standard error      0.04300                 0.01698
#   99% confidence level      0.10003                 0.03949
#                   skew      5.30170                 0.33841
#               kurtosis     42.52746                -0.38548
#       time correlation     -0.00108                -0.00000
#
#           elasped time      5.61347
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                134     61.00000 |********************************    61.76658
#                 45     62.00000 |**********                          62.12460
#
#                 10        > 95% |**                                  62.39370
#
#        mean of 95%     61.85659
#          95th %ile     62.30423
 for      5.63379 seconds
Running:        unmap_rt128k# bin/munmap -E -C 200 -L -S -W -N unmap_rt128k -l 128k -I 1500 -r -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rt128k   1   1     88.96445          198        0       66   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     87.83185                87.83185
#                    max     93.43670                90.78361
#                   mean     89.03477                88.98228
#                 median     88.99548                88.96445
#                 stddev      0.73691                 0.62615
#         standard error      0.05185                 0.04450
#   99% confidence level      0.12060                 0.10350
#                   skew      1.41577                 0.35542
#               kurtosis      5.43904                -0.33255
#       time correlation      0.00010                 0.00007
#
#           elasped time      4.42990
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          218
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  8     87.00000 |**                                  87.92106
#                 95     88.00000 |********************************    88.53072
#                 82     89.00000 |***************************         89.40020
#                  3     90.00000 |*                                   90.03759
#
#                 10        > 95% |***                                 90.37750
#
#        mean of 95%     88.90807
#          95th %ile     90.10482
 for      4.44951 seconds
Running:          unmap_ru8k# bin/munmap -E -C 200 -L -S -W -N unmap_ru8k -l 8k -I 500 -r -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ru8k     1   1     60.95376          188        0      200     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     60.60432                60.60432
#                    max     79.53808                61.60912
#                   mean     61.23418                60.99267
#                 median     60.97936                60.95376
#                 stddev      1.50534                 0.20843
#         standard error      0.10592                 0.01520
#   99% confidence level      0.24636                 0.03536
#                   skew      9.83791                 0.83276
#               kurtosis    110.22411                 0.26889
#       time correlation     -0.00064                 0.00024
#
#           elasped time      5.51632
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                116     60.00000 |********************************    60.86310
#                 62     61.00000 |*****************                   61.15443
#
#                 10        > 95% |**                                  61.49277
#
#        mean of 95%     60.96458
#          95th %ile     61.43376
 for      5.54959 seconds
Running:        unmap_ru128k# bin/munmap -E -C 200 -L -S -W -N unmap_ru128k -l 128k -I 1500 -r -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ru128k   1   1     87.55638          199        0       66   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     86.48195                86.48195
#                    max     94.82911                89.13117
#                   mean     87.66654                87.61339
#                 median     87.58741                87.55638
#                 stddev      0.74482                 0.52122
#         standard error      0.05241                 0.03695
#   99% confidence level      0.12189                 0.08594
#                   skew      4.47493                 0.16260
#               kurtosis     40.14997                -0.73971
#       time correlation     -0.00097                -0.00104
#
#           elasped time      4.33706
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 23     86.00000 |******                              86.83307
#                121     87.00000 |********************************    87.47332
#                 45     88.00000 |***********                         88.16828
#
#                 10        > 95% |**                                  88.60598
#
#        mean of 95%     87.56087
#          95th %ile     88.37868
 for      4.36704 seconds
Running:          unmap_ra8k# bin/munmap -E -C 200 -L -S -W -N unmap_ra8k -l 8k -I 250 -r -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ra8k     1   1     80.35402          189        0      400     8192  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     79.83242                79.83242
#                    max     82.21962                80.93194
#                   mean     80.43067                80.36718
#                 median     80.37706                80.35402
#                 stddev      0.32234                 0.20343
#         standard error      0.02268                 0.01480
#   99% confidence level      0.05275                 0.03442
#                   skew      1.95283                 0.28971
#               kurtosis      5.96778                -0.09682
#       time correlation      0.00035                 0.00085
#
#           elasped time     11.07201
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     79.00000 |*                                   79.90944
#                176     80.00000 |********************************    80.34977
#
#                 10        > 95% |*                                   80.81098
#
#        mean of 95%     80.34239
#          95th %ile     80.71178
 for     11.13115 seconds
Running:        unmap_ra128k# bin/munmap -E -C 200 -L -S -W -N unmap_ra128k -l 128k -I 500 -r -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ra128k   1   1     85.99823          196        0      200   131072  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     85.52975                85.52975
#                    max     92.97423                86.77391
#                   mean     86.12159                86.04006
#                 median     86.00975                85.99823
#                 stddev      0.63008                 0.26017
#         standard error      0.04433                 0.01858
#   99% confidence level      0.10312                 0.04323
#                   skew      7.11079                 0.47290
#               kurtosis     69.09318                -0.18703
#       time correlation      0.00043                 0.00021
#
#           elasped time     17.94595
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                100     85.00000 |********************************    85.83458
#                 86     86.00000 |***************************         86.21168
#
#                 10        > 95% |***                                 86.61890
#
#        mean of 95%     86.00894
#          95th %ile     86.46927
 for     17.96511 seconds

Running:        conn_connect# bin/connection -E -C 200 -L -S -W -N conn_connect -B 256 -c
             prc thr   usecs/call      samples   errors cnt/samp
conn_connect   1   1    108.65516          193        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    107.47116               107.47116
#                    max    302.25716               110.30416
#                   mean    114.46121               108.73698
#                 median    108.68216               108.65516
#                 stddev     32.50146                 0.52894
#         standard error      2.28679                 0.03807
#   99% confidence level      5.31908                 0.08856
#                   skew      5.49645                 0.62180
#               kurtosis     28.37243                 0.41816
#       time correlation     -0.16331                -0.00011
#
#           elasped time     11.70412
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10    107.00000 |**                                 107.80566
#                135    108.00000 |********************************   108.54857
#                 38    109.00000 |*********                          109.30750
#
#                 10        > 95% |**                                 110.04376
#
#        mean of 95%    108.66557
#          95th %ile    109.80016
 for     11.76216 seconds

Running:          unmap_wz8k# bin/munmap -E -C 200 -L -S -W -N unmap_wz8k -l 8k -I 500 -w -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wz8k     1   1     81.38901          192        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     80.64276                80.64276
#                    max     85.60916                82.75348
#                   mean     81.59306                81.48306
#                 median     81.40436                81.38901
#                 stddev      0.68106                 0.46458
#         standard error      0.04792                 0.03353
#   99% confidence level      0.11146                 0.07799
#                   skew      2.05484                 0.64108
#               kurtosis      6.73628                -0.29433
#       time correlation     -0.00156                -0.00060
#
#           elasped time      7.84322
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 27     80.00000 |******                              80.86567
#                133     81.00000 |********************************    81.41422
#                 22     82.00000 |*****                               82.18679
#
#                 10        > 95% |**                                  82.51732
#
#        mean of 95%     81.42623
#          95th %ile     82.36437
 for      7.86039 seconds
Running:        unmap_wz128k# bin/munmap -E -C 200 -L -S -W -N unmap_wz128k -l 128k -I 4000 -w -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wz128k   1   1    147.83584          179        0       25   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    145.26560               147.19072
#                    max    205.86592               148.67552
#                   mean    148.10436               147.87857
#                 median    147.82560               147.83584
#                 stddev      4.19838                 0.28297
#         standard error      0.29540                 0.02115
#   99% confidence level      0.68709                 0.04920
#                   skew     12.90619                 0.42483
#               kurtosis    174.42645                -0.12051
#       time correlation      0.00114                 0.00057
#
#           elasped time      4.91974
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          232
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                128    147.00000 |********************************   147.73472
#                 42    148.00000 |**********                         148.18229
#
#                  9        > 95% |**                                 148.50713
#
#        mean of 95%    147.84530
#          95th %ile    148.42976
 for      4.93918 seconds
Running:          unmap_wt8k# bin/munmap -E -C 200 -L -S -W -N unmap_wt8k -l 8k -I 500 -w -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wt8k     1   1     79.86446          188        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     79.09390                79.09390
#                    max     82.37454                80.52878
#                   mean     80.00076                79.87375
#                 median     79.88366                79.86446
#                 stddev      0.54982                 0.27413
#         standard error      0.03869                 0.01999
#   99% confidence level      0.08998                 0.04650
#                   skew      2.34559                 0.16683
#               kurtosis      6.24865                -0.08896
#       time correlation      0.00008                -0.00056
#
#           elasped time      8.76985
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          228
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                130     79.00000 |********************************    79.73057
#                 48     80.00000 |***********                         80.13873
#
#                 10        > 95% |**                                  80.46312
#
#        mean of 95%     79.84064
#          95th %ile     80.34830
 for      8.79911 seconds
Running:        unmap_wt128k# bin/munmap -E -C 200 -L -S -W -N unmap_wt128k -l 128k -I 5000 -w -f /tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wt128k   1   1    148.73730          199        0       20   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    144.84610               144.84610
#                    max    167.98850               151.98850
#                   mean    148.21465               148.07009
#                 median    148.73730               148.73730
#                 stddev      2.03852                 1.42062
#         standard error      0.14343                 0.10071
#   99% confidence level      0.33362                 0.23424
#                   skew      4.31854                -0.61458
#               kurtosis     41.66674                -0.72117
#       time correlation     -0.00274                -0.00157
#
#           elasped time      5.28196
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    144.00000 |*                                  144.86530
#                 24    145.00000 |*********                          145.70423
#                 30    146.00000 |************                       146.25325
#                  8    147.00000 |***                                147.80930
#                 77    148.00000 |********************************   148.64820
#                 48    149.00000 |*******************                149.21383
#
#                 10        > 95% |****                               150.10690
#
#        mean of 95%    147.96232
#          95th %ile    149.58210
 for      5.30601 seconds
Running:          unmap_wu8k# bin/munmap -E -C 200 -L -S -W -N unmap_wu8k -l 8k -I 500 -w -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wu8k     1   1     82.75857          197        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     82.06865                82.06865
#                    max     84.95888                83.84401
#                   mean     82.82245                82.77845
#                 median     82.76368                82.75857
#                 stddev      0.45799                 0.36333
#         standard error      0.03222                 0.02589
#   99% confidence level      0.07495                 0.06021
#                   skew      1.51482                 0.25451
#               kurtosis      4.70710                -0.45180
#       time correlation     -0.00068                -0.00052
#
#           elasped time      8.82835
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                147     82.00000 |********************************    82.61468
#                 40     83.00000 |********                            83.18893
#
#                 10        > 95% |**                                  83.54385
#
#        mean of 95%     82.73752
#          95th %ile     83.40880
 for      8.86817 seconds
Running:        unmap_wu128k# bin/munmap -E -C 200 -L -S -W -N unmap_wu128k -l 128k -I 5000 -w -f /var/tmp/libmicro.8008/data
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wu128k   1   1    146.18950          200        0       20   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    142.68230               142.68230
#                    max    165.28710               150.09350
#                   mean    145.74042               145.61868
#                 median    146.18950               146.18950
#                 stddev      2.09588                 1.54473
#         standard error      0.14747                 0.10923
#   99% confidence level      0.34301                 0.25407
#                   skew      3.79479                -0.47182
#               kurtosis     35.40805                -0.37958
#       time correlation      0.00378                 0.00539
#
#           elasped time      5.26612
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          242
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 12    142.00000 |***                                142.87750
#                 42    143.00000 |***********                        143.38325
#                  0    144.00000 |                                           -
#                 20    145.00000 |*****                              145.84454
#                115    146.00000 |********************************   146.42969
#                  1    147.00000 |*                                  147.18790
#
#                 10        > 95% |**                                 148.36166
#
#        mean of 95%    145.47432
#          95th %ile    147.23910
 for      5.28703 seconds
Running:          unmap_wa8k# bin/munmap -E -C 200 -L -S -W -N unmap_wa8k -l 8k -I 500 -w -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wa8k     1   1    110.54870          192        0      200     8192  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    110.11351               110.11351
#                    max    116.22423               111.24374
#                   mean    110.65534               110.55912
#                 median    110.57430               110.54870
#                 stddev      0.57072                 0.25589
#         standard error      0.04016                 0.01847
#   99% confidence level      0.09340                 0.04295
#                   skew      5.42788                 0.50659
#               kurtosis     44.62667                -0.25733
#       time correlation      0.00021                 0.00059
#
#           elasped time      8.05518
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          211
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181    110.00000 |********************************   110.52421
#                  1    111.00000 |*                                  111.00823
#
#                 10        > 95% |*                                  111.14608
#
#        mean of 95%    110.52687
#          95th %ile    111.01335
 for      8.07461 seconds
Running:        unmap_wa128k# bin/munmap -E -C 200 -L -S -W -N unmap_wa128k -l 128k -I 5000 -w -f MAP_ANON
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wa128k   1   1    181.68455          179        0       20   131072  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    178.34375               180.73735
#                    max    200.67975               182.54215
#                   mean    181.64539               181.68519
#                 median    181.64615               181.68455
#                 stddev      1.75858                 0.32324
#         standard error      0.12373                 0.02416
#   99% confidence level      0.28780                 0.05620
#                   skew      6.47805                 0.06240
#               kurtosis     67.84441                 0.12811
#       time correlation      0.00028                 0.00046
#
#           elasped time      3.98431
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    180.00000 |*                                  180.87388
#                151    181.00000 |********************************   181.61360
#                 16    182.00000 |***                                182.11975
#
#                  9        > 95% |*                                  182.38428
#
#        mean of 95%    181.64818
#          95th %ile    182.24775
 for      4.00375 seconds

Running:           mprot_z8k# bin/mprotect -E -C 200 -L -S -W -N mprot_z8k -l 8k -I 300 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_z8k      1   1     30.41945          195        0      333     8192 -----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     29.09794                29.79521
#                    max     33.08323                31.08674
#                   mean     30.45547                30.41731
#                 median     30.42868                30.41945
#                 stddev      0.39067                 0.26435
#         standard error      0.02749                 0.01893
#   99% confidence level      0.06394                 0.04403
#                   skew      2.17775                 0.27344
#               kurtosis     11.81482                -0.25925
#       time correlation     -0.00018                 0.00014
#
#           elasped time      2.05339
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          243
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 11     29.00000 |**                                  29.94743
#                174     30.00000 |********************************    30.41268
#
#                 10        > 95% |*                                   31.01478
#
#        mean of 95%     30.38502
#          95th %ile     30.89071
 for      2.08254 seconds
Running:         mprot_z128k# bin/mprotect -E -C 200 -L -S -W -N mprot_z128k -l 128k -I 500 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_z128k    1   1     29.55906          196        0      200   131072 -----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     26.99906                28.92929
#                    max     36.93825                30.21313
#                   mean     29.62478                29.55335
#                 median     29.55906                29.55906
#                 stddev      0.73914                 0.29031
#         standard error      0.05201                 0.02074
#   99% confidence level      0.12096                 0.04823
#                   skew      6.20502                 0.10889
#               kurtosis     55.81709                -0.67705
#       time correlation      0.00071                 0.00065
#
#           elasped time      1.20087
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          253
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     28.00000 |*                                   28.97691
#                175     29.00000 |********************************    29.52116
#                  6     30.00000 |*                                   30.01857
#
#                 10        > 95% |*                                   30.12584
#
#        mean of 95%     29.52257
#          95th %ile     30.04290
 for      1.21911 seconds
Running:          mprot_wz8k# bin/mprotect -E -C 200 -L -S -W -N mprot_wz8k -l 8k -I 500 -w -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_wz8k     1   1     65.14827          195        0      200     8192 --w--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     49.11883                64.35979
#                    max     73.94827                66.17355
#                   mean     65.20434                65.18073
#                 median     65.15851                65.14827
#                 stddev      1.39578                 0.35420
#         standard error      0.09821                 0.02536
#   99% confidence level      0.22843                 0.05900
#                   skew     -6.18476                 0.27094
#               kurtosis     92.36820                -0.22551
#       time correlation      0.00227                -0.00047
#
#           elasped time      2.63954
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          233
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 62     64.00000 |****************                    64.78715
#                123     65.00000 |********************************    65.31660
#
#                 10        > 95% |**                                  65.94968
#
#        mean of 95%     65.13916
#          95th %ile     65.75371
 for      2.68519 seconds
Running:        mprot_wz128k# bin/mprotect -E -C 200 -L -S -W -N mprot_wz128k -l 128k -I 500 -w -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_wz128k   1   1     71.91824          198        0      200   131072 --w--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     60.66960                70.73424
#                    max     74.61392                73.18416
#                   mean     71.90022                71.91719
#                 median     71.93360                71.91824
#                 stddev      0.96476                 0.45188
#         standard error      0.06788                 0.03211
#   99% confidence level      0.15789                 0.07470
#                   skew     -7.50464                -0.06320
#               kurtosis     88.85388                -0.21244
#       time correlation      0.00658                 0.00571
#
#           elasped time      2.91356
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     70.00000 |*                                   70.87811
#                107     71.00000 |********************************    71.63321
#                 76     72.00000 |**********************              72.26731
#
#                 10        > 95% |**                                  72.81450
#
#        mean of 95%     71.86946
#          95th %ile     72.68880
 for      2.94881 seconds
Running:         mprot_twz8k# bin/mprotect -E -C 200 -L -S -W -N mprot_twz8k -l 8k -I 500 -w -t -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_twz8k    1   1     66.37325          196        0      200     8192 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     63.26285                65.02925
#                    max     78.86349                67.73389
#                   mean     66.41903                66.32564
#                 median     66.37965                66.37325
#                 stddev      1.07107                 0.47122
#         standard error      0.07536                 0.03366
#   99% confidence level      0.17529                 0.07829
#                   skew      7.77241                -0.15333
#               kurtosis     88.15904                 0.18067
#       time correlation     -0.00403                -0.00245
#
#           elasped time      2.68866
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 43     65.00000 |*********                           65.65850
#                143     66.00000 |********************************    66.45743
#
#                 10        > 95% |**                                  67.30970
#
#        mean of 95%     66.27274
#          95th %ile     67.03885
 for      2.71050 seconds
Running:        mprot_tw128k# bin/mprotect -E -C 200 -L -S -W -N mprot_tw128k -l 128k -I 1000 -w -t -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_tw128k   1   1     67.29758          198        0      100   131072 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     65.65662                65.65662
#                    max     78.75870                69.38910
#                   mean     67.38115                67.24010
#                 median     67.30782                67.29758
#                 stddev      1.30251                 0.76232
#         standard error      0.09164                 0.05418
#   99% confidence level      0.21316                 0.12601
#                   skew      4.40284                 0.08923
#               kurtosis     31.45678                -0.62381
#       time correlation     -0.00742                -0.00659
#
#           elasped time      1.36698
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6     65.00000 |**                                  65.74622
#                 73     66.00000 |***************************         66.52134
#                 86     67.00000 |********************************    67.51458
#                 23     68.00000 |********                            68.22475
#
#                 10        > 95% |***                                 68.75806
#
#        mean of 95%     67.15935
#          95th %ile     68.53918
 for      1.39501 seconds
Running:          mprot_tw4m# bin/mprotect -E -C 200 -L -S -W -N mprot_tw4m -l 4m -w -t -B 10 -f /dev/zero
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_tw4m     1   1    238.77450          196        0       10  4194304 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    233.57770               233.57770
#                    max    740.27850               247.58090
#                   mean    242.54733               238.91073
#                 median    238.77450               238.77450
#                 stddev     36.59490                 3.26099
#         standard error      2.57481                 0.23293
#   99% confidence level      5.98900                 0.54179
#                   skew     12.62525                -0.01404
#               kurtosis    166.94000                -0.64208
#       time correlation     -0.08411                 0.00426
#
#           elasped time      0.49674
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 32    233.00000 |********************               233.78570
#                  5    234.00000 |***                                234.12042
#                  0    235.00000 |                                           -
#                  1    236.00000 |*                                  236.98250
#                 34    237.00000 |*********************              237.44932
#                 50    238.00000 |********************************   238.65828
#                  7    239.00000 |****                               239.29016
#                  4    240.00000 |**                                 240.52810
#                  3    241.00000 |*                                  241.60757
#                 48    242.00000 |******************************     242.40437
#                  2    243.00000 |*                                  243.08810
#
#                 10        > 95% |******                             244.80330
#
#        mean of 95%    238.59392
#          95th %ile    243.17770
 for      0.55754 seconds

Running:           pipe_pst1# bin/pipe -E -C 200 -L -S -W -N pipe_pst1 -s 1 -I 500 -x pipe -m st
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pst1      1   1      7.20406          200        0      200 st pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      6.54870                 6.54870
#                    max      8.95383                 8.50455
#                   mean      7.36778                 7.35256
#                 median      7.20919                 7.20406
#                 stddev      0.43221                 0.40639
#         standard error      0.03041                 0.02874
#   99% confidence level      0.07073                 0.06684
#                   skew      0.75443                 0.50095
#               kurtosis      0.58914                -0.28076
#       time correlation     -0.00039                -0.00038
#
#           elasped time      0.32517
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          211
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 36      6.00000 |*******                              6.85320
#                154      7.00000 |********************************     7.41157
#
#                 10        > 95% |**                                   8.24163
#
#        mean of 95%      7.30577
#          95th %ile      7.97975
 for      0.33570 seconds
Running:           pipe_pmt1# bin/pipe -E -C 200 -L -S -W -N pipe_pmt1 -s 1 -I 2000 -x pipe -m mt
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmt1      1   1     34.57638          201        0       50 mt pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     30.27558                30.27558
#                    max     43.09606                40.21862
#                   mean     34.48635                34.44351
#                 median     34.59686                34.57638
#                 stddev      2.34862                 2.27401
#         standard error      0.16525                 0.16040
#   99% confidence level      0.38437                 0.37308
#                   skew      0.37435                 0.20069
#               kurtosis     -0.11783                -0.71356
#       time correlation     -0.00144                -0.00018
#
#           elasped time      0.47349
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          205
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  8     30.00000 |*******                             30.70566
#                 32     31.00000 |******************************      31.56166
#                 24     32.00000 |**********************              32.41937
#                 22     33.00000 |********************                33.65478
#                 29     34.00000 |***************************         34.53242
#                 34     35.00000 |********************************    35.51138
#                 28     36.00000 |**************************          36.49985
#                 10     37.00000 |*********                           37.22956
#                  3     38.00000 |**                                  38.34299
#
#                 11        > 95% |**********                          39.17367
#
#        mean of 95%     34.16966
#          95th %ile     38.53414
 for      0.50512 seconds
Running:           pipe_pmp1# bin/pipe -E -C 200 -L -S -W -N pipe_pmp1 -s 1 -I 2000 -x pipe -m mp
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmp1      1   1     39.45524          201        0       50 mp pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     34.07412                34.07412
#                    max     54.35444                44.63668
#                   mean     38.96220                38.88562
#                 median     39.47572                39.45524
#                 stddev      2.35970                 2.09894
#         standard error      0.16603                 0.14805
#   99% confidence level      0.38618                 0.34436
#                   skew      1.01549                -0.40297
#               kurtosis      7.48566                -0.62136
#       time correlation      0.00747                 0.00701
#
#           elasped time      0.80000
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10     34.00000 |******                              34.62094
#                 14     35.00000 |********                            35.63828
#                 23     36.00000 |**************                      36.38547
#                 20     37.00000 |************                        37.53934
#                 17     38.00000 |**********                          38.64628
#                 43     39.00000 |**************************          39.56705
#                 52     40.00000 |********************************    40.48928
#                 11     41.00000 |******                              41.20581
#
#                 11        > 95% |******                              42.37597
#
#        mean of 95%     38.68355
#          95th %ile     41.65684
 for      0.82243 seconds
Running:          pipe_pst4k# bin/pipe -E -C 200 -L -S -W -N pipe_pst4k -s 4k -I 500 -x pipe -m st
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pst4k     1   1      9.76400          197        0      200 st pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      9.07920                 9.07920
#                    max     13.44400                10.71376
#                   mean      9.69845                 9.65023
#                 median      9.79345                 9.76400
#                 stddev      0.52898                 0.41125
#         standard error      0.03722                 0.02930
#   99% confidence level      0.08657                 0.06815
#                   skew      2.19379                 0.32198
#               kurtosis     11.61800                -0.72465
#       time correlation     -0.00099                -0.00034
#
#           elasped time      0.42239
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          223
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                167      9.00000 |********************************     9.53705
#                 20     10.00000 |***                                 10.13815
#
#                 10        > 95% |*                                   10.56452
#
#        mean of 95%      9.60134
#          95th %ile     10.42960
 for      0.46219 seconds
Running:          pipe_pmt4k# bin/pipe -E -C 200 -L -S -W -N pipe_pmt4k -s 4k -I 2000 -x pipe -m mt
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmt4k     1   1     54.21672          202        0       50 mt pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     48.63592                48.63592
#                    max     58.15400                58.15400
#                   mean     53.82719                53.82719
#                 median     54.21672                54.21672
#                 stddev      2.11195                 2.11195
#         standard error      0.14860                 0.14860
#   99% confidence level      0.34564                 0.34564
#                   skew     -0.43765                -0.43765
#               kurtosis     -0.39793                -0.39793
#       time correlation     -0.00093                -0.00093
#
#           elasped time      0.68107
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          204
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     48.00000 |**                                  48.83560
#                  9     49.00000 |*******                             49.49210
#                 14     50.00000 |**********                          50.60456
#                 17     51.00000 |*************                       51.54709
#                 19     52.00000 |**************                      52.55649
#                 35     53.00000 |***************************         53.60744
#                 41     54.00000 |********************************    54.52654
#                 36     55.00000 |****************************        55.40428
#                 17     56.00000 |*************                       56.47223
#
#                 11        > 95% |********                            57.39903
#
#        mean of 95%     53.62149
#          95th %ile     56.93544
 for      0.69156 seconds
Running:          pipe_pmp4k# bin/pipe -E -C 200 -L -S -W -N pipe_pmp4k -s 4k -I 2000 -x pipe -m mp
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmp4k     1   1     62.45946          199        0       50 mp pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     54.49786                54.49786
#                    max    119.21466                69.25370
#                   mean     63.10747                62.62523
#                 median     62.49530                62.45946
#                 stddev      5.71315                 3.50910
#         standard error      0.40198                 0.24875
#   99% confidence level      0.93500                 0.57860
#                   skew      5.18574                -0.18292
#               kurtosis     46.38309                -0.76034
#       time correlation      0.00302                -0.00836
#
#           elasped time      1.07319
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          227
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     54.00000 |**                                  54.62842
#                  4     55.00000 |*****                               55.46554
#                  9     56.00000 |************                        56.52879
#                  8     57.00000 |***********                         57.53274
#                 11     58.00000 |***************                     58.54499
#                 11     59.00000 |***************                     59.68814
#                 20     60.00000 |***************************         60.52487
#                 21     61.00000 |*****************************       61.50812
#                 23     62.00000 |********************************    62.41383
#                 14     63.00000 |*******************                 63.49845
#                 17     64.00000 |***********************             64.43156
#                 18     65.00000 |*************************           65.51098
#                 18     66.00000 |*************************           66.49743
#                 10     67.00000 |*************                       67.34343
#                  3     68.00000 |****                                68.08975
#
#                 10        > 95% |*************                       68.58605
#
#        mean of 95%     62.30984
#          95th %ile     68.19386
 for      1.08604 seconds

Running:           pipe_sst1# bin/pipe -E -C 200 -L -S -W -N pipe_sst1 -s 1 -I 500 -x sock -m st
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_sst1      1   1     18.53333          198        0      200 st sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     17.02422                17.02422
#                    max     23.21429                20.10901
#                   mean     18.60377                18.53060
#                 median     18.54869                18.53333
#                 stddev      0.76197                 0.54260
#         standard error      0.05361                 0.03856
#   99% confidence level      0.12470                 0.08969
#                   skew      2.59190                 0.11912
#               kurtosis     13.09548                 0.85436
#       time correlation     -0.00133                -0.00182
#
#           elasped time      0.79168
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          213
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 29     17.00000 |******                              17.70129
#                143     18.00000 |********************************    18.53120
#                 16     19.00000 |***                                 19.23302
#
#                 10        > 95% |**                                  19.80309
#
#        mean of 95%     18.46291
#          95th %ile     19.44469
 for      0.82340 seconds
Running:           pipe_smt1# bin/pipe -E -C 200 -L -S -W -N pipe_smt1 -s 1 -I 2000 -x sock -m mt
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smt1      1   1     91.49490          197        0       50 mt sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     88.33586                88.33586
#                    max    109.09234                97.51602
#                   mean     92.17738                91.95081
#                 median     91.61266                91.49490
#                 stddev      2.46258                 1.91984
#         standard error      0.17327                 0.13678
#   99% confidence level      0.40302                 0.31816
#                   skew      2.24643                 0.65737
#               kurtosis     10.63586                 0.01576
#       time correlation     -0.00387                -0.00322
#
#           elasped time      1.07542
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          231
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     88.00000 |***                                 88.44952
#                 21     89.00000 |*************                       89.53516
#                 44     90.00000 |****************************        90.61123
#                 49     91.00000 |********************************    91.45373
#                 24     92.00000 |***************                     92.52146
#                 24     93.00000 |***************                     93.45117
#                 15     94.00000 |*********                           94.57441
#                  5     95.00000 |***                                 95.26732
#
#                 10        > 95% |******                              96.54015
#
#        mean of 95%     91.70539
#          95th %ile     95.75986
 for      1.10670 seconds
Running:           pipe_smp1# bin/pipe -E -C 200 -L -S -W -N pipe_smp1 -s 1 -I 2000 -x sock -m mp
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smp1      1   1    101.47382          202        0       50 mp sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     91.95574                91.95574
#                    max    107.41302               107.41302
#                   mean    100.95956               100.95956
#                 median    101.47382               101.47382
#                 stddev      3.54552                 3.54552
#         standard error      0.24946                 0.24946
#   99% confidence level      0.58025                 0.58025
#                   skew     -0.34428                -0.34428
#               kurtosis     -0.68372                -0.68372
#       time correlation      0.00507                 0.00507
#
#           elasped time      1.46150
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          229
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     91.00000 |*                                   91.95574
#                  2     92.00000 |**                                  92.90550
#                  6     93.00000 |******                              93.42774
#                  4     94.00000 |****                                94.60406
#                  2     95.00000 |**                                  95.50646
#                 12     96.00000 |*************                       96.50742
#                 20     97.00000 |**********************              97.52758
#                 17     98.00000 |*******************                 98.44127
#                 13     99.00000 |**************                      99.31042
#                 15    100.00000 |*****************                  100.47269
#                 28    101.00000 |********************************   101.56635
#                 12    102.00000 |*************                      102.50806
#                 22    103.00000 |*************************          103.57116
#                 24    104.00000 |***************************        104.51382
#                 11    105.00000 |************                       105.54003
#                  2    106.00000 |**                                 106.05622
#
#                 11        > 95% |************                       106.53610
#
#        mean of 95%    100.63840
#          95th %ile    106.09718
 for      1.48108 seconds
Running:          pipe_sst4k# bin/pipe -E -C 200 -L -S -W -N pipe_sst4k -s 4k -I 500 -x sock -m st
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_sst4k     1   1     48.97803          196        0      200 st sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     47.53291                47.53291
#                    max     68.60811                50.59339
#                   mean     49.28611                49.05318
#                 median     48.99467                48.97803
#                 stddev      1.87481                 0.60197
#         standard error      0.13191                 0.04300
#   99% confidence level      0.30683                 0.10001
#                   skew      7.77338                 0.22486
#               kurtosis     70.41708                -0.13365
#       time correlation      0.00011                 0.00171
#
#           elasped time      2.04533
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          234
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  9     47.00000 |***                                 47.83471
#                 93     48.00000 |********************************    48.68316
#                 78     49.00000 |**************************          49.39249
#                  6     50.00000 |**                                  50.05344
#
#                 10        > 95% |***                                 50.34417
#
#        mean of 95%     48.98377
#          95th %ile     50.22859
 for      2.07138 seconds
Running:          pipe_smt4k# bin/pipe -E -C 200 -L -S -W -N pipe_smt4k -s 4k -I 2000 -x sock -m mt
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smt4k     1   1    170.75242          201        0       50 mt sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    166.03178               166.03178
#                    max    184.27946               177.07562
#                   mean    171.01253               170.94652
#                 median    170.75754               170.75242
#                 stddev      2.45809                 2.27771
#         standard error      0.17295                 0.16066
#   99% confidence level      0.40228                 0.37369
#                   skew      0.91213                 0.25552
#               kurtosis      2.90722                -0.64936
#       time correlation     -0.00396                -0.00293
#
#           elasped time      1.90456
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          235
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    166.00000 |**                                 166.29290
#                 15    167.00000 |***************                    167.49371
#                 30    168.00000 |******************************     168.49331
#                 32    169.00000 |********************************   169.52874
#                 30    170.00000 |******************************     170.57697
#                 28    171.00000 |****************************       171.63745
#                 22    172.00000 |**********************             172.50742
#                 21    173.00000 |*********************              173.52356
#                 10    174.00000 |**********                         174.25143
#
#                 11        > 95% |***********                        175.51914
#
#        mean of 95%    170.68179
#          95th %ile    174.67434
 for      1.93019 seconds
Running:          pipe_smp4k# bin/pipe -E -C 200 -L -S -W -N pipe_smp4k -s 4k -I 2000 -x sock -m mp
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smp4k     1   1    175.35526          200        0       50 mp sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    170.23526               170.23526
#                    max    196.79270               182.59494
#                   mean    175.48787               175.32761
#                 median    175.37574               175.35526
#                 stddev      3.00262                 2.49384
#         standard error      0.21126                 0.17634
#   99% confidence level      0.49140                 0.41017
#                   skew      2.03540                 0.26259
#               kurtosis     11.60967                -0.30485
#       time correlation     -0.00220                -0.00057
#
#           elasped time      2.24999
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          237
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    170.00000 |******                             170.61560
#                 11    171.00000 |**********                         171.54784
#                 19    172.00000 |******************                 172.47647
#                 25    173.00000 |************************           173.56183
#                 33    174.00000 |********************************   174.55142
#                 30    175.00000 |*****************************      175.55289
#                 31    176.00000 |******************************     176.51387
#                 11    177.00000 |**********                         177.42700
#                 16    178.00000 |***************                    178.45990
#                  7    179.00000 |******                             179.32399
#
#                 10        > 95% |*********                          180.70515
#
#        mean of 95%    175.04458
#          95th %ile    179.85574
 for      2.27074 seconds

Running:           pipe_tst1# bin/pipe -E -C 200 -L -S -W -N pipe_tst1 -s 1 -I 500 -x tcp -m st
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tst1      1   1    142.57807          198        0      200 st  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    140.78351               140.78351
#                    max    157.66927               144.68367
#                   mean    142.70595               142.57400
#                 median    142.58319               142.57807
#                 stddev      1.39665                 0.77646
#         standard error      0.09827                 0.05518
#   99% confidence level      0.22857                 0.12835
#                   skew      6.39360                 0.09549
#               kurtosis     63.78973                -0.22432
#       time correlation      0.00271                 0.00233
#
#           elasped time      5.98410
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    140.00000 |*                                  140.85348
#                 42    141.00000 |*************                      141.58829
#                 99    142.00000 |********************************   142.52770
#                 44    143.00000 |**************                     143.36088
#
#                 10        > 95% |***                                144.22620
#
#        mean of 95%    142.48611
#          95th %ile    143.91311
 for      6.00945 seconds
Running:           pipe_tmt1# bin/pipe -E -C 200 -L -S -W -N pipe_tmt1 -s 1 -I 2000 -x tcp -m mt
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmt1      1   1    256.23722          193        0       50 mt  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    252.83242               252.83242
#                    max    318.09706               260.13866
#                   mean    257.37878               256.32622
#                 median    256.29354               256.23722
#                 stddev      6.76321                 1.33936
#         standard error      0.47586                 0.09641
#   99% confidence level      1.10685                 0.22425
#                   skew      7.40250                 0.28944
#               kurtosis     60.40938                 0.03193
#       time correlation     -0.01600                -0.00668
#
#           elasped time      2.96481
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          171
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    252.00000 |*                                  252.83242
#                  5    253.00000 |**                                 253.57175
#                 24    254.00000 |*************                      254.68330
#                 55    255.00000 |********************************   255.53792
#                 49    256.00000 |****************************       256.46919
#                 37    257.00000 |*********************              257.39213
#                 12    258.00000 |******                             258.28821
#
#                 10        > 95% |*****                              259.33277
#
#        mean of 95%    256.16193
#          95th %ile    258.89962
 for      2.98460 seconds
Running:           pipe_tmp1# bin/pipe -E -C 200 -L -S -W -N pipe_tmp1 -s 1 -I 2000 -x tcp -m mp
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmp1      1   1    268.59510          197        0       50 mp  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    264.13558               264.13558
#                    max    280.33526               275.25110
#                   mean    268.94427               268.71697
#                 median    268.63606               268.59510
#                 stddev      2.61899                 2.20609
#         standard error      0.18427                 0.15718
#   99% confidence level      0.42862                 0.36559
#                   skew      1.09894                 0.32025
#               kurtosis      2.31802                -0.45949
#       time correlation     -0.00084                 0.00267
#
#           elasped time      3.37613
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          261
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4    264.00000 |***                                264.71926
#                 17    265.00000 |****************                   265.61406
#                 34    266.00000 |********************************   266.52240
#                 24    267.00000 |**********************             267.48299
#                 30    268.00000 |****************************       268.49253
#                 28    269.00000 |**************************         269.49768
#                 29    270.00000 |***************************        270.46831
#                 18    271.00000 |****************                   271.41707
#                  3    272.00000 |**                                 272.42998
#
#                 10        > 95% |*********                          273.44835
#
#        mean of 95%    268.46395
#          95th %ile    272.57334
 for      3.39433 seconds
Running:          pipe_tst4k# bin/pipe -E -C 200 -L -S -W -N pipe_tst4k -s 4k -I 500 -x tcp -m st
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tst4k     1   1    133.78455          195        0      200 st  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    132.27927               132.27927
#                    max    153.12408               135.25400
#                   mean    134.02636               133.84808
#                 median    133.86392               133.78455
#                 stddev      1.55573                 0.61185
#         standard error      0.10946                 0.04382
#   99% confidence level      0.25461                 0.10191
#                   skew      9.26832                 0.01482
#               kurtosis    109.79669                -0.69237
#       time correlation     -0.00087                 0.00154
#
#           elasped time      5.64360
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          209
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 17    132.00000 |*****                              132.78713
#                 98    133.00000 |********************************   133.53686
#                 70    134.00000 |**********************             134.37624
#
#                 10        > 95% |***                                135.00452
#
#        mean of 95%    133.78557
#          95th %ile    134.86488
 for      5.66805 seconds
Running:          pipe_tmt4k# bin/pipe -E -C 200 -L -S -W -N pipe_tmt4k -s 4k -I 2000 -x tcp -m mt
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmt4k     1   1    318.51612          198        0       50 mt  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    312.59740               312.59740
#                    max    345.19132               324.09692
#                   mean    318.92121               318.61324
#                 median    318.53660               318.51612
#                 stddev      3.29419                 2.31576
#         standard error      0.23178                 0.16457
#   99% confidence level      0.53912                 0.38280
#                   skew      3.13555                 0.14156
#               kurtosis     20.35436                -0.61667
#       time correlation     -0.00254                -0.00110
#
#           elasped time      3.61113
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    312.00000 |*                                  312.59740
#                  2    313.00000 |*                                  313.37564
#                  4    314.00000 |***                                314.71196
#                 17    315.00000 |*************                      315.67994
#                 40    316.00000 |********************************   316.55964
#                 23    317.00000 |******************                 317.50102
#                 21    318.00000 |****************                   318.46224
#                 31    319.00000 |************************           319.52740
#                 26    320.00000 |********************               320.50307
#                 17    321.00000 |*************                      321.41253
#                  6    322.00000 |****                               322.12572
#
#                 10        > 95% |********                           323.28540
#
#        mean of 95%    318.36473
#          95th %ile    322.27932
 for      3.62338 seconds
Running:          pipe_tmp4k# bin/pipe -E -C 200 -L -S -W -N pipe_tmp4k -s 4k -I 2000 -x tcp -m mp
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmp4k     1   1    323.37456          194        0       50 mp  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    320.45104               320.45104
#                    max    333.83472               326.31344
#                   mean    323.65094               323.41507
#                 median    323.45648               323.37456
#                 stddev      1.66916                 1.14109
#         standard error      0.11744                 0.08193
#   99% confidence level      0.27317                 0.19056
#                   skew      2.07513                -0.15533
#               kurtosis      8.77704                -0.24353
#       time correlation     -0.00323                -0.00094
#
#           elasped time      3.96778
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          232
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4    320.00000 |*                                  320.67888
#                 19    321.00000 |*********                          321.54133
#                 45    322.00000 |*********************              322.63455
#                 67    323.00000 |********************************   323.48582
#                 43    324.00000 |********************               324.45869
#                  6    325.00000 |**                                 325.14181
#
#                 10        > 95% |****                               325.58435
#
#        mean of 95%    323.29718
#          95th %ile    325.27408
 for      4.00731 seconds

Running:         conn_accept# bin/connection -E -C 200 -L -S -W -N conn_accept -B 256 -a
             prc thr   usecs/call      samples   errors cnt/samp
conn_accept    1   1     34.63610          200        0      256
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     34.16710                34.16710
#                    max     36.65110                35.35810
#                   mean     34.67910                34.66440
#                 median     34.64410                34.63610
#                 stddev      0.28249                 0.23693
#         standard error      0.01988                 0.01675
#   99% confidence level      0.04623                 0.03897
#                   skew      2.09480                 0.54757
#               kurtosis     10.86676                 0.02773
#       time correlation      0.00021                 0.00024
#
#           elasped time     39.64341
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181     34.00000 |********************************    34.61417
#                  9     35.00000 |*                                   35.05555
#
#                 10        > 95% |*                                   35.22140
#
#        mean of 95%     34.63508
#          95th %ile     35.12810
 for     39.66365 seconds

Running:           close_tcp# bin/close_tcp -E -C 200 -L -S -W -N close_tcp -B 32
             prc thr   usecs/call      samples   errors cnt/samp
close_tcp      1   1    142.59328          202        0       32
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    108.58528               108.58528
#                    max    176.36928               176.36928
#                   mean    142.01574               142.01574
#                 median    142.59328               142.59328
#                 stddev     20.48481                20.48481
#         standard error      1.44131                 1.44131
#   99% confidence level      3.35248                 3.35248
#                   skew     -0.10290                -0.10290
#               kurtosis     -1.27920                -1.27920
#       time correlation     -0.01105                -0.01105
#
#           elasped time      5.14689
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 15    108.00000 |*******************                109.45461
#                 10    111.00000 |************                       111.75008
#                  5    114.00000 |******                             115.44128
#                 10    117.00000 |************                       118.20288
#                 11    120.00000 |**************                     121.39546
#                  8    123.00000 |**********                         123.92428
#                  4    126.00000 |*****                              127.75928
#                  6    129.00000 |*******                            130.22128
#                  4    132.00000 |*****                              133.38528
#                  8    135.00000 |**********                         136.54428
#                 13    138.00000 |****************                   139.91697
#                 15    141.00000 |*******************                142.69088
#                 10    144.00000 |************                       145.28768
#                  5    147.00000 |******                             148.23648
#                  4    150.00000 |*****                              151.03128
#                 11    153.00000 |**************                     154.31183
#                  4    156.00000 |*****                              157.16728
#                  3    159.00000 |***                                160.86528
#                 25    162.00000 |********************************   163.71392
#                 13    165.00000 |****************                   166.12559
#                  6    168.00000 |*******                            169.76928
#                  1    171.00000 |*                                  171.62528
#
#                 11        > 95% |**************                     174.06674
#
#        mean of 95%    140.16987
#          95th %ile    172.33728
 for      5.16260 seconds
[openeuler@openeuler-riscv64 libMicro-0.4.0-rh]$ 

