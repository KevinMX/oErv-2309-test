[openeuler@openeuler-riscv64 ~]$ wget https://codeload.github.com/redhat-performance/libMicro/zip/0.4.0-rh
--2023-04-26 17:57:04--  https://codeload.github.com/redhat-performance/libMicro/zip/0.4.0-rh
Resolving codeload.github.com (codeload.github.com)... 20.205.243.165, ::
Connecting to codeload.github.com (codeload.github.com)|20.205.243.165|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [application/zip]
Saving to: ‘0.4.0-rh’

0.4.0-rh                                         [ <=>                                                                                           ] 146.19K  --.-KB/s    in 0.1s    

2023-04-26 17:57:37 (1.48 MB/s) - ‘0.4.0-rh’ saved [149694]

[openeuler@openeuler-riscv64 ~]$ unzip 0.4.0-rh
Archive:  0.4.0-rh
c62703b09900791046bc17d5b027336fa5e49ef1
   creating: libMicro-0.4.0-rh/
  inflating: libMicro-0.4.0-rh/.gitignore  
  inflating: libMicro-0.4.0-rh/Makefile  
  inflating: libMicro-0.4.0-rh/Makefile.Aix  
  inflating: libMicro-0.4.0-rh/Makefile.Linux  
  inflating: libMicro-0.4.0-rh/Makefile.SunOS  
  inflating: libMicro-0.4.0-rh/Makefile.benchmarks  
  inflating: libMicro-0.4.0-rh/Makefile.com  
  inflating: libMicro-0.4.0-rh/OPENSOLARIS.LICENSE  
  inflating: libMicro-0.4.0-rh/README  
  inflating: libMicro-0.4.0-rh/atomic.c  
  inflating: libMicro-0.4.0-rh/bench.sh  
  inflating: libMicro-0.4.0-rh/benchmark_fini.c  
  inflating: libMicro-0.4.0-rh/benchmark_finibatch.c  
  inflating: libMicro-0.4.0-rh/benchmark_finirun.c  
  inflating: libMicro-0.4.0-rh/benchmark_finiworker.c  
  inflating: libMicro-0.4.0-rh/benchmark_init.c  
  inflating: libMicro-0.4.0-rh/benchmark_initbatch.c  
  inflating: libMicro-0.4.0-rh/benchmark_initrun.c  
  inflating: libMicro-0.4.0-rh/benchmark_initworker.c  
  inflating: libMicro-0.4.0-rh/benchmark_optswitch.c  
  inflating: libMicro-0.4.0-rh/benchmark_result.c  
  inflating: libMicro-0.4.0-rh/bind.c  
  inflating: libMicro-0.4.0-rh/cachetocache.c  
  inflating: libMicro-0.4.0-rh/cascade_cond.c  
  inflating: libMicro-0.4.0-rh/cascade_fcntl.c  
  inflating: libMicro-0.4.0-rh/cascade_flock.c  
  inflating: libMicro-0.4.0-rh/cascade_lockf.c  
  inflating: libMicro-0.4.0-rh/cascade_mutex.c  
  inflating: libMicro-0.4.0-rh/chdir.c  
  inflating: libMicro-0.4.0-rh/close.c  
  inflating: libMicro-0.4.0-rh/close_tcp.c  
  inflating: libMicro-0.4.0-rh/connection.c  
  inflating: libMicro-0.4.0-rh/dup.c  
  inflating: libMicro-0.4.0-rh/elided.c  
  inflating: libMicro-0.4.0-rh/exec.c  
  inflating: libMicro-0.4.0-rh/exec_bin.c  
  inflating: libMicro-0.4.0-rh/exit.c  
  inflating: libMicro-0.4.0-rh/exp.c  
  inflating: libMicro-0.4.0-rh/fcntl.c  
  inflating: libMicro-0.4.0-rh/fcntl_ndelay.c  
  inflating: libMicro-0.4.0-rh/file_lock.c  
  inflating: libMicro-0.4.0-rh/fork.c  
  inflating: libMicro-0.4.0-rh/getcontext.c  
  inflating: libMicro-0.4.0-rh/getenv.c  
  inflating: libMicro-0.4.0-rh/getpeername.c  
  inflating: libMicro-0.4.0-rh/getpid.c  
  inflating: libMicro-0.4.0-rh/getrusage.c  
  inflating: libMicro-0.4.0-rh/getsockname.c  
  inflating: libMicro-0.4.0-rh/gettimeofday.c  
  inflating: libMicro-0.4.0-rh/isatty.c  
  inflating: libMicro-0.4.0-rh/libmicro.c  
  inflating: libMicro-0.4.0-rh/libmicro.h  
  inflating: libMicro-0.4.0-rh/libmicro_main.c  
  inflating: libMicro-0.4.0-rh/listen.c  
  inflating: libMicro-0.4.0-rh/localtime_r.c  
  inflating: libMicro-0.4.0-rh/log.c  
  inflating: libMicro-0.4.0-rh/longjmp.c  
  inflating: libMicro-0.4.0-rh/lrand48.c  
  inflating: libMicro-0.4.0-rh/lseek.c  
  inflating: libMicro-0.4.0-rh/malloc.c  
  inflating: libMicro-0.4.0-rh/memcpy.c  
  inflating: libMicro-0.4.0-rh/memmove.c  
  inflating: libMicro-0.4.0-rh/memrand.c  
  inflating: libMicro-0.4.0-rh/memset.c  
  inflating: libMicro-0.4.0-rh/mk_tarball  
  inflating: libMicro-0.4.0-rh/mktime.c  
  inflating: libMicro-0.4.0-rh/mmap.c  
  inflating: libMicro-0.4.0-rh/mprotect.c  
  inflating: libMicro-0.4.0-rh/msync.c  
  inflating: libMicro-0.4.0-rh/multiview.sh  
  inflating: libMicro-0.4.0-rh/munmap.c  
  inflating: libMicro-0.4.0-rh/mutex.c  
  inflating: libMicro-0.4.0-rh/nop.c  
  inflating: libMicro-0.4.0-rh/open.c  
  inflating: libMicro-0.4.0-rh/pipe.c  
  inflating: libMicro-0.4.0-rh/poll.c  
  inflating: libMicro-0.4.0-rh/pread.c  
  inflating: libMicro-0.4.0-rh/pthread_create.c  
  inflating: libMicro-0.4.0-rh/pwrite.c  
  inflating: libMicro-0.4.0-rh/read.c  
  inflating: libMicro-0.4.0-rh/realpath.c  
  inflating: libMicro-0.4.0-rh/recurse.c  
  inflating: libMicro-0.4.0-rh/recurse2.c  
  inflating: libMicro-0.4.0-rh/select.c  
  inflating: libMicro-0.4.0-rh/semop.c  
  inflating: libMicro-0.4.0-rh/setcontext.c  
  inflating: libMicro-0.4.0-rh/setsockopt.c  
  inflating: libMicro-0.4.0-rh/sigaction.c  
  inflating: libMicro-0.4.0-rh/siglongjmp.c  
  inflating: libMicro-0.4.0-rh/signal.c  
  inflating: libMicro-0.4.0-rh/sigprocmask.c  
  inflating: libMicro-0.4.0-rh/socket.c  
  inflating: libMicro-0.4.0-rh/socketpair.c  
  inflating: libMicro-0.4.0-rh/stat.c  
  inflating: libMicro-0.4.0-rh/strcasecmp.c  
  inflating: libMicro-0.4.0-rh/strchr.c  
  inflating: libMicro-0.4.0-rh/strcmp.c  
  inflating: libMicro-0.4.0-rh/strcpy.c  
  inflating: libMicro-0.4.0-rh/strftime.c  
  inflating: libMicro-0.4.0-rh/strlen.c  
  inflating: libMicro-0.4.0-rh/strtol.c  
  inflating: libMicro-0.4.0-rh/system.c  
  inflating: libMicro-0.4.0-rh/tattle.c  
  inflating: libMicro-0.4.0-rh/time.c  
  inflating: libMicro-0.4.0-rh/times.c  
  inflating: libMicro-0.4.0-rh/wrapper.sh  
  inflating: libMicro-0.4.0-rh/write.c  
  inflating: libMicro-0.4.0-rh/writev.c  
[openeuler@openeuler-riscv64 ~]$ cd libMicro-0.4.0-rh
[openeuler@openeuler-riscv64 libMicro-0.4.0-rh]$ make CFLAGS=-static CC=${CROSS_COMPILE}gcc ARCH=${ARCH} -j$(nproc)
cp wrapper.sh wrapper
cp bench.sh bench
cp multiview.sh multiview
chmod +x wrapper
chmod +x bench
chmod +x multiview
make[1]: Entering directory '/home/openeuler/libMicro-0.4.0-rh/bin-riscv64'
gcc -o atomic ../elided.c
gcc -c -static -D_REENTRANT ../libmicro.c -o libmicro.o
gcc -c -static -D_REENTRANT ../libmicro_main.c -o libmicro_main.o
gcc -c -static -D_REENTRANT ../benchmark_init.c -o benchmark_init.o
gcc -c -static -D_REENTRANT ../benchmark_fini.c -o benchmark_fini.o
gcc -c -static -D_REENTRANT ../benchmark_initrun.c -o benchmark_initrun.o
gcc -c -static -D_REENTRANT ../benchmark_finirun.c -o benchmark_finirun.o
gcc -c -static -D_REENTRANT ../benchmark_initbatch.c -o benchmark_initbatch.o
gcc -c -static -D_REENTRANT ../benchmark_finibatch.c -o benchmark_finibatch.o
gcc -c -static -D_REENTRANT ../benchmark_initworker.c -o benchmark_initworker.o
gcc -c -static -D_REENTRANT ../benchmark_finiworker.c -o benchmark_finiworker.o
gcc -c -static -D_REENTRANT ../benchmark_optswitch.c -o benchmark_optswitch.o
gcc -c -static -D_REENTRANT ../benchmark_result.c -o benchmark_result.o
gcc -c -static -D_REENTRANT ../bind.c -o bind.o
gcc -o cachetocache ../elided.c
gcc -c -static -D_REENTRANT ../cascade_mutex.c -o cascade_mutex.o
gcc -c -static -D_REENTRANT ../cascade_cond.c -o cascade_cond.o
gcc -c -static -D_REENTRANT ../cascade_lockf.c -o cascade_lockf.o
gcc -c -static -D_REENTRANT ../cascade_fcntl.c -o cascade_fcntl.o
gcc -c -static -D_REENTRANT ../cascade_flock.c -o cascade_flock.o
gcc -c -static -D_REENTRANT ../chdir.c -o chdir.o
../cascade_flock.c: In function ‘block’:
gcc -c -static -D_REENTRANT ../close.c -o close.o
../cascade_flock.c:141:10: warning: implicit declaration of function ‘flock’; did you mean ‘block’? [-Wimplicit-function-declaration]
  141 |  return (flock(files[index], LOCK_EX) == -1);
      |          ^~~~~
      |          block
gcc -c -static -D_REENTRANT ../close_tcp.c -o close_tcp.o
gcc -c -static -D_REENTRANT ../connection.c -o connection.o
gcc -c -static -D_REENTRANT ../dup.c -o dup.o
gcc -c -static -D_REENTRANT ../exec_bin.c -o exec_bin.o
gcc -c -static -D_REENTRANT ../exec.c -o exec.o
gcc -c -static -D_REENTRANT ../exit.c -o exit.o
gcc -c -static -D_REENTRANT ../exp.c -o exp.o
gcc -c -static -D_REENTRANT ../fcntl.c -o fcntl.o
gcc -c -static -D_REENTRANT ../fcntl_ndelay.c -o fcntl_ndelay.o
gcc -c -static -D_REENTRANT ../file_lock.c -o file_lock.o
gcc -c -static -D_REENTRANT ../fork.c -o fork.o
gcc -c -static -D_REENTRANT ../getcontext.c -o getcontext.o
gcc -c -static -D_REENTRANT ../getenv.c -o getenv.o
gcc -c -static -D_REENTRANT ../gettimeofday.c -o gettimeofday.o
gcc -c -static -D_REENTRANT ../getpeername.c -o getpeername.o
gcc -c -static -D_REENTRANT ../getpid.c -o getpid.o
gcc -c -static -D_REENTRANT ../getrusage.c -o getrusage.o
gcc -c -static -D_REENTRANT ../getsockname.c -o getsockname.o
gcc -c -static -D_REENTRANT ../isatty.c -o isatty.o
gcc -c -static -D_REENTRANT ../listen.c -o listen.o
gcc -c -static -D_REENTRANT ../localtime_r.c -o localtime_r.o
gcc -c -static -D_REENTRANT ../log.c -o log.o
gcc -c -static -D_REENTRANT ../longjmp.c -o longjmp.o
gcc -c -static -D_REENTRANT ../lrand48.c -o lrand48.o
gcc -c -static -D_REENTRANT ../lseek.c -o lseek.o
gcc -c -static -D_REENTRANT ../malloc.c -o malloc.o
gcc -c -static -D_REENTRANT ../memcpy.c -o memcpy.o
gcc -c -static -D_REENTRANT ../memmove.c -o memmove.o
gcc -c -static -D_REENTRANT ../memrand.c -o memrand.o
gcc -c -static -D_REENTRANT ../memset.c -o memset.o
gcc -c -static -D_REENTRANT ../mktime.c -o mktime.o
gcc -c -static -D_REENTRANT ../mprotect.c -o mprotect.o
gcc -c -static -D_REENTRANT ../mmap.c -o mmap.o
gcc -c -static -D_REENTRANT ../msync.c -o msync.o
gcc -c -static -D_REENTRANT ../munmap.c -o munmap.o
gcc -c -static -D_REENTRANT ../mutex.c -o mutex.o
../mprotect.c: In function ‘benchmark_optswitch’:
../mprotect.c:90:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   90 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
gcc -c -static -D_REENTRANT ../nop.c -o nop.o
gcc -c -static -D_REENTRANT ../open.c -o open.o
gcc -c -static -D_REENTRANT ../pipe.c -o pipe.o
../mmap.c: In function ‘benchmark_optswitch’:
../mmap.c:86:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   86 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
gcc -c -static -D_REENTRANT ../poll.c -o poll.o
../munmap.c: In function ‘benchmark_optswitch’:
../munmap.c:86:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   86 |   anon = strcmp(optf, "MAP_ANON") == 0;
      |          ^~~~~~
gcc -c -static -D_REENTRANT ../pread.c -o pread.o
gcc -c -static -D_REENTRANT ../pthread_create.c -o pthread_create.o
gcc -c -static -D_REENTRANT ../pwrite.c -o pwrite.o
gcc -c -static -D_REENTRANT ../read.c -o read.o
gcc -c -static -D_REENTRANT ../realpath.c -o realpath.o
gcc -c -static -D_REENTRANT ../recurse2.c -o recurse2.o
gcc -c -static -D_REENTRANT ../recurse.c -o recurse.o
gcc -c -static -D_REENTRANT ../select.c -o select.o
gcc -c -static -D_REENTRANT ../semop.c -o semop.o
gcc -c -static -D_REENTRANT ../setcontext.c -o setcontext.o
gcc -c -static -D_REENTRANT ../setsockopt.c -o setsockopt.o
gcc -c -static -D_REENTRANT ../sigaction.c -o sigaction.o
gcc -c -static -D_REENTRANT ../siglongjmp.c -o siglongjmp.o
gcc -c -static -D_REENTRANT ../signal.c -o signal.o
gcc -c -static -D_REENTRANT ../sigprocmask.c -o sigprocmask.o
gcc -c -static -D_REENTRANT ../socket.c -o socket.o
gcc -c -static -D_REENTRANT ../socketpair.c -o socketpair.o
gcc -c -static -D_REENTRANT ../stat.c -o stat.o
gcc -c -static -D_REENTRANT ../strcasecmp.c -o strcasecmp.o
gcc -c -static -D_REENTRANT ../strchr.c -o strchr.o
gcc -c -static -D_REENTRANT ../strcmp.c -o strcmp.o
gcc -c -static -D_REENTRANT ../strcpy.c -o strcpy.o
gcc -c -static -D_REENTRANT ../strftime.c -o strftime.o
gcc -c -static -D_REENTRANT ../strlen.c -o strlen.o
gcc -c -static -D_REENTRANT ../strtol.c -o strtol.o
gcc -c -static -D_REENTRANT ../system.c -o system.o
gcc -c -static -D_REENTRANT ../time.c -o time.o
gcc -c -static -D_REENTRANT ../times.c -o times.o
gcc -c -static -D_REENTRANT ../write.c -o write.o
gcc -c -static -D_REENTRANT ../writev.c -o writev.o
ar -cr libmicro.a libmicro.o libmicro_main.o benchmark_init.o benchmark_fini.o benchmark_initrun.o benchmark_finirun.o benchmark_initbatch.o benchmark_finibatch.o benchmark_initworker.o benchmark_finiworker.o benchmark_optswitch.o benchmark_result.o
gcc -o exec_bin -static exec_bin.o
gcc -o bind bind.o  -static libmicro.a    -lpthread -lm
gcc -o cascade_mutex cascade_mutex.o  -static libmicro.a   -lpthread -lm
gcc -o cascade_cond cascade_cond.o  -static libmicro.a   -lpthread -lm
gcc -o cascade_lockf cascade_lockf.o  -static libmicro.a   -lpthread -lm
gcc -o cascade_fcntl cascade_fcntl.o  -static libmicro.a   -lpthread -lm
gcc -o cascade_flock cascade_flock.o  -static libmicro.a   -lpthread -lm
gcc -o chdir chdir.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: bind.o: in function `.L14':
bind.c:(.text+0x27c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o close close.o  -static libmicro.a   -lpthread -lm
gcc -o close_tcp close_tcp.o  -static libmicro.a    -lpthread -lm
gcc -o connection connection.o  -static libmicro.a    -lpthread -lm
gcc -o dup dup.o  -static libmicro.a   -lpthread -lm
gcc -o exec exec.o  -static libmicro.a   -lpthread -lm
gcc -o exit exit.o  -static libmicro.a   -lpthread -lm
gcc -o exp exp.o  -static libmicro.a   -lpthread -lm
gcc -o fcntl fcntl.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: close_tcp.o: in function `.L12':
close_tcp.c:(.text+0x2d8): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/usr/bin/ld: connection.o: in function `.L20':
connection.c:(.text+0x394): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o fcntl_ndelay fcntl_ndelay.o  -static libmicro.a   -lpthread -lm
gcc -o file_lock file_lock.o  -static libmicro.a   -lpthread -lm
gcc -o fork fork.o  -static libmicro.a   -lpthread -lm
gcc -o getcontext getcontext.o  -static libmicro.a   -lpthread -lm
gcc -o getenv getenv.o  -static libmicro.a   -lpthread -lm
gcc -o gettimeofday gettimeofday.o  -static libmicro.a   -lpthread -lm
gcc -o getpeername getpeername.o  -static libmicro.a    -lpthread -lm
gcc -o getpid getpid.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: getpeername.o: in function `.L5':
getpeername.c:(.text+0xfc): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o getrusage getrusage.o  -static libmicro.a   -lpthread -lm
gcc -o getsockname getsockname.o  -static libmicro.a    -lpthread -lm
gcc -o isatty isatty.o  -static libmicro.a   -lpthread -lm
gcc -o listen listen.o  -static libmicro.a    -lpthread -lm
gcc -o localtime_r localtime_r.o  -static libmicro.a   -lpthread -lm
gcc -o log log.o  -static libmicro.a -lm  -lpthread -lm
gcc -o longjmp longjmp.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: getsockname.o: in function `.L5':
getsockname.c:(.text+0x10c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/usr/bin/ld: listen.o: in function `.L5':
listen.c:(.text+0x10c): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o lrand48 lrand48.o  -static libmicro.a   -lpthread -lm
gcc -o lseek lseek.o  -static libmicro.a   -lpthread -lm
gcc -o malloc malloc.o  -static libmicro.a   -lpthread -lm
gcc -o memcpy memcpy.o  -static libmicro.a   -lpthread -lm
gcc -o memmove memmove.o  -static libmicro.a   -lpthread -lm
gcc -o memrand memrand.o  -static libmicro.a   -lpthread -lm
gcc -o memset memset.o  -static libmicro.a   -lpthread -lm
gcc -o mktime mktime.o  -static libmicro.a   -lpthread -lm
gcc -o mprotect mprotect.o  -static libmicro.a   -lpthread -lm
gcc -o mmap mmap.o  -static libmicro.a   -lpthread -lm
gcc -o msync msync.o  -static libmicro.a   -lpthread -lm
gcc -o munmap munmap.o  -static libmicro.a   -lpthread -lm
gcc -o mutex mutex.o  -static libmicro.a   -lpthread -lm
gcc -o nop nop.o  -static libmicro.a   -lpthread -lm
gcc -o open open.o  -static libmicro.a   -lpthread -lm
gcc -o pipe pipe.o  -static libmicro.a    -lpthread -lm
gcc -o poll poll.o  -static libmicro.a   -lpthread -lm
/usr/bin/ld: pipe.o: in function `.L64':
pipe.c:(.text+0xa88): warning: Using 'gethostbyname' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
gcc -o pread pread.o  -static libmicro.a   -lpthread -lm
gcc -o pthread_create pthread_create.o  -static libmicro.a   -lpthread -lm
gcc -o pwrite pwrite.o  -static libmicro.a   -lpthread -lm
gcc -o read read.o  -static libmicro.a   -lpthread -lm
gcc -o realpath realpath.o  -static libmicro.a   -lpthread -lm
gcc -o recurse recurse.o recurse2.o -static libmicro.a   -lpthread -lm
gcc -o select select.o  -static libmicro.a   -lpthread -lm
gcc -o semop semop.o  -static libmicro.a   -lpthread -lm
gcc -o setcontext setcontext.o  -static libmicro.a   -lpthread -lm
gcc -o setsockopt setsockopt.o  -static libmicro.a    -lpthread -lm
gcc -o sigaction sigaction.o  -static libmicro.a   -lpthread -lm
gcc -o siglongjmp siglongjmp.o  -static libmicro.a   -lpthread -lm
gcc -o signal signal.o  -static libmicro.a   -lpthread -lm
gcc -o sigprocmask sigprocmask.o  -static libmicro.a   -lpthread -lm
gcc -o socket socket.o  -static libmicro.a   -lpthread -lm
gcc -o socketpair socketpair.o  -static libmicro.a   -lpthread -lm
gcc -o stat stat.o  -static libmicro.a   -lpthread -lm
gcc -o strcasecmp strcasecmp.o  -static libmicro.a   -lpthread -lm
gcc -o strchr strchr.o  -static libmicro.a   -lpthread -lm
gcc -o strcmp strcmp.o  -static libmicro.a   -lpthread -lm
gcc -o strcpy strcpy.o  -static libmicro.a   -lpthread -lm
gcc -o strftime strftime.o  -static libmicro.a   -lpthread -lm
gcc -o strlen strlen.o  -static libmicro.a   -lpthread -lm
gcc -o strtol strtol.o  -static libmicro.a   -lpthread -lm
gcc -o system system.o  -static libmicro.a   -lpthread -lm
gcc -o time time.o  -static libmicro.a   -lpthread -lm
gcc -o times times.o  -static libmicro.a   -lpthread -lm
gcc -o write write.o  -static libmicro.a   -lpthread -lm
gcc -o writev writev.o  -static libmicro.a   -lpthread -lm
echo "char * compiler_version = \""`gcc -dumpversion`"\";" > tattle.h
echo "char * CC = \""gcc"\";" >> tattle.h
echo "char * extra_compiler_flags = \"""\";" >> tattle.h
gcc -o tattle -static -I. ../tattle.c libmicro.a -lpthread -lrt -lm
rm siglongjmp.o pread.o getsockname.o cascade_fcntl.o cascade_flock.o file_lock.o mmap.o cascade_lockf.o strcasecmp.o munmap.o setcontext.o writev.o recurse.o longjmp.o pwrite.o setsockopt.o chdir.o exp.o getcontext.o time.o strftime.o connection.o cascade_cond.o sigprocmask.o times.o exit.o msync.o strcmp.o mprotect.o fcntl_ndelay.o socket.o select.o localtime_r.o memset.o gettimeofday.o exec.o realpath.o strcpy.o pipe.o mktime.o memrand.o system.o strtol.o close.o getpeername.o lseek.o listen.o isatty.o memcpy.o poll.o bind.o write.o memmove.o read.o close_tcp.o open.o socketpair.o log.o malloc.o nop.o cascade_mutex.o signal.o sigaction.o fcntl.o getpid.o dup.o mutex.o strlen.o pthread_create.o strchr.o getenv.o semop.o stat.o fork.o lrand48.o getrusage.o
make[1]: Leaving directory '/home/openeuler/libMicro-0.4.0-rh/bin-riscv64'
[openeuler@openeuler-riscv64 libMicro-0.4.0-rh]$ sh bench.sh
egrep: warning: egrep is obsolescent; using grep -E
!Libmicro_#:                            0.4.0
!Options:                  -E -C 200 -L -S -W
!Machine_name:              openeuler-riscv64
!OS_name:                               Linux
!OS_release:          6.1.19-2.oe2303.riscv64
!OS_build:                 #1 SMP Tue Apr  4 
!Processor:                           riscv64
!#CPUs:                                     8
!CPU_MHz:                                    
!CPU_NAME:                                   
!IP_address:        fec0::7320:737c:b2c0:d888
!IP_address:        fe80::6cc8:d373:ceed:27d7
!Run_by:                            openeuler
!Date:                         04/26/23 17:58
!Compiler:                                gcc
!Compiler Ver.:                        10.3.1
!sizeof(long):                              8
!extra_CFLAGS:                         [none]
!TimerRes:                         1000 nsecs
# 
# Obligatory null system call: use very short time
# for default since SuSe implements this "syscall" in userland
# 
Running:              getpid# bin/getpid -E -C 200 -L -S -W -N getpid -I 1 
             prc thr   usecs/call      samples   errors cnt/samp 
getpid         1   1      0.67073          193        0   100000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.65189                 0.65189
#                    max      0.74546                 0.69664
#                   mean      0.67310                 0.67127
#                 median      0.67114                 0.67073
#                 stddev      0.01241                 0.00871
#         standard error      0.00087                 0.00063
#   99% confidence level      0.00203                 0.00146
#                   skew      2.08776                 0.61840
#               kurtosis      7.44637                 0.38200
#       time correlation     -0.00003                -0.00003
#
#           elasped time     13.60286
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          158
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                183      0.00000 |********************************     0.67008
#
#                 10        > 95% |*                                    0.69314
#
#        mean of 95%      0.67008
#          95th %ile      0.68960
 for     13.62766 seconds
 
Running:              getenv# bin/getenv -E -C 200 -L -S -W -N getenv -s 100 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp 
getenv         1   1      0.37343          191        0     2000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.35692                 0.35692
#                    max      0.57797                 0.41695
#                   mean      0.38186                 0.37695
#                 median      0.37343                 0.37343
#                 stddev      0.02719                 0.01338
#         standard error      0.00191                 0.00097
#   99% confidence level      0.00445                 0.00225
#                   skew      3.98063                 1.36522
#               kurtosis     21.14610                 1.24255
#       time correlation     -0.00010                -0.00002
#
#           elasped time      0.15861
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          154
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                181      0.00000 |********************************     0.37493
#
#                 10        > 95% |*                                    0.41352
#
#        mean of 95%      0.37493
#          95th %ile      0.40991
 for      0.18488 seconds
Running:            getenvT2# bin/getenv -E -C 200 -L -S -W -N getenvT2 -s 100 -I 50 -T 2 
             prc thr   usecs/call      samples   errors cnt/samp 
getenvT2       1   2      0.46494          198        0     2000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.42334                 0.42334
#                    max      0.81246                 0.71044
#                   mean      0.50361                 0.49836
#                 median      0.46635                 0.46494
#                 stddev      0.08175                 0.07344
#         standard error      0.00575                 0.00522
#   99% confidence level      0.01338                 0.01214
#                   skew      1.43489                 1.28998
#               kurtosis      1.26325                 0.50988
#       time correlation     -0.00005                -0.00001
#
#           elasped time      0.24086
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          169
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                188      0.00000 |********************************     0.48827
#
#                 10        > 95% |*                                    0.68797
#
#        mean of 95%      0.48827
#          95th %ile      0.66142
 for      0.25206 seconds
 
Running:        gettimeofday# bin/gettimeofday -E -C 200 -L -S -W -N gettimeofday 
             prc thr   usecs/call      samples   errors cnt/samp 
gettimeofday   1   1      0.14568          183        0    20000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.14203                 0.14203
#                    max      0.23294                 0.15079
#                   mean      0.14793                 0.14565
#                 median      0.14584                 0.14568
#                 stddev      0.00924                 0.00179
#         standard error      0.00065                 0.00013
#   99% confidence level      0.00151                 0.00031
#                   skew      5.41302                 0.37243
#               kurtosis     38.30213                 0.00605
#       time correlation     -0.00002                -0.00000
#
#           elasped time      0.60238
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                173      0.00000 |********************************     0.14541
#
#                 10        > 95% |*                                    0.14972
#
#        mean of 95%      0.14541
#          95th %ile      0.14864
 for      0.62961 seconds
 
Running:                 log# bin/log -E -C 200 -L -S -W -N log -I 20 
             prc thr   usecs/call      samples   errors cnt/samp 
log            1   1      0.11214          152        0     5000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.10994                 0.10994
#                    max      0.21977                 0.11634
#                   mean      0.12155                 0.11237
#                 median      0.11260                 0.11214
#                 stddev      0.02229                 0.00138
#         standard error      0.00157                 0.00011
#   99% confidence level      0.00365                 0.00026
#                   skew      2.68952                 0.92845
#               kurtosis      6.39195                 0.49829
#       time correlation      0.00001                -0.00000
#
#           elasped time      0.12725
#      number of samples          152
#     number of outliers           50
#      getnsecs overhead          182
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                144      0.00000 |********************************     0.11218
#
#                  8        > 95% |*                                    0.11587
#
#        mean of 95%      0.11218
#          95th %ile      0.11516
 for      0.15373 seconds
Running:                 exp# bin/exp -E -C 200 -L -S -W -N exp -I 10 
             prc thr   usecs/call      samples   errors cnt/samp 
exp            1   1      0.10909          185        0    10000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.10528                 0.10528
#                    max      0.18310                 0.11749
#                   mean      0.11164                 0.10975
#                 median      0.10930                 0.10909
#                 stddev      0.00843                 0.00259
#         standard error      0.00059                 0.00019
#   99% confidence level      0.00138                 0.00044
#                   skew      4.93840                 0.76630
#               kurtosis     31.04369                -0.14490
#       time correlation      0.00000                -0.00001
#
#           elasped time      0.22969
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                175      0.00000 |********************************     0.10941
#
#                 10        > 95% |*                                    0.11564
#
#        mean of 95%      0.10941
#          95th %ile      0.11508
 for      0.25646 seconds
Running:             lrand48# bin/lrand48 -E -C 200 -L -S -W -N lrand48 
             prc thr   usecs/call      samples   errors cnt/samp 
lrand48        1   1      0.08267          188        0    10000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.07768                 0.07768
#                    max      0.13617                 0.09096
#                   mean      0.08430                 0.08293
#                 median      0.08280                 0.08267
#                 stddev      0.00655                 0.00278
#         standard error      0.00046                 0.00020
#   99% confidence level      0.00107                 0.00047
#                   skew      4.14279                 0.70152
#               kurtosis     23.74573                 0.27161
#       time correlation     -0.00002                 0.00000
#
#           elasped time      0.17454
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          191
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                178      0.00000 |********************************     0.08255
#
#                 10        > 95% |*                                    0.08971
#
#        mean of 95%      0.08255
#          95th %ile      0.08828
 for      0.19865 seconds
 
Running:           memset_10# bin/memset -E -C 200 -L -S -W -N memset_10 -s 10 -I 3 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10      1   1      0.03440          199        0    33333       10          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.03020                 0.03020
#                    max      0.06352                 0.03992
#                   mean      0.03450                 0.03428
#                 median      0.03443                 0.03440
#                 stddev      0.00288                 0.00188
#         standard error      0.00020                 0.00013
#   99% confidence level      0.00047                 0.00031
#                   skew      5.17734                 0.06156
#               kurtosis     49.17170                -0.18765
#       time correlation     -0.00002                -0.00001
#
#           elasped time      0.23770
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          158
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                189      0.00000 |********************************     0.03408
#
#                 10        > 95% |*                                    0.03811
#
#        mean of 95%      0.03408
#          95th %ile      0.03737
 for      0.26354 seconds
Running:          memset_256# bin/memset -E -C 200 -L -S -W -N memset_256 -s 256 -I 10 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_256     1   1      0.05960          153        0    10000      256          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.05689                 0.05689
#                    max      0.11147                 0.06316
#                   mean      0.06487                 0.05974
#                 median      0.05998                 0.05960
#                 stddev      0.01168                 0.00120
#         standard error      0.00082                 0.00010
#   99% confidence level      0.00191                 0.00023
#                   skew      2.32346                 0.58649
#               kurtosis      4.45470                 0.44105
#       time correlation     -0.00008                 0.00000
#
#           elasped time      0.13461
#      number of samples          153
#     number of outliers           49
#      getnsecs overhead          225
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                145      0.00000 |********************************     0.05957
#
#                  8        > 95% |*                                    0.06268
#
#        mean of 95%      0.05957
#          95th %ile      0.06198
 for      0.14529 seconds
Running:        memset_256_u# bin/memset -E -C 200 -L -S -W -N memset_256_u -s 256 -a 1 -I 10 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_256_u   1   1      0.08256          182        0    10000      256           1
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.08036                 0.08036
#                    max      0.14538                 0.08930
#                   mean      0.08505                 0.08332
#                 median      0.08287                 0.08256
#                 stddev      0.00742                 0.00213
#         standard error      0.00052                 0.00016
#   99% confidence level      0.00121                 0.00037
#                   skew      5.39322                 1.19762
#               kurtosis     36.35463                 0.49462
#       time correlation     -0.00003                 0.00000
#
#           elasped time      0.17489
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          233
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                172      0.00000 |********************************     0.08300
#
#                 10        > 95% |*                                    0.08872
#
#        mean of 95%      0.08300
#          95th %ile      0.08799
 for      0.18940 seconds
Running:           memset_1k# bin/memset -E -C 200 -L -S -W -N memset_1k -s 1k -I 12 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_1k      1   1      0.17467          192        0     8333     1024          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.16604                 0.16604
#                    max      0.23560                 0.18906
#                   mean      0.17691                 0.17549
#                 median      0.17491                 0.17467
#                 stddev      0.00840                 0.00460
#         standard error      0.00059                 0.00033
#   99% confidence level      0.00138                 0.00077
#                   skew      3.47164                 0.61877
#               kurtosis     17.41287                -0.21790
#       time correlation     -0.00004                -0.00001
#
#           elasped time      0.30132
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                182      0.00000 |********************************     0.17491
#
#                 10        > 95% |*                                    0.18603
#
#        mean of 95%      0.17491
#          95th %ile      0.18366
 for      0.31600 seconds
Running:           memset_4k# bin/memset -E -C 200 -L -S -W -N memset_4k -s 4k -I 62 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_4k      1   1      0.62755          172        0     1612     4096          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.57082                 0.60669
#                    max      0.91658                 0.69187
#                   mean      0.65198                 0.63415
#                 median      0.63261                 0.62755
#                 stddev      0.05273                 0.01943
#         standard error      0.00371                 0.00148
#   99% confidence level      0.00863                 0.00345
#                   skew      2.33412                 1.00307
#               kurtosis      6.14142                 0.22593
#       time correlation     -0.00016                 0.00001
#
#           elasped time      0.21671
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          198
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                163      0.00000 |********************************     0.63151
#
#                  9        > 95% |*                                    0.68211
#
#        mean of 95%      0.63151
#          95th %ile      0.67638
 for      0.22789 seconds
Running:        memset_4k_uc# bin/memset -E -C 200 -L -S -W -N memset_4k_uc -s 4k -u -I 100 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_4k_uc   1   1      0.64496          164        0     1000     4096          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.63293                 0.63293
#                    max      1.03178                 0.67287
#                   mean      0.66181                 0.64690
#                 median      0.64778                 0.64496
#                 stddev      0.04375                 0.00869
#         standard error      0.00308                 0.00068
#   99% confidence level      0.00716                 0.00158
#                   skew      4.96487                 0.75915
#               kurtosis     33.66087                -0.20565
#       time correlation     -0.00013                -0.00006
#
#           elasped time      0.78856
#      number of samples          164
#     number of outliers           38
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                155      0.00000 |********************************     0.64574
#
#                  9        > 95% |*                                    0.66692
#
#        mean of 95%      0.64574
#          95th %ile      0.66288
 for      0.79954 seconds
 
Running:          memset_10k# bin/memset -E -C 200 -L -S -W -N memset_10k -s 10k -I 150 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10k     1   1      1.52392          186        0      666    10240          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.48036                 1.48036
#                    max      2.40846                 1.67561
#                   mean      1.56600                 1.54121
#                 median      1.53233                 1.52392
#                 stddev      0.10617                 0.04619
#         standard error      0.00747                 0.00339
#   99% confidence level      0.01738                 0.00788
#                   skew      3.74630                 1.04792
#               kurtosis     20.89824                 0.40819
#       time correlation     -0.00025                 0.00004
#
#           elasped time      0.21674
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176      1.00000 |********************************     1.53441
#
#                 10        > 95% |*                                    1.66090
#
#        mean of 95%      1.53441
#          95th %ile      1.64161
 for      0.22956 seconds
Running:           memset_1m# bin/memset -E -C 200 -L -S -W -N memset_1m -s 1m -I 200000 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_1m      1   1    216.17120          193        0        1  1048576          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    208.18400               208.18400
#                    max    265.78400               227.56320
#                   mean    217.67324               216.55600
#                 median    216.27360               216.17120
#                 stddev      7.13037                 4.11845
#         standard error      0.50169                 0.29645
#   99% confidence level      1.16693                 0.68955
#                   skew      3.38082                 0.55970
#               kurtosis     17.07854                -0.21900
#       time correlation     -0.00735                 0.00705
#
#           elasped time      0.46249
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          208
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    208.00000 |**                                 208.58080
#                  2    209.00000 |**                                 209.38720
#                  4    210.00000 |*****                              210.61600
#                 19    211.00000 |*************************          211.59554
#                 18    212.00000 |************************           212.60427
#                 15    213.00000 |********************               213.50027
#                 14    214.00000 |******************                 214.54743
#                 17    215.00000 |**********************             215.46494
#                 24    216.00000 |********************************   216.40480
#                 15    217.00000 |********************               217.52288
#                 19    218.00000 |*************************          218.55065
#                  7    219.00000 |*********                          219.53577
#                  7    220.00000 |*********                          220.43177
#                  7    221.00000 |*********                          221.63497
#                  7    222.00000 |*********                          222.43223
#                  4    223.00000 |*****                              223.65920
#                  2    224.00000 |**                                 224.58080
#
#                 10        > 95% |*************                      225.95808
#
#        mean of 95%    216.04222
#          95th %ile    224.77280
 for      0.47452 seconds
Running:          memset_10m# bin/memset -E -C 200 -L -S -W -N memset_10m -s 10m -I 2000000 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memset_10m     1   1   2122.47810          190        0        1 10485760          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   2068.38530              2068.38530
#                    max   2440.37890              2207.87970
#                   mean   2133.28624              2123.25338
#                 median   2124.16770              2122.47810
#                 stddev     52.35126                28.90968
#         standard error      3.68342                 2.09733
#   99% confidence level      8.56764                 4.87839
#                   skew      2.92303                 0.54923
#               kurtosis     12.24569                -0.25175
#       time correlation     -0.04709                -0.03977
#
#           elasped time      4.43620
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          179
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   2068.00000 |**                                2068.38530
#                  0   2072.00000 |                                           -
#                  1   2076.00000 |**                                2076.67970
#                  8   2080.00000 |*******************               2082.51010
#                  8   2084.00000 |*******************               2086.57730
#                  9   2088.00000 |**********************            2089.91490
#                 12   2092.00000 |*****************************     2093.53303
#                 11   2096.00000 |***************************       2097.80203
#                  9   2100.00000 |**********************            2101.79330
#                 13   2104.00000 |********************************  2106.31859
#                  9   2108.00000 |**********************            2110.11899
#                  2   2112.00000 |****                              2114.03010
#                 10   2116.00000 |************************          2118.37954
#                  8   2120.00000 |*******************               2122.91650
#                 10   2124.00000 |************************          2127.05026
#                  9   2128.00000 |**********************            2129.79686
#                  8   2132.00000 |*******************               2134.41730
#                 13   2136.00000 |********************************  2138.14136
#                  7   2140.00000 |*****************                 2141.82073
#                  5   2144.00000 |************                      2145.15458
#                  3   2148.00000 |*******                           2150.11757
#                  8   2152.00000 |*******************               2153.95330
#                  5   2156.00000 |************                      2158.40514
#                  4   2160.00000 |*********                         2160.94850
#                  3   2164.00000 |*******                           2165.64823
#                  1   2168.00000 |**                                2168.48130
#                  3   2172.00000 |*******                           2173.34530
#
#                 10        > 95% |************************          2189.67554
#
#        mean of 95%   2119.56326
#          95th %ile   2177.39010
 for      4.44950 seconds
Running:        memsetP2_10m# bin/memset -E -C 200 -L -S -W -N memsetP2_10m -s 10m -P 2 -I 2000000 
             prc thr   usecs/call      samples   errors cnt/samp     size       alignment
memsetP2_10m   2   1   1809.36560          197        0        1 10485760          4k
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1753.48080              1753.48080
#                    max   2521.58320              1937.39120
#                   mean   1823.00977              1816.11659
#                 median   1810.18480              1809.36560
#                 stddev     68.05195                40.55962
#         standard error      4.78812                 2.88975
#   99% confidence level     11.13716                 6.72157
#                   skew      5.72744                 0.85931
#               kurtosis     53.10137                 0.25031
#       time correlation     -0.16202                -0.01943
#
#           elasped time      3.86700
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   1750.00000 |****                              1753.87760
#                  3   1755.00000 |******                            1758.10587
#                  4   1760.00000 |********                          1762.58160
#                  9   1765.00000 |*******************               1768.05289
#                  8   1770.00000 |*****************                 1773.55120
#                 11   1775.00000 |***********************           1778.11964
#                 14   1780.00000 |*****************************     1781.73589
#                 12   1785.00000 |*************************         1787.07440
#                  9   1790.00000 |*******************               1791.97751
#                 15   1795.00000 |********************************  1797.69883
#                  8   1800.00000 |*****************                 1802.35440
#                  6   1805.00000 |************                      1808.53787
#                  9   1810.00000 |*******************               1811.85164
#                 11   1815.00000 |***********************           1817.76705
#                  5   1820.00000 |**********                        1822.36016
#                  7   1825.00000 |**************                    1827.38434
#                  5   1830.00000 |**********                        1832.13424
#                  9   1835.00000 |*******************               1838.53538
#                  7   1840.00000 |**************                    1842.56514
#                  4   1845.00000 |********                          1848.96880
#                  7   1850.00000 |**************                    1852.28583
#                  5   1855.00000 |**********                        1858.65072
#                  5   1860.00000 |**********                        1862.16816
#                  3   1865.00000 |******                            1867.65680
#                  1   1870.00000 |**                                1871.57360
#                  2   1875.00000 |****                              1878.81840
#                  0   1880.00000 |                                           -
#                  4   1885.00000 |********                          1887.16400
#                  2   1890.00000 |****                              1891.52880
#
#                 10        > 95% |*********************             1918.89264
#
#        mean of 95%   1810.62055
#          95th %ile   1896.07280
 for      3.88127 seconds
 
Running:             memrand# bin/memrand -E -C 200 -L -S -W -N memrand -s 128m -B 10000 
             prc thr   usecs/call      samples   errors cnt/samp     size
memrand        1   1      0.04708          199        0    10000 134217728 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.04467                 0.04467
#                    max      0.05788                 0.05386
#                   mean      0.04760                 0.04745
#                 median      0.04708                 0.04708
#                 stddev      0.00249                 0.00220
#         standard error      0.00018                 0.00016
#   99% confidence level      0.00041                 0.00036
#                   skew      1.46138                 1.03606
#               kurtosis      2.49143                 0.54551
#       time correlation     -0.00001                -0.00000
#
#           elasped time      0.38241
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          238
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                189      0.00000 |********************************     0.04715
#
#                 10        > 95% |*                                    0.05312
#
#        mean of 95%      0.04715
#          95th %ile      0.05248
 for      0.41027 seconds
#
# benchmark cachetocache not compiled/supported on this platform
#
 
Running:          isatty_yes# bin/isatty -E -C 200 -L -S -W -N isatty_yes 
             prc thr   usecs/call      samples   errors cnt/samp 
isatty_yes     1   1     14.60078          193        0    20000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     14.34559                14.34559
#                    max     15.37664                14.88204
#                   mean     14.63102                14.61207
#                 median     14.60674                14.60078
#                 stddev      0.13074                 0.09379
#         standard error      0.00920                 0.00675
#   99% confidence level      0.02140                 0.01570
#                   skew      1.89831                 0.50913
#               kurtosis      6.38828                 0.25596
#       time correlation     -0.00014                -0.00017
#
#           elasped time     59.11607
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          187
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                183     14.00000 |********************************    14.59994
#
#                 10        > 95% |*                                   14.83403
#
#        mean of 95%     14.59994
#          95th %ile     14.81198
 for     59.14055 seconds
Running:           isatty_no# bin/isatty -E -C 200 -L -S -W -N isatty_no -f /tmp/libmicro.2571/ifile 
             prc thr   usecs/call      samples   errors cnt/samp 
isatty_no      1   1      0.88149          200        0    20000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.84849                 0.84849
#                    max      0.98299                 0.95929
#                   mean      0.88712                 0.88626
#                 median      0.88163                 0.88149
#                 stddev      0.02620                 0.02485
#         standard error      0.00184                 0.00176
#   99% confidence level      0.00429                 0.00409
#                   skew      1.06147                 0.93080
#               kurtosis      0.83013                 0.36177
#       time correlation     -0.00017                -0.00015
#
#           elasped time      3.58882
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          184
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      0.00000 |********************************     0.88290
#
#                 10        > 95% |*                                    0.95017
#
#        mean of 95%      0.88290
#          95th %ile      0.94320
 for      3.59810 seconds
 
Running:           malloc_10# bin/malloc -E -C 200 -L -S -W -N malloc_10 -s 10 -g 10 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_10      1   1      0.16545          188        0     2000     10 10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.15930                 0.15930
#                    max      0.22869                 0.17255
#                   mean      0.16703                 0.16545
#                 median      0.16584                 0.16545
#                 stddev      0.00761                 0.00263
#         standard error      0.00054                 0.00019
#   99% confidence level      0.00125                 0.00045
#                   skew      5.08545                 0.03030
#               kurtosis     33.76404                -0.33339
#       time correlation     -0.00001                -0.00001
#
#           elasped time      0.67944
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          153
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                178      0.00000 |********************************     0.16515
#
#                 10        > 95% |*                                    0.17080
#
#        mean of 95%      0.16515
#          95th %ile      0.16969
 for      0.70499 seconds
Running:          malloc_100# bin/malloc -E -C 200 -L -S -W -N malloc_100 -s 100 -g 10 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_100     1   1      0.16314          180        0     2000     10 100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.15750                 0.15750
#                    max      0.20084                 0.16914
#                   mean      0.16548                 0.16325
#                 median      0.16345                 0.16314
#                 stddev      0.00745                 0.00236
#         standard error      0.00052                 0.00018
#   99% confidence level      0.00122                 0.00041
#                   skew      2.83641                 0.08130
#               kurtosis      8.30196                -0.45907
#       time correlation     -0.00003                -0.00000
#
#           elasped time      0.67182
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      0.00000 |********************************     0.16300
#
#                  9        > 95% |*                                    0.16805
#
#        mean of 95%      0.16300
#          95th %ile      0.16744
 for      0.68243 seconds
Running:           malloc_1k# bin/malloc -E -C 200 -L -S -W -N malloc_1k -s 1k -g 10 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_1k      1   1      0.19309          200        0     2000     10 1024 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.18889                 0.18889
#                    max      0.29224                 0.27449
#                   mean      0.20570                 0.20486
#                 median      0.19309                 0.19309
#                 stddev      0.02669                 0.02543
#         standard error      0.00188                 0.00180
#   99% confidence level      0.00437                 0.00418
#                   skew      1.74024                 1.76215
#               kurtosis      1.33111                 1.30581
#       time correlation      0.00023                 0.00023
#
#           elasped time      0.83451
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      0.00000 |********************************     0.20162
#
#                 10        > 95% |*                                    0.26636
#
#        mean of 95%      0.20162
#          95th %ile      0.26373
 for      0.84387 seconds
Running:          malloc_10k# bin/malloc -E -C 200 -L -S -W -N malloc_10k -s 10k -g 10 -I 50 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_10k     1   1      0.42279          181        0     2000     10 10240 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.41319                 0.41319
#                    max      0.54415                 0.43590
#                   mean      0.42707                 0.42313
#                 median      0.42344                 0.42279
#                 stddev      0.01614                 0.00430
#         standard error      0.00114                 0.00032
#   99% confidence level      0.00264                 0.00074
#                   skew      5.11535                 0.41454
#               kurtosis     31.36377                 0.01952
#       time correlation     -0.00004                 0.00001
#
#           elasped time      1.72943
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171      0.00000 |********************************     0.42256
#
#                 10        > 95% |*                                    0.43290
#
#        mean of 95%      0.42256
#          95th %ile      0.43079
 for      1.74315 seconds
Running:         malloc_100k# bin/malloc -E -C 200 -L -S -W -N malloc_100k -s 100k -g 10 -I 2000 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
malloc_100k    1   1     50.36765          189        0       50     10 102400 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     48.91357                48.91357
#                    max     67.23754                52.55953
#                   mean     50.80061                50.40784
#                 median     50.43165                50.36765
#                 stddev      1.89379                 0.75261
#         standard error      0.13325                 0.05474
#   99% confidence level      0.30993                 0.12734
#                   skew      4.53972                 0.51345
#               kurtosis     29.80020                -0.09613
#       time correlation     -0.00542                -0.00206
#
#           elasped time      5.13596
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          173
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     48.00000 |*                                   48.91357
#                 65     49.00000 |***********************             49.64484
#                 87     50.00000 |********************************    50.51506
#                 26     51.00000 |*********                           51.34244
#
#                 10        > 95% |***                                 52.15402
#
#        mean of 95%     50.31029
#          95th %ile     51.83197
 for      5.15285 seconds
 
Running:         mallocT2_10# bin/malloc -E -C 200 -L -S -W -N mallocT2_10 -s 10 -g 10 -T 2 -I 200 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_10    1   2      0.19258          197        0      500     10 10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.17517                 0.17517
#                    max      0.38719                 0.28336
#                   mean      0.20951                 0.20658
#                 median      0.19396                 0.19258
#                 stddev      0.03293                 0.02720
#         standard error      0.00232                 0.00194
#   99% confidence level      0.00539                 0.00451
#                   skew      1.77747                 1.14024
#               kurtosis      4.06757                 0.06336
#       time correlation     -0.00004                -0.00001
#
#           elasped time      0.25072
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          161
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                187      0.00000 |********************************     0.20303
#
#                 10        > 95% |*                                    0.27306
#
#        mean of 95%      0.20303
#          95th %ile      0.26636
 for      0.25928 seconds
Running:        mallocT2_100# bin/malloc -E -C 200 -L -S -W -N mallocT2_100 -s 100 -g 10 -T 2 -I 200 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_100   1   2      0.29533          163        0      500     10 100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.28294                 0.28294
#                    max      0.52855                 0.32754
#                   mean      0.31284                 0.29769
#                 median      0.30056                 0.29533
#                 stddev      0.03703                 0.01015
#         standard error      0.00261                 0.00080
#   99% confidence level      0.00606                 0.00185
#                   skew      2.44300                 0.65510
#               kurtosis      7.18698                -0.36517
#       time correlation     -0.00001                 0.00001
#
#           elasped time      0.35638
#      number of samples          163
#     number of outliers           39
#      getnsecs overhead          197
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                154      0.00000 |********************************     0.29635
#
#                  9        > 95% |*                                    0.32067
#
#        mean of 95%      0.29635
#          95th %ile      0.31735
 for      0.36945 seconds
Running:         mallocT2_1k# bin/malloc -E -C 200 -L -S -W -N mallocT2_1k -s 1k -g 10 -T 2 -I 200 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_1k    1   2      0.24117          200        0      500     10 1024 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.21915                 0.21915
#                    max      0.42339                 0.37255
#                   mean      0.25860                 0.25714
#                 median      0.24158                 0.24117
#                 stddev      0.04119                 0.03867
#         standard error      0.00290                 0.00273
#   99% confidence level      0.00674                 0.00636
#                   skew      1.24109                 1.06656
#               kurtosis      0.92237                 0.03561
#       time correlation     -0.00013                -0.00011
#
#           elasped time      0.29913
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          176
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                190      0.00000 |********************************     0.25210
#
#                 10        > 95% |*                                    0.35291
#
#        mean of 95%      0.25210
#          95th %ile      0.33517
 for      0.30814 seconds
Running:        mallocT2_10k# bin/malloc -E -C 200 -L -S -W -N mallocT2_10k -s 10k -g 10 -T 2 -I 200 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_10k   1   2      0.42774          194        0      500     10 10240 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.39394                 0.39394
#                    max      0.61574                 0.52655
#                   mean      0.44121                 0.43559
#                 median      0.42953                 0.42774
#                 stddev      0.04192                 0.03163
#         standard error      0.00295                 0.00227
#   99% confidence level      0.00686                 0.00528
#                   skew      1.81121                 1.25080
#               kurtosis      3.41058                 0.72724
#       time correlation     -0.00018                -0.00006
#
#           elasped time      0.48287
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          204
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                184      0.00000 |********************************     0.43117
#
#                 10        > 95% |*                                    0.51700
#
#        mean of 95%      0.43117
#          95th %ile      0.50474
 for      0.49275 seconds
Running:       mallocT2_100k# bin/malloc -E -C 200 -L -S -W -N mallocT2_100k -s 100k -g 10 -T 2 -I 10000 
             prc thr   usecs/call      samples   errors cnt/samp   glob  sizes
mallocT2_100k   1   2    116.02743          198        0       10     10 102400 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    101.90903               101.90903
#                    max    155.64855               137.22935
#                   mean    117.58343               116.97746
#                 median    116.23735               116.02743
#                 stddev      8.03060                 6.81610
#         standard error      0.56503                 0.48440
#   99% confidence level      1.31426                 1.12671
#                   skew      1.33468                 0.57030
#               kurtosis      3.28610                 0.13154
#       time correlation     -0.03061                -0.01815
#
#           elasped time      2.42236
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          201
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    101.00000 |*                                  101.90903
#                  1    102.00000 |*                                  102.58743
#                  0    103.00000 |                                           -
#                  2    104.00000 |***                                104.44727
#                  2    105.00000 |***                                105.24343
#                  3    106.00000 |*****                              106.47522
#                  4    107.00000 |*******                            107.56791
#                  7    108.00000 |*************                      108.33207
#                  6    109.00000 |***********                        109.41708
#                  9    110.00000 |****************                   110.58629
#                  7    111.00000 |*************                      111.50501
#                 15    112.00000 |****************************       112.55436
#                 17    113.00000 |********************************   113.56381
#                 14    114.00000 |**************************         114.55580
#                 11    115.00000 |********************               115.53754
#                 12    116.00000 |**********************             116.56695
#                 13    117.00000 |************************           117.57013
#                 14    118.00000 |**************************         118.60498
#                  3    119.00000 |*****                              119.35799
#                  8    120.00000 |***************                    120.59159
#                  5    121.00000 |*********                          121.27441
#                 10    122.00000 |******************                 122.62429
#                  7    123.00000 |*************                      123.49970
#                  3    124.00000 |*****                              124.33036
#                  0    125.00000 |                                           -
#                  1    126.00000 |*                                  126.56951
#                  6    127.00000 |***********                        127.58114
#                  6    128.00000 |***********                        128.39010
#                  1    129.00000 |*                                  129.79767
#
#                 10        > 95% |******************                 133.09393
#
#        mean of 95%    116.12020
#          95th %ile    130.59639
 for      2.43678 seconds
 
Running:           close_bad# bin/close -E -C 200 -L -S -W -N close_bad -B 1800 -b 
             prc thr   usecs/call      samples   errors cnt/samp 
close_bad      1   1      0.83432          174        0     1800 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.80161                 0.80161
#                    max      1.69605                 0.90373
#                   mean      0.87255                 0.84186
#                 median      0.84058                 0.83432
#                 stddev      0.09665                 0.02268
#         standard error      0.00680                 0.00172
#   99% confidence level      0.01582                 0.00400
#                   skew      4.23398                 0.65729
#               kurtosis     26.46236                -0.50767
#       time correlation     -0.00012                -0.00000
#
#           elasped time      0.32736
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          170
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                165      0.00000 |********************************     0.83903
#
#                  9        > 95% |*                                    0.89384
#
#        mean of 95%      0.83903
#          95th %ile      0.88268
 for      0.35578 seconds
Running:           close_tmp# bin/close -E -C 200 -L -S -W -N close_tmp -B 640 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp 
close_tmp      1   1      3.49370          190        0      640 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.22010                 3.22010
#                    max      5.04810                 4.16370
#                   mean      3.58137                 3.51981
#                 median      3.50130                 3.49370
#                 stddev      0.33459                 0.22821
#         standard error      0.02354                 0.01656
#   99% confidence level      0.05476                 0.03851
#                   skew      1.76102                 1.06466
#               kurtosis      3.25032                 0.57902
#       time correlation     -0.00029                -0.00000
#
#           elasped time     15.08856
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          189
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                178      3.00000 |********************************     3.48057
#                  2      4.00000 |*                                    4.00990
#
#                 10        > 95% |*                                    4.12038
#
#        mean of 95%      3.48645
#          95th %ile      4.07330
 for     15.10162 seconds
Running:           close_usr# bin/close -E -C 200 -L -S -W -N close_usr -B 640 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp 
close_usr      1   1      3.61695          192        0      640 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.36535                 3.36535
#                    max      4.90575                 4.26255
#                   mean      3.69521                 3.65173
#                 median      3.63735                 3.61695
#                 stddev      0.27926                 0.20394
#         standard error      0.01965                 0.01472
#   99% confidence level      0.04570                 0.03423
#                   skew      1.68331                 0.97249
#               kurtosis      3.25819                 0.40426
#       time correlation      0.00017                 0.00013
#
#           elasped time     16.96153
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176      3.00000 |********************************     3.60789
#                  6      4.00000 |*                                    4.07861
#
#                 10        > 95% |*                                    4.16727
#
#        mean of 95%      3.62341
#          95th %ile      4.11855
 for     16.97609 seconds
Running:          close_zero# bin/close -E -C 200 -L -S -W -N close_zero -B 640 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp 
close_zero     1   1      3.65453          184        0      640 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.48253                 3.48253
#                    max      6.87173                 4.19973
#                   mean      3.82476                 3.71904
#                 median      3.68253                 3.65453
#                 stddev      0.42026                 0.17090
#         standard error      0.02957                 0.01260
#   99% confidence level      0.06878                 0.02931
#                   skew      3.47442                 0.94809
#               kurtosis     16.59856                 0.03091
#       time correlation     -0.00014                 0.00016
#
#           elasped time      9.73537
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          170
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                169      3.00000 |********************************     3.68545
#                  5      4.00000 |*                                    4.02277
#
#                 10        > 95% |*                                    4.13489
#
#        mean of 95%      3.69514
#          95th %ile      4.06213
 for      9.74609 seconds
 
Running:           memcpy_10# bin/memcpy -E -C 200 -L -S -W -N memcpy_10 -s 10 -I 5 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10      1   1      0.06905          183        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.06724                 0.06724
#                    max      0.14804                 0.07344
#                   mean      0.07116                 0.06943
#                 median      0.06919                 0.06905
#                 stddev      0.00727                 0.00148
#         standard error      0.00051                 0.00011
#   99% confidence level      0.00119                 0.00025
#                   skew      6.69122                 0.75548
#               kurtosis     61.32000                -0.40943
#       time correlation      0.00002                -0.00000
#
#           elasped time      0.29278
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          161
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                173      0.00000 |********************************     0.06924
#
#                 10        > 95% |*                                    0.07271
#
#        mean of 95%      0.06924
#          95th %ile      0.07229
 for      0.31720 seconds
Running:           memcpy_1k# bin/memcpy -E -C 200 -L -S -W -N memcpy_1k -s 1k -I 25 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_1k      1   1      0.29666          182        0     4000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.28796                 0.28796
#                    max      0.43369                 0.32271
#                   mean      0.30527                 0.29959
#                 median      0.29871                 0.29666
#                 stddev      0.02100                 0.00817
#         standard error      0.00148                 0.00061
#   99% confidence level      0.00344                 0.00141
#                   skew      3.10149                 0.83281
#               kurtosis     11.64790                -0.27807
#       time correlation     -0.00010                -0.00002
#
#           elasped time      0.25011
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                172      0.00000 |********************************     0.29848
#
#                 10        > 95% |*                                    0.31876
#
#        mean of 95%      0.29848
#          95th %ile      0.31650
 for      0.26470 seconds
Running:          memcpy_10k# bin/memcpy -E -C 200 -L -S -W -N memcpy_10k -s 10k -I 200 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10k     1   1      2.24735          185        0      500    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      2.18745                 2.18745
#                    max      3.13004                 2.44806
#                   mean      2.30784                 2.26926
#                 median      2.25350                 2.24735
#                 stddev      0.15142                 0.06398
#         standard error      0.01065                 0.00470
#   99% confidence level      0.02478                 0.01094
#                   skew      2.87672                 1.19556
#               kurtosis      9.34669                 0.42837
#       time correlation     -0.00038                -0.00007
#
#           elasped time      0.23642
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          164
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                175      2.00000 |********************************     2.26011
#
#                 10        > 95% |*                                    2.42937
#
#        mean of 95%      2.26011
#          95th %ile      2.40761
 for      0.24765 seconds
Running:           memcpy_1m# bin/memcpy -E -C 200 -L -S -W -N memcpy_1m -s 1m -I 31250 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_1m      1   1    340.25700          178        0        3  1048576
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    333.94233               333.94233
#                    max   4273.95300               366.96633
#                   mean    372.45301               343.65355
#                 median    340.93967               340.25700
#                 stddev    278.21938                 8.50747
#         standard error     19.57545                 0.63766
#   99% confidence level     45.53249                 1.48320
#                   skew     13.65869                 1.20634
#               kurtosis    188.44450                 0.28870
#       time correlation     -0.57197                 0.01136
#
#           elasped time      0.23062
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    333.00000 |*                                  333.94233
#                  5    334.00000 |*****                              334.81273
#                  7    335.00000 |********                           335.36862
#                 15    336.00000 |*****************                  336.57629
#                 28    337.00000 |********************************   337.56290
#                 22    338.00000 |*************************          338.57361
#                  9    339.00000 |**********                         339.62174
#                 17    340.00000 |*******************                340.51300
#                  7    341.00000 |********                           341.56138
#                  6    342.00000 |******                             342.71744
#                  5    343.00000 |*****                              343.46553
#                  5    344.00000 |*****                              344.54073
#                  2    345.00000 |**                                 345.93167
#                  2    346.00000 |**                                 346.48633
#                  2    347.00000 |**                                 347.80900
#                  4    348.00000 |****                               348.61967
#                  2    349.00000 |**                                 349.47300
#                  2    350.00000 |**                                 350.41167
#                  4    351.00000 |****                               351.62767
#                  1    352.00000 |*                                  352.63033
#                  5    353.00000 |*****                              353.63727
#                  1    354.00000 |*                                  354.25167
#                  3    355.00000 |***                                355.73078
#                  2    356.00000 |**                                 356.47033
#                  3    357.00000 |***                                357.40900
#                  3    358.00000 |***                                358.29078
#                  2    359.00000 |**                                 359.58500
#                  2    360.00000 |**                                 360.77967
#                  2    361.00000 |**                                 361.63300
#
#                  9        > 95% |**********                         365.07004
#
#        mean of 95%    342.51303
#          95th %ile    362.61433
 for      0.24361 seconds
Running:          memcpy_10m# bin/memcpy -E -C 200 -L -S -W -N memcpy_10m -s 10m -I 5000000 
             prc thr   usecs/call      samples   errors cnt/samp     size
memcpy_10m     1   1   3463.77900          183        0        1 10485760
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   3337.82700              3337.82700
#                    max  30025.82700              3640.93100
#                   mean   3654.76894              3467.12519
#                 median   3474.78700              3463.77900
#                 stddev   1879.28366                61.47138
#         standard error    132.22594                 4.54410
#   99% confidence level    307.55753                10.56957
#                   skew     13.68377                 0.23306
#               kurtosis    188.95444                -0.32652
#       time correlation     -4.32441                 0.15281
#
#           elasped time      0.74475
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   3336.00000 |**                                3337.82700
#                  3   3344.00000 |*******                           3348.40833
#                  4   3352.00000 |*********                         3357.34700
#                  1   3360.00000 |**                                3361.89100
#                  2   3368.00000 |****                              3374.30700
#                  4   3376.00000 |*********                         3382.30700
#                  6   3384.00000 |**************                    3389.36833
#                  9   3392.00000 |**********************            3395.96744
#                  5   3400.00000 |************                      3404.89900
#                  6   3408.00000 |**************                    3411.17100
#                  5   3416.00000 |************                      3422.20460
#                  8   3424.00000 |*******************               3428.67500
#                  9   3432.00000 |**********************            3435.44833
#                  7   3440.00000 |*****************                 3444.24986
#                 10   3448.00000 |************************          3451.20940
#                 13   3456.00000 |********************************  3461.10085
#                  6   3464.00000 |**************                    3467.87500
#                 12   3472.00000 |*****************************     3476.32300
#                  3   3480.00000 |*******                           3483.49100
#                 12   3488.00000 |*****************************     3490.85100
#                 10   3496.00000 |************************          3500.77100
#                  5   3504.00000 |************                      3508.06700
#                  5   3512.00000 |************                      3516.51500
#                  6   3520.00000 |**************                    3523.29900
#                  4   3528.00000 |*********                         3532.57900
#                  7   3536.00000 |*****************                 3539.95729
#                  4   3544.00000 |*********                         3547.55500
#                  3   3552.00000 |*******                           3557.47500
#                  3   3560.00000 |*******                           3563.78967
#
#                 10        > 95% |************************          3596.64300
#
#        mean of 95%   3459.63861
#          95th %ile   3569.76300
 for      0.76355 seconds
 
Running:           strcpy_10# bin/strcpy -E -C 200 -L -S -W -N strcpy_10 -s 10 -I 5 
             prc thr   usecs/call      samples   errors cnt/samp     size
strcpy_10      1   1      0.10979          189        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.10719                 0.10719
#                    max      0.15124                 0.11535
#                   mean      0.11123                 0.11003
#                 median      0.10994                 0.10979
#                 stddev      0.00570                 0.00180
#         standard error      0.00040                 0.00013
#   99% confidence level      0.00093                 0.00031
#                   skew      4.40407                 0.62418
#               kurtosis     22.29618                -0.16350
#       time correlation     -0.00000                -0.00000
#
#           elasped time      0.45380
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                179      0.00000 |********************************     0.10979
#
#                 10        > 95% |*                                    0.11426
#
#        mean of 95%      0.10979
#          95th %ile      0.11354
 for      0.47753 seconds
Running:           strcpy_1k# bin/strcpy -E -C 200 -L -S -W -N strcpy_1k -s 1k -I 25 
             prc thr   usecs/call      samples   errors cnt/samp     size
strcpy_1k      1   1      0.52546          186        0     4000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.50997                 0.50997
#                    max      0.86690                 0.55247
#                   mean      0.53600                 0.52587
#                 median      0.52617                 0.52546
#                 stddev      0.04192                 0.00961
#         standard error      0.00295                 0.00070
#   99% confidence level      0.00686                 0.00164
#                   skew      4.64605                 0.60536
#               kurtosis     26.28788                -0.16349
#       time correlation      0.00007                 0.00003
#
#           elasped time      0.43662
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176      0.00000 |********************************     0.52458
#
#                 10        > 95% |*                                    0.54859
#
#        mean of 95%      0.52458
#          95th %ile      0.54549
 for      0.44835 seconds
 
Running:           strlen_10# bin/strlen -E -C 200 -L -S -W -N strlen_10 -s 10 -I 5 
             prc thr   usecs/call      samples   errors cnt/samp     size
strlen_10      1   1      0.03598          190        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.03335                 0.03335
#                    max      0.05819                 0.04094
#                   mean      0.03693                 0.03626
#                 median      0.03610                 0.03598
#                 stddev      0.00345                 0.00168
#         standard error      0.00024                 0.00012
#   99% confidence level      0.00056                 0.00028
#                   skew      3.30282                 0.41553
#               kurtosis     14.15845                -0.43643
#       time correlation     -0.00002                -0.00001
#
#           elasped time      0.15340
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          186
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      0.00000 |********************************     0.03605
#
#                 10        > 95% |*                                    0.03990
#
#        mean of 95%      0.03605
#          95th %ile      0.03920
 for      0.17911 seconds
Running:           strlen_1k# bin/strlen -E -C 200 -L -S -W -N strlen_1k -s 1k -I 100 
             prc thr   usecs/call      samples   errors cnt/samp     size
strlen_1k      1   1      0.22201          161        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.21868                 0.21868
#                    max      0.50796                 0.23174
#                   mean      0.23595                 0.22287
#                 median      0.22278                 0.22201
#                 stddev      0.04038                 0.00297
#         standard error      0.00284                 0.00023
#   99% confidence level      0.00661                 0.00054
#                   skew      3.98934                 1.04205
#               kurtosis     17.51729                 0.68571
#       time correlation     -0.00007                 0.00001
#
#           elasped time      0.05072
#      number of samples          161
#     number of outliers           41
#      getnsecs overhead          200
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                152      0.00000 |********************************     0.22242
#
#                  9        > 95% |*                                    0.23051
#
#        mean of 95%      0.22242
#          95th %ile      0.22866
 for      0.06046 seconds
 
Running:           strchr_10# bin/strchr -E -C 200 -L -S -W -N strchr_10 -s 10 -I 5 
             prc thr   usecs/call      samples   errors cnt/samp     size
strchr_10      1   1      0.03514          184        0    20000       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.03325                 0.03325
#                    max      0.05255                 0.03844
#                   mean      0.03596                 0.03525
#                 median      0.03528                 0.03514
#                 stddev      0.00282                 0.00111
#         standard error      0.00020                 0.00008
#   99% confidence level      0.00046                 0.00019
#                   skew      3.35833                 0.51826
#               kurtosis     13.81555                 0.20216
#       time correlation     -0.00002                -0.00001
#
#           elasped time      0.14992
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          162
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                174      0.00000 |********************************     0.03510
#
#                 10        > 95% |*                                    0.03792
#
#        mean of 95%      0.03510
#          95th %ile      0.03729
 for      0.17899 seconds
Running:           strchr_1k# bin/strchr -E -C 200 -L -S -W -N strchr_1k -s 1k -I 50 
             prc thr   usecs/call      samples   errors cnt/samp     size
strchr_1k      1   1      0.24746          158        0     2000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.24196                 0.24196
#                    max      0.43396                 0.26000
#                   mean      0.26010                 0.24845
#                 median      0.24938                 0.24746
#                 stddev      0.03104                 0.00410
#         standard error      0.00218                 0.00033
#   99% confidence level      0.00508                 0.00076
#                   skew      3.38406                 0.86122
#               kurtosis     12.18485                 0.23870
#       time correlation     -0.00010                 0.00002
#
#           elasped time      0.10844
#      number of samples          158
#     number of outliers           44
#      getnsecs overhead          182
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                150      0.00000 |********************************     0.24791
#
#                  8        > 95% |*                                    0.25856
#
#        mean of 95%      0.24791
#          95th %ile      0.25744
 for      0.12583 seconds
 
Running:           strcmp_10# bin/strcmp -E -C 200 -L -S -W -N strcmp_10 -s 10 -I 3 
             prc thr   usecs/call      samples   errors cnt/samp     size
strcmp_10      1   1      0.05169          190        0    33333       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.04974                 0.04974
#                    max      0.06726                 0.05481
#                   mean      0.05226                 0.05179
#                 median      0.05177                 0.05169
#                 stddev      0.00225                 0.00104
#         standard error      0.00016                 0.00008
#   99% confidence level      0.00037                 0.00017
#                   skew      3.34613                 0.54221
#               kurtosis     14.48333                 0.15637
#       time correlation     -0.00001                -0.00000
#
#           elasped time      0.35667
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      0.00000 |********************************     0.05166
#
#                 10        > 95% |*                                    0.05424
#
#        mean of 95%      0.05166
#          95th %ile      0.05364
 for      0.38427 seconds
Running:           strcmp_1k# bin/strcmp -E -C 200 -L -S -W -N strcmp_1k -s 1k -I 50 
             prc thr   usecs/call      samples   errors cnt/samp     size
strcmp_1k      1   1      1.95037          190        0     2000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.87549                 1.87549
#                    max      3.52298                 2.03396
#                   mean      1.97636                 1.94953
#                 median      1.95281                 1.95037
#                 stddev      0.15985                 0.02862
#         standard error      0.01125                 0.00208
#   99% confidence level      0.02616                 0.00483
#                   skew      7.79151                 0.05902
#               kurtosis     67.58585                -0.01262
#       time correlation     -0.00054                -0.00009
#
#           elasped time      0.80203
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          178
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      1.00000 |********************************     1.94619
#
#                 10        > 95% |*                                    2.00963
#
#        mean of 95%      1.94619
#          95th %ile      2.00042
 for      0.81991 seconds
 
Running:         scasecmp_10# bin/strcasecmp -E -C 200 -L -S -W -N scasecmp_10 -s 10 -I 6 
             prc thr   usecs/call      samples   errors cnt/samp     size
scasecmp_10    1   1      0.08753          193        0    16666       10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.08394                 0.08394
#                    max      0.13770                 0.09354
#                   mean      0.08876                 0.08783
#                 median      0.08755                 0.08753
#                 stddev      0.00537                 0.00196
#         standard error      0.00038                 0.00014
#   99% confidence level      0.00088                 0.00033
#                   skew      5.50467                 0.73172
#               kurtosis     39.64839                 0.16548
#       time correlation     -0.00001                 0.00000
#
#           elasped time      0.30352
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                183      0.00000 |********************************     0.08757
#
#                 10        > 95% |*                                    0.09256
#
#        mean of 95%      0.08757
#          95th %ile      0.09143
 for      0.32743 seconds
Running:         scasecmp_1k# bin/strcasecmp -E -C 200 -L -S -W -N scasecmp_1k -s 1k -I 155 
             prc thr   usecs/call      samples   errors cnt/samp     size
scasecmp_1k    1   1      4.03543          185        0      645     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      3.74093                 3.85405
#                    max      5.33488                 4.20292
#                   mean      4.04531                 4.03028
#                 median      4.03543                 4.03543
#                 stddev      0.15107                 0.05905
#         standard error      0.01063                 0.00434
#   99% confidence level      0.02472                 0.01010
#                   skew      4.43672                 0.01727
#               kurtosis     31.99894                 0.24484
#       time correlation     -0.00051                -0.00006
#
#           elasped time      0.53073
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 58      3.00000 |***************                      3.96308
#                117      4.00000 |********************************     4.05291
#
#                 10        > 95% |**                                   4.15537
#
#        mean of 95%      4.02314
#          95th %ile      4.12553
 for      0.54183 seconds
Running:              strtol# bin/strtol -E -C 200 -L -S -W -N strtol -I 20 
             prc thr   usecs/call      samples   errors cnt/samp 
strtol         1   1      0.06781          178        0     5000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.06515                 0.06515
#                    max      0.15116                 0.07477
#                   mean      0.07092                 0.06860
#                 median      0.06817                 0.06781
#                 stddev      0.00888                 0.00230
#         standard error      0.00062                 0.00017
#   99% confidence level      0.00145                 0.00040
#                   skew      5.36308                 0.80164
#               kurtosis     38.49020                -0.51855
#       time correlation     -0.00002                -0.00001
#
#           elasped time      0.07548
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          144
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                169      0.00000 |********************************     0.06832
#
#                  9        > 95% |*                                    0.07371
#
#        mean of 95%      0.06832
#          95th %ile      0.07298
 for      0.09942 seconds
 
Running:          getcontext# bin/getcontext -E -C 200 -L -S -W -N getcontext -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
getcontext     1   1      7.23285          192        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      6.96379                 6.96379
#                    max      8.78882                 7.82881
#                   mean      7.32094                 7.27503
#                 median      7.23976                 7.23285
#                 stddev      0.27846                 0.18775
#         standard error      0.01959                 0.01355
#   99% confidence level      0.04557                 0.03152
#                   skew      2.12306                 1.10690
#               kurtosis      5.72537                 0.68224
#       time correlation     -0.00112                -0.00083
#
#           elasped time      1.48430
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          177
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3      6.00000 |*                                    6.98615
#                179      7.00000 |********************************     7.25278
#
#                 10        > 95% |*                                    7.76005
#
#        mean of 95%      7.24838
#          95th %ile      7.71105
 for      1.51314 seconds
Running:          setcontext# bin/setcontext -E -C 200 -L -S -W -N setcontext -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
setcontext     1   1      7.44894          182        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      7.24978                 7.24978
#                    max     10.36274                 7.94405
#                   mean      7.60318                 7.49563
#                 median      7.45867                 7.44894
#                 stddev      0.42270                 0.15354
#         standard error      0.02974                 0.01138
#   99% confidence level      0.06918                 0.02647
#                   skew      3.78985                 1.19597
#               kurtosis     17.48261                 0.67791
#       time correlation     -0.00115                -0.00023
#
#           elasped time      1.54109
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          144
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                172      7.00000 |********************************     7.47268
#
#                 10        > 95% |*                                    7.89044
#
#        mean of 95%      7.47268
#          95th %ile      7.85598
 for      1.56543 seconds
 
Running:            mutex_st# bin/mutex -E -C 200 -L -S -W -N mutex_st -I 10 
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_st       1   1      0.09808          182        0    10000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.09409                 0.09409
#                    max      0.17980                 0.10558
#                   mean      0.10198                 0.09877
#                 median      0.09819                 0.09808
#                 stddev      0.01310                 0.00254
#         standard error      0.00092                 0.00019
#   99% confidence level      0.00214                 0.00044
#                   skew      4.60878                 0.86299
#               kurtosis     22.51694                 0.15806
#       time correlation      0.00005                -0.00001
#
#           elasped time      0.21097
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          161
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                172      0.00000 |********************************     0.09842
#
#                 10        > 95% |*                                    0.10484
#
#        mean of 95%      0.09842
#          95th %ile      0.10438
 for      0.23662 seconds
Running:            mutex_mt# bin/mutex -E -C 200 -L -S -W -N mutex_mt -t -I 10 
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_mt       1   1      0.10730          182        0    10000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.10397                 0.10397
#                    max      0.16208                 0.11478
#                   mean      0.11048                 0.10809
#                 median      0.10748                 0.10730
#                 stddev      0.00917                 0.00247
#         standard error      0.00065                 0.00018
#   99% confidence level      0.00150                 0.00043
#                   skew      3.87558                 1.00404
#               kurtosis     16.33013                -0.01680
#       time correlation     -0.00004                -0.00001
#
#           elasped time      0.22903
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          146
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                172      0.00000 |********************************     0.10775
#
#                 10        > 95% |*                                    0.11392
#
#        mean of 95%      0.10775
#          95th %ile      0.11309
 for      0.24321 seconds
Running:            mutex_T2# bin/mutex -E -C 200 -L -S -W -N mutex_T2 -T 2 -I 25 
             prc thr   usecs/call      samples   errors cnt/samp holdtime
mutex_T2       1   2      0.46267          190        0     4000        0
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.36520                 0.36520
#                    max      0.81749                 0.57889
#                   mean      0.47646                 0.46537
#                 median      0.46747                 0.46267
#                 stddev      0.06194                 0.04191
#         standard error      0.00436                 0.00304
#   99% confidence level      0.01014                 0.00707
#                   skew      1.77426                 0.20136
#               kurtosis      5.63176                -0.21730
#       time correlation      0.00002                 0.00007
#
#           elasped time      0.42569
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          202
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                180      0.00000 |********************************     0.46049
#
#                 10        > 95% |*                                    0.55315
#
#        mean of 95%      0.46049
#          95th %ile      0.53525
 for      0.43772 seconds
 
Running:             longjmp# bin/longjmp -E -C 200 -L -S -W -N longjmp -I 5 
             prc thr   usecs/call      samples   errors cnt/samp 
longjmp        1   1      0.07944          185        0    20000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.07679                 0.07679
#                    max      0.11304                 0.08384
#                   mean      0.08065                 0.07976
#                 median      0.07973                 0.07944
#                 stddev      0.00402                 0.00149
#         standard error      0.00028                 0.00011
#   99% confidence level      0.00066                 0.00026
#                   skew      4.69543                 0.53868
#               kurtosis     29.16590                -0.50899
#       time correlation     -0.00001                 0.00000
#
#           elasped time      0.33073
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          197
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                175      0.00000 |********************************     0.07958
#
#                 10        > 95% |*                                    0.08289
#
#        mean of 95%      0.07958
#          95th %ile      0.08243
 for      0.35719 seconds
Running:          siglongjmp# bin/siglongjmp -E -C 200 -L -S -W -N siglongjmp -I 20 
             prc thr   usecs/call      samples   errors cnt/samp 
siglongjmp     1   1      8.85040          192        0     5000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      8.62978                 8.62978
#                    max      9.89140                 9.23476
#                   mean      8.88862                 8.85518
#                 median      8.85618                 8.85040
#                 stddev      0.19979                 0.13018
#         standard error      0.01406                 0.00940
#   99% confidence level      0.03270                 0.02185
#                   skew      2.08827                 0.40599
#               kurtosis      6.39238                -0.36937
#       time correlation     -0.00018                 0.00007
#
#           elasped time      8.98360
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          171
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                165      8.00000 |********************************     8.81898
#                 17      9.00000 |***                                  9.03870
#
#                 10        > 95% |*                                    9.14033
#
#        mean of 95%      8.83951
#          95th %ile      9.08617
 for      9.01080 seconds
 
Running:           getrusage# bin/getrusage -E -C 200 -L -S -W -N getrusage -I 200 
             prc thr   usecs/call      samples   errors cnt/samp 
getrusage      1   1     15.61567          171        0      500 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.20965                15.20965
#                    max     22.94341                16.29355
#                   mean     15.91133                15.66038
#                 median     15.67557                15.61567
#                 stddev      0.78345                 0.21843
#         standard error      0.05512                 0.01670
#   99% confidence level      0.12822                 0.03885
#                   skew      4.57385                 0.86657
#               kurtosis     32.18987                 0.64549
#       time correlation     -0.00292                 0.00049
#
#           elasped time      1.61306
#      number of samples          171
#     number of outliers           31
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                154     15.00000 |********************************    15.60644
#                  8     16.00000 |*                                   16.08248
#
#                  9        > 95% |*                                   16.20811
#
#        mean of 95%     15.62995
#          95th %ile     16.12971
 for      1.63845 seconds
 
Running:               times# bin/times -E -C 200 -L -S -W -N times -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
times          1   1     13.99382          186        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.60495                13.60495
#                    max     16.74172                14.79279
#                   mean     14.16078                14.03814
#                 median     14.01378                13.99382
#                 stddev      0.51981                 0.26227
#         standard error      0.03657                 0.01923
#   99% confidence level      0.08507                 0.04473
#                   skew      2.59021                 0.87648
#               kurtosis      8.08704                 0.30474
#       time correlation     -0.00026                 0.00050
#
#           elasped time      2.86634
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 98     13.00000 |********************************    13.84121
#                 78     14.00000 |*************************           14.20129
#
#                 10        > 95% |***                                 14.69541
#
#        mean of 95%     14.00079
#          95th %ile     14.58287
 for      2.89028 seconds
Running:                time# bin/time -E -C 200 -L -S -W -N time -I 2 
             prc thr   usecs/call      samples   errors cnt/samp 
time           1   1      0.09088          193        0    50000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.08611                 0.08611
#                    max      0.13117                 0.09527
#                   mean      0.09143                 0.09084
#                 median      0.09094                 0.09088
#                 stddev      0.00381                 0.00164
#         standard error      0.00027                 0.00012
#   99% confidence level      0.00062                 0.00027
#                   skew      6.26725                -0.05126
#               kurtosis     58.07025                -0.02025
#       time correlation     -0.00000                -0.00000
#
#           elasped time      0.92766
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          228
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                183      0.00000 |********************************     0.09065
#
#                 10        > 95% |*                                    0.09419
#
#        mean of 95%      0.09065
#          95th %ile      0.09334
 for      0.95251 seconds
Running:         localtime_r# bin/localtime_r -E -C 200 -L -S -W -N localtime_r -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
localtime_r    1   1      0.60086          169        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.57577                 0.57577
#                    max      5.08956                 0.63491
#                   mean      0.64052                 0.60221
#                 median      0.60367                 0.60086
#                 stddev      0.31869                 0.01112
#         standard error      0.02242                 0.00086
#   99% confidence level      0.05216                 0.00199
#                   skew     13.48378                 0.66872
#               kurtosis    185.06324                 0.60890
#       time correlation     -0.00075                 0.00000
#
#           elasped time      0.13354
#      number of samples          169
#     number of outliers           33
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                160      0.00000 |********************************     0.60064
#
#                  9        > 95% |*                                    0.63013
#
#        mean of 95%      0.60064
#          95th %ile      0.62492
 for      0.15448 seconds
Running:            strftime# bin/strftime -E -C 200 -L -S -W -N strftime -I 250 
             prc thr   usecs/call      samples   errors cnt/samp   format
strftime       1   1      2.16471          194        0      400       %c
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      2.06486                 2.06486
#                    max      4.57431                 2.42007
#                   mean      2.23563                 2.19277
#                 median      2.16726                 2.16471
#                 stddev      0.28352                 0.07698
#         standard error      0.01995                 0.00553
#   99% confidence level      0.04640                 0.01285
#                   skew      6.54223                 1.00380
#               kurtosis     46.58442                 0.23121
#       time correlation     -0.00125                -0.00013
#
#           elasped time      0.19081
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                184      2.00000 |********************************     2.18245
#
#                 10        > 95% |*                                    2.38269
#
#        mean of 95%      2.18245
#          95th %ile      2.35478
 for      0.20946 seconds
 
Running:              mktime# bin/mktime -E -C 200 -L -S -W -N mktime -I 500 
             prc thr   usecs/call      samples   errors cnt/samp 
mktime         1   1     54.85351          189        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     52.55463                52.55463
#                    max     70.11367                58.15463
#                   mean     55.50275                54.99535
#                 median     55.01479                54.85351
#                 stddev      2.47054                 1.08128
#         standard error      0.17383                 0.07865
#   99% confidence level      0.40432                 0.18294
#                   skew      3.63084                 0.36424
#               kurtosis     16.34778                -0.27083
#       time correlation     -0.01241                -0.00701
#
#           elasped time      2.25544
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          178
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     52.00000 |*                                   52.69415
#                 30     53.00000 |**************                      53.65564
#                 67     54.00000 |********************************    54.43375
#                 53     55.00000 |*************************           55.50317
#                 26     56.00000 |************                        56.31611
#
#                 10        > 95% |****                                57.34209
#
#        mean of 95%     54.86424
#          95th %ile     56.71975
 for      2.27757 seconds
Running:            mktimeT2# bin/mktime -E -C 200 -L -S -W -N mktimeT2 -T 2 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp 
mktimeT2       1   2    181.71974          202        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    148.26822               148.26822
#                    max    219.16742               219.16742
#                   mean    181.38656               181.38656
#                 median    181.71974               181.71974
#                 stddev     13.88342                13.88342
#         standard error      0.97683                 0.97683
#   99% confidence level      2.27212                 2.27212
#                   skew      0.09609                 0.09609
#               kurtosis     -0.24018                -0.24018
#       time correlation     -0.01896                -0.01896
#
#           elasped time      3.72044
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          186
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    148.00000 |*                                  148.26822
#                  0    150.00000 |                                           -
#                  2    152.00000 |***                                152.85702
#                  2    154.00000 |***                                155.26214
#                  4    156.00000 |******                             156.97030
#                  8    158.00000 |*************                      159.09542
#                  3    160.00000 |*****                              161.14758
#                  5    162.00000 |********                           163.42803
#                  8    164.00000 |*************                      165.07718
#                  3    166.00000 |*****                              166.30769
#                  7    168.00000 |***********                        169.31837
#                 11    170.00000 |******************                 170.83602
#                  5    172.00000 |********                           173.17190
#                  5    174.00000 |********                           175.40883
#                  8    176.00000 |*************                      177.01222
#                 19    178.00000 |********************************   179.17523
#                 13    180.00000 |*********************              181.05985
#                 14    182.00000 |***********************            182.95512
#                 13    184.00000 |*********************              185.06566
#                 12    186.00000 |********************               187.03238
#                  9    188.00000 |***************                    189.21002
#                  4    190.00000 |******                             191.31526
#                 11    192.00000 |******************                 192.76335
#                  9    194.00000 |***************                    194.62214
#                  3    196.00000 |*****                              196.95174
#                  4    198.00000 |******                             199.25062
#                  3    200.00000 |*****                              200.72518
#                  3    202.00000 |*****                              202.28507
#                  2    204.00000 |***                                205.15782
#
#                 11        > 95% |******************                 210.39197
#
#        mean of 95%    179.71609
#          95th %ile    205.29734
 for      3.73318 seconds
 
Running:           c_mutex_1# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_1 -I 25 
             prc thr   usecs/call      samples   errors cnt/samp 
c_mutex_1      1   1      0.32444          185        0     4000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.31093                 0.31093
#                    max      0.54197                 0.35145
#                   mean      0.33267                 0.32635
#                 median      0.32623                 0.32444
#                 stddev      0.02680                 0.00861
#         standard error      0.00189                 0.00063
#   99% confidence level      0.00439                 0.00147
#                   skew      4.29601                 0.81028
#               kurtosis     23.21898                 0.24142
#       time correlation     -0.00002                -0.00002
#
#           elasped time      0.27377
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          165
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                175      0.00000 |********************************     0.32515
#
#                 10        > 95% |*                                    0.34736
#
#        mean of 95%      0.32515
#          95th %ile      0.34421
 for      0.30018 seconds
Running:          c_mutex_10# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_10 -T 10 -I 5000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_mutex_10     1  10    834.53940          201        0       20 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    718.34100               718.34100
#                    max   1028.89460               964.15220
#                   mean    838.72633               837.78022
#                 median    835.03860               834.53940
#                 stddev     47.52987                45.70191
#         standard error      3.34419                 3.22356
#   99% confidence level      7.77859                 7.49801
#                   skew      0.59262                 0.37329
#               kurtosis      1.17022                 0.43966
#       time correlation      0.06679                 0.04221
#
#           elasped time      3.54874
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    714.00000 |*                                  718.34100
#                  0    721.00000 |                                           -
#                  2    728.00000 |***                                729.99540
#                  1    735.00000 |*                                  740.44660
#                  0    742.00000 |                                           -
#                  4    749.00000 |*******                            753.08980
#                  1    756.00000 |*                                  757.44500
#                  2    763.00000 |***                                768.48500
#                  3    770.00000 |*****                              772.84340
#                  5    777.00000 |********                           780.88436
#                  7    784.00000 |************                       787.41529
#                  4    791.00000 |*******                            796.50420
#                 16    798.00000 |****************************       801.27380
#                  9    805.00000 |****************                   809.36891
#                 10    812.00000 |*****************                  815.34836
#                 18    819.00000 |********************************   821.96624
#                 14    826.00000 |************************           828.80683
#                 18    833.00000 |********************************   837.03327
#                 17    840.00000 |******************************     844.26891
#                  5    847.00000 |********                           849.52820
#                  8    854.00000 |**************                     856.56180
#                 15    861.00000 |**************************         864.92831
#                  5    868.00000 |********                           870.95796
#                  7    875.00000 |************                       878.52020
#                  4    882.00000 |*******                            884.37940
#                  4    889.00000 |*******                            892.85620
#                  1    896.00000 |*                                  899.24340
#                  5    903.00000 |********                           908.52084
#                  4    910.00000 |*******                            912.21940
#
#                 11        > 95% |*******************                944.83584
#
#        mean of 95%    831.58226
#          95th %ile    913.98900
 for      3.56146 seconds
Running:         c_mutex_200# bin/cascade_mutex -E -C 200 -L -S -W -N c_mutex_200 -T 200 -I 2000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_mutex_200    1 200  29593.38850          200        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  27758.89250             27758.89250
#                    max  32676.90850             31885.86850
#                   mean  29664.11800             29635.00706
#                 median  29608.36450             29593.38850
#                 stddev    841.72068               793.40282
#         standard error     59.22326                56.10205
#   99% confidence level    137.75330               130.49337
#                   skew      0.57414                 0.30622
#               kurtosis      0.65379                -0.11396
#       time correlation      0.28281                 0.63842
#
#           elasped time     22.28611
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2  27600.00000 |***                              27778.15650
#                  1  27800.00000 |*                                27939.37250
#                  2  28000.00000 |***                              28135.66050
#                  6  28200.00000 |*********                        28334.72183
#                  4  28400.00000 |******                           28515.40450
#                 12  28600.00000 |******************               28715.25517
#                 16  28800.00000 |************************         28897.38850
#                 21  29000.00000 |******************************** 29104.97098
#                 18  29200.00000 |***************************      29309.47739
#                 19  29400.00000 |****************************     29488.53629
#                 20  29600.00000 |******************************   29707.16130
#                 18  29800.00000 |***************************      29902.82139
#                 15  30000.00000 |**********************           30081.72557
#                 14  30200.00000 |*********************            30276.89936
#                  8  30400.00000 |************                     30493.16450
#                  4  30600.00000 |******                           30682.02850
#                 10  30800.00000 |***************                  30894.72610
#
#                 10        > 95% |***************                  31404.88290
#
#        mean of 95%  29541.85570
#          95th %ile  31073.96450
 for     22.29638 seconds
 
Running:            c_cond_1# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_1 -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
c_cond_1       1   1      0.54692          160        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.53694                 0.53694
#                    max      0.77374                 0.56100
#                   mean      0.56267                 0.54726
#                 median      0.54795                 0.54692
#                 stddev      0.04012                 0.00508
#         standard error      0.00282                 0.00040
#   99% confidence level      0.00657                 0.00093
#                   skew      3.21715                 0.61380
#               kurtosis     10.82078                -0.06143
#       time correlation     -0.00008                 0.00000
#
#           elasped time      0.11875
#      number of samples          160
#     number of outliers           42
#      getnsecs overhead          148
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                152      0.00000 |********************************     0.54664
#
#                  8        > 95% |*                                    0.55896
#
#        mean of 95%      0.54664
#          95th %ile      0.55665
 for      0.14468 seconds
Running:           c_cond_10# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_10 -T 10 -I 3000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_cond_10      1  10    882.52482          196        0       33 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    768.43165               789.49894
#                    max   1024.02506               958.93329
#                   mean    881.56624               880.16720
#                 median    882.61518               882.52482
#                 stddev     36.40468                30.70832
#         standard error      2.56142                 2.19345
#   99% confidence level      5.95787                 5.10197
#                   skew      0.33375                -0.17481
#               kurtosis      2.01981                 0.34479
#       time correlation      0.15464                 0.11852
#
#           elasped time      6.22138
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          172
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    785.00000 |**                                 789.49894
#                  0    790.00000 |                                           -
#                  1    795.00000 |**                                 799.16671
#                  2    800.00000 |****                               802.51353
#                  1    805.00000 |**                                 807.87824
#                  0    810.00000 |                                           -
#                  3    815.00000 |******                             817.43557
#                  1    820.00000 |**                                 822.34224
#                  3    825.00000 |******                             826.45580
#                  1    830.00000 |**                                 831.02365
#                  3    835.00000 |******                             836.47494
#                  5    840.00000 |***********                        842.38252
#                  6    845.00000 |*************                      848.86333
#                 12    850.00000 |***************************        852.88341
#                  8    855.00000 |******************                 857.91494
#                 12    860.00000 |***************************        862.18788
#                 13    865.00000 |*****************************      868.29887
#                 11    870.00000 |*************************          872.68046
#                 11    875.00000 |*************************          876.73334
#                 13    880.00000 |*****************************      882.98238
#                 14    885.00000 |********************************   888.07292
#                 13    890.00000 |*****************************      892.37271
#                 14    895.00000 |********************************   897.55407
#                 11    900.00000 |*************************          903.21154
#                  8    905.00000 |******************                 907.37565
#                  8    910.00000 |******************                 912.79682
#                  6    915.00000 |*************                      918.07494
#                  5    920.00000 |***********                        921.73348
#
#                 10        > 95% |**********************             944.38120
#
#        mean of 95%    876.71483
#          95th %ile    925.46506
 for      6.23425 seconds
Running:          c_cond_200# bin/cascade_cond -E -C 200 -L -S -W -N c_cond_200 -T 200 -I 2000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_cond_200     1 200  31148.46000          198        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  25786.41200             29079.98000
#                    max  33881.90000             33309.35600
#                   mean  31192.25248             31179.62541
#                 median  31161.00400             31148.46000
#                 stddev    927.56495               789.65900
#         standard error     65.26324                56.11862
#   99% confidence level    151.80230               130.53191
#                   skew     -0.54589                 0.20190
#               kurtosis      5.20703                -0.02296
#       time correlation      0.77798                -0.17709
#
#           elasped time     22.87255
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  29000.00000 |*                                29079.98000
#                  1  29200.00000 |*                                29210.41200
#                  2  29400.00000 |**                               29496.17200
#                  2  29600.00000 |**                               29781.42000
#                  4  29800.00000 |*****                            29847.05200
#                 10  30000.00000 |*************                    30112.77360
#                  8  30200.00000 |**********                       30291.51600
#                 16  30400.00000 |*********************            30494.78800
#                 24  30600.00000 |******************************** 30703.77200
#                 17  30800.00000 |**********************           30900.67459
#                 19  31000.00000 |*************************        31087.28274
#                 22  31200.00000 |*****************************    31304.89927
#                 12  31400.00000 |****************                 31478.48667
#                 20  31600.00000 |**************************       31691.41680
#                 11  31800.00000 |**************                   31910.78145
#                  8  32000.00000 |**********                       32091.88400
#                  8  32200.00000 |**********                       32320.49200
#                  3  32400.00000 |****                             32467.71333
#
#                 10        > 95% |*************                    32909.65040
#
#        mean of 95%  31087.60281
#          95th %ile  32600.36400
 for     22.88674 seconds
 
Running:           c_lockf_1# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_1 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_lockf_1      1   1     80.62813          186        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     77.66877                77.66877
#                    max     98.78877                85.64829
#                   mean     81.66517                80.91540
#                 median     80.72797                80.62813
#                 stddev      3.16650                 1.59073
#         standard error      0.22279                 0.11664
#   99% confidence level      0.51822                 0.27130
#                   skew      2.60364                 0.97794
#               kurtosis      8.17795                 0.85262
#       time correlation     -0.01773                -0.00723
#
#           elasped time      1.66089
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     77.00000 |*                                   77.66877
#                 16     78.00000 |*******                             78.71789
#                 32     79.00000 |**************                      79.59093
#                 71     80.00000 |********************************    80.50720
#                 30     81.00000 |*************                       81.44648
#                 16     82.00000 |*******                             82.40749
#                  5     83.00000 |**                                  83.56650
#                  5     84.00000 |**                                  84.15171
#
#                 10        > 95% |****                                84.96835
#
#        mean of 95%     80.68512
#          95th %ile     84.29917
 for      1.68668 seconds
Running:          c_lockf_10# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_10 -P 10 -I 50000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_lockf_10    10   1   2464.26800          191        0        2 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   2119.30800              2119.30800
#                    max   3360.90800              2977.42000
#                   mean   2510.77255              2471.46482
#                 median   2471.30800              2464.26800
#                 stddev    241.85136               180.61726
#         standard error     17.01660                13.06901
#   99% confidence level     39.58062                30.39851
#                   skew      1.21887                 0.39223
#               kurtosis      1.81189                -0.27540
#       time correlation      0.93651                 1.03092
#
#           elasped time      1.21289
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          232
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   2100.00000 |**                                2119.30800
#                  3   2130.00000 |******                            2154.25200
#                  5   2160.00000 |**********                        2175.85840
#                  6   2190.00000 |************                      2206.02800
#                  6   2220.00000 |************                      2239.45733
#                  7   2250.00000 |**************                    2266.94686
#                 12   2280.00000 |*************************         2296.05467
#                  8   2310.00000 |*****************                 2327.05200
#                 11   2340.00000 |***********************           2354.87455
#                 13   2370.00000 |***************************       2380.03415
#                 13   2400.00000 |***************************       2413.16646
#                 10   2430.00000 |*********************             2445.61840
#                 13   2460.00000 |***************************       2473.58246
#                 15   2490.00000 |********************************  2506.38000
#                  5   2520.00000 |**********                        2536.89520
#                  8   2550.00000 |*****************                 2560.10800
#                 10   2580.00000 |*********************             2598.48880
#                  9   2610.00000 |*******************               2624.56667
#                 11   2640.00000 |***********************           2652.00909
#                  5   2670.00000 |**********                        2676.59440
#                  7   2700.00000 |**************                    2710.74114
#                  0   2730.00000 |                                           -
#                  2   2760.00000 |****                              2763.91600
#                  1   2790.00000 |**                                2795.91600
#
#                 10        > 95% |*********************             2882.87920
#
#        mean of 95%   2448.73474
#          95th %ile   2806.41200
 for      1.22836 seconds
Running:         c_lockf_200# bin/cascade_lockf -E -C 200 -L -S -W -N c_lockf_200 -P 200 -I 5000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_lockf_200  200   1  55704.32900          199        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  53668.36100             53668.36100
#                    max  61922.31300             58614.79300
#                   mean  55813.41795             55743.30275
#                 median  55725.44900             55704.32900
#                 stddev   1186.72904              1038.80567
#         standard error     83.49796                73.63898
#   99% confidence level    194.21626               171.28427
#                   skew      1.10232                 0.28887
#               kurtosis      3.21258                -0.39871
#       time correlation     -1.82778                -0.50265
#
#           elasped time     33.25628
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          238
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4  53600.00000 |******                           53708.26500
#                  3  53800.00000 |****                             53955.03833
#                  4  54000.00000 |******                           54155.11300
#                  7  54200.00000 |***********                      54306.75186
#                 12  54400.00000 |*******************              54505.95033
#                 14  54600.00000 |**********************           54735.82614
#                 12  54800.00000 |*******************              54895.80633
#                  6  55000.00000 |*********                        55101.27833
#                 13  55200.00000 |********************             55290.45577
#                 14  55400.00000 |**********************           55504.57586
#                 17  55600.00000 |***************************      55692.43253
#                 20  55800.00000 |******************************** 55891.68900
#                  8  56000.00000 |************                     56093.83300
#                 13  56200.00000 |********************             56290.09638
#                 11  56400.00000 |*****************                56503.40973
#                  9  56600.00000 |**************                   56677.29967
#                  8  56800.00000 |************                     56931.08100
#                  5  57000.00000 |********                         57097.37860
#                  6  57200.00000 |*********                        57291.63567
#                  3  57400.00000 |****                             57506.91033
#
#                 10        > 95% |****************                 57991.47140
#
#        mean of 95%  55624.35203
#          95th %ile  57583.88100
 for     33.32994 seconds
 
Running:             c_flock# bin/cascade_flock -E -C 200 -L -S -W -N c_flock -I 500 
             prc thr   usecs/call      samples   errors cnt/samp 
c_flock        1   1     10.14958          183        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      9.70925                 9.70925
#                    max     14.18925                11.01998
#                   mean     10.38876                10.21052
#                 median     10.20462                10.14958
#                 stddev      0.67533                 0.29898
#         standard error      0.04752                 0.02210
#   99% confidence level      0.11052                 0.05141
#                   skew      2.76749                 0.56036
#               kurtosis      9.67328                -0.64159
#       time correlation     -0.00126                -0.00105
#
#           elasped time      0.42514
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          165
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 54      9.00000 |**************                       9.89251
#                119     10.00000 |********************************    10.30103
#
#                 10        > 95% |**                                  10.85063
#
#        mean of 95%     10.17352
#          95th %ile     10.74861
 for      0.45037 seconds
Running:          c_flock_10# bin/cascade_flock -E -C 200 -L -S -W -N c_flock_10 -P 10 -I 6250 
             prc thr   usecs/call      samples   errors cnt/samp 
c_flock_10    10   1     38.16631          194        0       16 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     29.60631                29.60631
#                    max    102.16631                58.80631
#                   mean     41.28829                39.83609
#                 median     38.61431                38.16631
#                 stddev      9.84212                 6.47406
#         standard error      0.69249                 0.46481
#   99% confidence level      1.61073                 1.08115
#                   skew      2.55422                 1.04328
#               kurtosis      9.32431                 0.56077
#       time correlation     -0.02565                -0.00081
#
#           elasped time      0.29889
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          155
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     29.00000 |*                                   29.60631
#                  5     30.00000 |********                            30.59191
#                  2     31.00000 |***                                 31.71031
#                  8     32.00000 |************                        32.52631
#                 12     33.00000 |*******************                 33.52765
#                 20     34.00000 |********************************    34.52151
#                 19     35.00000 |******************************      35.49684
#                 13     36.00000 |********************                36.54293
#                 16     37.00000 |*************************           37.61831
#                  9     38.00000 |**************                      38.47920
#                 12     39.00000 |*******************                 39.43165
#                 11     40.00000 |*****************                   40.29868
#                 10     41.00000 |****************                    41.63671
#                  8     42.00000 |************                        42.57831
#                  9     43.00000 |**************                      43.53876
#                  2     44.00000 |***                                 44.40631
#                  5     45.00000 |********                            45.22231
#                  3     46.00000 |****                                46.46498
#                  7     47.00000 |***********                         47.45774
#                  2     48.00000 |***                                 48.43031
#                  2     49.00000 |***                                 49.18231
#                  0     50.00000 |                                           -
#                  3     51.00000 |****                                51.38231
#                  2     52.00000 |***                                 52.80631
#                  3     53.00000 |****                                53.44631
#
#                 10        > 95% |****************                    56.43831
#
#        mean of 95%     38.93379
#          95th %ile     54.48631
 for      0.31614 seconds
Running:         c_flock_200# bin/cascade_flock -E -C 200 -L -S -W -N c_flock_200 -P 200 -I 5000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_flock_200  200   1   8421.79950          200        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   7105.95950              7105.95950
#                    max  11813.92750             10538.40750
#                   mean   8570.19649              8542.64686
#                 median   8424.35950              8421.79950
#                 stddev    776.96946               728.22067
#         standard error     54.66738                51.49298
#   99% confidence level    127.15633               119.77267
#                   skew      0.85927                 0.57448
#               kurtosis      0.83138                -0.34422
#       time correlation      1.32795                 1.60796
#
#           elasped time     14.18017
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          177
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   7100.00000 |***                               7127.91150
#                  2   7200.00000 |***                               7256.93550
#                  0   7300.00000 |                                           -
#                  3   7400.00000 |*****                             7429.28750
#                  4   7500.00000 |*******                           7581.57550
#                  5   7600.00000 |********                          7653.41550
#                 13   7700.00000 |***********************           7739.60873
#                 11   7800.00000 |*******************               7852.23441
#                 10   7900.00000 |*****************                 7950.81070
#                 11   8000.00000 |*******************               8054.09041
#                 11   8100.00000 |*******************               8138.18641
#                 18   8200.00000 |********************************  8243.71594
#                 10   8300.00000 |*****************                 8339.80270
#                  9   8400.00000 |****************                  8452.81817
#                 12   8500.00000 |*********************             8558.89817
#                  9   8600.00000 |****************                  8658.01639
#                  8   8700.00000 |**************                    8735.47950
#                  5   8800.00000 |********                          8831.62990
#                  5   8900.00000 |********                          8968.92270
#                  8   9000.00000 |**************                    9050.59950
#                  5   9100.00000 |********                          9159.02830
#                  3   9200.00000 |*****                             9253.92750
#                  5   9300.00000 |********                          9348.00750
#                  3   9400.00000 |*****                             9463.59150
#                  7   9500.00000 |************                      9552.20407
#                  3   9600.00000 |*****                             9636.26350
#                  4   9700.00000 |*******                           9738.91950
#                  4   9800.00000 |*******                           9845.44750
#
#                 10        > 95% |*****************                10168.57710
#
#        mean of 95%   8457.07158
#          95th %ile   9960.87150
 for     14.25263 seconds
 
Running:           c_fcntl_1# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_1 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_fcntl_1      1   1     83.97908          180        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     81.39860                81.39860
#                    max    109.45620                87.72692
#                   mean     85.11112                83.95860
#                 median     84.19668                83.97908
#                 stddev      4.02548                 1.33831
#         standard error      0.28323                 0.09975
#   99% confidence level      0.65880                 0.23202
#                   skew      3.31903                 0.34096
#               kurtosis     13.55754                -0.07183
#       time correlation     -0.01390                -0.00176
#
#           elasped time      1.72997
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          172
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 12     81.00000 |******                              81.71241
#                 32     82.00000 |******************                  82.47244
#                 48     83.00000 |***************************         83.52500
#                 55     84.00000 |********************************    84.47474
#                 19     85.00000 |***********                         85.47277
#                  5     86.00000 |**                                  86.10234
#
#                  9        > 95% |*****                               87.00841
#
#        mean of 95%     83.79808
#          95th %ile     86.42644
 for      1.75559 seconds
Running:          c_fcntl_10# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_10 -P 10 -I 20000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_fcntl_10    10   1   1983.66600          198        0        5 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1787.82600              1787.82600
#                    max   2510.13000              2213.29800
#                   mean   1996.14558              1989.49366
#                 median   1987.29267              1983.66600
#                 stddev     92.01142                78.44899
#         standard error      6.47390                 5.57513
#   99% confidence level     15.05829                12.96774
#                   skew      1.28677                 0.33762
#               kurtosis      4.41454                -0.05584
#       time correlation     -0.22825                -0.16192
#
#           elasped time      2.60741
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1780.00000 |*                                 1787.82600
#                  1   1800.00000 |*                                 1811.93267
#                  2   1820.00000 |**                                1834.88733
#                  5   1840.00000 |******                            1851.22013
#                  1   1860.00000 |*                                 1877.63933
#                 11   1880.00000 |**************                    1892.44079
#                 16   1900.00000 |*********************             1911.08200
#                 20   1920.00000 |**************************        1930.92360
#                 24   1940.00000 |********************************  1951.47756
#                 17   1960.00000 |**********************            1971.28012
#                 12   1980.00000 |****************                  1989.10244
#                 24   2000.00000 |********************************  2009.62867
#                 14   2020.00000 |******************                2028.71286
#                 15   2040.00000 |********************              2049.65711
#                 11   2060.00000 |**************                    2067.84733
#                  5   2080.00000 |******                            2089.56467
#                  7   2100.00000 |*********                         2109.49000
#                  2   2120.00000 |**                                2138.65267
#
#                 10        > 95% |*************                     2167.15827
#
#        mean of 95%   1980.04342
#          95th %ile   2147.46333
 for      2.62035 seconds
Running:         c_fcntl_200# bin/cascade_fcntl -E -C 200 -L -S -W -N c_fcntl_200 -P 200 -I 5000000 
             prc thr   usecs/call      samples   errors cnt/samp 
c_fcntl_200  200   1  64221.82950          201        0        1 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  61445.38150             61445.38150
#                    max  67688.83750             66691.33350
#                   mean  64272.63663             64255.64060
#                 median  64254.34150             64221.82950
#                 stddev   1051.01169              1025.42979
#         standard error     73.94892                72.32824
#   99% confidence level    172.00520               168.23549
#                   skew      0.11814                -0.00664
#               kurtosis      0.11654                -0.15845
#       time correlation      0.88720                 0.82787
#
#           elasped time     36.83463
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          245
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  61400.00000 |*                                61445.38150
#                  1  61600.00000 |*                                61711.87750
#                  0  61800.00000 |                                           -
#                  4  62000.00000 |******                           62019.39750
#                  1  62200.00000 |*                                62215.42950
#                  1  62400.00000 |*                                62419.84550
#                  6  62600.00000 |**********                       62684.29350
#                  8  62800.00000 |*************                    62905.68550
#                 11  63000.00000 |******************               63079.75532
#                  4  63200.00000 |******                           63322.50150
#                 14  63400.00000 |***********************          63507.54379
#                 13  63600.00000 |*********************            63705.32981
#                 15  63800.00000 |*************************        63906.05350
#                 19  64000.00000 |******************************** 64116.99076
#                 17  64200.00000 |****************************     64289.14997
#                 17  64400.00000 |****************************     64490.18526
#                 14  64600.00000 |***********************          64695.90493
#                  7  64800.00000 |***********                      64887.86836
#                 11  65000.00000 |******************               65105.19241
#                  9  65200.00000 |***************                  65284.05883
#                  6  65400.00000 |**********                       65508.27217
#                  5  65600.00000 |********                         65660.65190
#                  6  65800.00000 |**********                       65905.62683
#
#                 11        > 95% |******************               66290.89132
#
#        mean of 95%  64137.81030
#          95th %ile  66032.77350
 for     36.84757 seconds
 
Running:           file_lock# bin/file_lock -E -C 200 -L -S -W -N file_lock -I 500 
             prc thr   usecs/call      samples   errors cnt/samp 
file_lock      1   1     41.61326          186        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     40.31406                40.31406
#                    max     55.65358                43.19406
#                   mean     42.00628                41.54472
#                 median     41.71950                41.61326
#                 stddev      2.06068                 0.65825
#         standard error      0.14499                 0.04827
#   99% confidence level      0.33724                 0.11226
#                   skew      4.48614                 0.00771
#               kurtosis     23.71073                -0.70838
#       time correlation     -0.00626                -0.00422
#
#           elasped time      1.70296
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          164
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 49     40.00000 |*****************                   40.68168
#                 89     41.00000 |********************************    41.59328
#                 38     42.00000 |*************                       42.19741
#
#                 10        > 95% |***                                 42.86126
#
#        mean of 95%     41.46992
#          95th %ile     42.60398
 for      1.72724 seconds
 
Running:         getsockname# bin/getsockname -E -C 200 -L -S -W -N getsockname -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
getsockname    1   1     20.30389          191        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     19.77295                19.77295
#                    max     23.09480                21.27183
#                   mean     20.43665                20.35504
#                 median     20.31285                20.30389
#                 stddev      0.47258                 0.31022
#         standard error      0.03325                 0.02245
#   99% confidence level      0.07734                 0.05221
#                   skew      2.27431                 1.01100
#               kurtosis      7.36046                 0.67648
#       time correlation     -0.00261                -0.00085
#
#           elasped time      4.13465
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          238
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 11     19.00000 |**                                  19.92936
#                170     20.00000 |********************************    20.33453
#
#                 10        > 95% |*                                   21.17196
#
#        mean of 95%     20.30991
#          95th %ile     21.04578
 for      4.17013 seconds
Running:         getpeername# bin/getpeername -E -C 200 -L -S -W -N getpeername -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
getpeername    1   1     20.08867          187        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     19.50090                19.50090
#                    max     24.39178                20.76272
#                   mean     20.27304                20.12039
#                 median     20.10198                20.08867
#                 stddev      0.64760                 0.25030
#         standard error      0.04556                 0.01830
#   99% confidence level      0.10598                 0.04258
#                   skew      3.36503                 0.40732
#               kurtosis     13.45248                -0.18492
#       time correlation     -0.00135                -0.00023
#
#           elasped time      4.10120
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 60     19.00000 |****************                    19.86084
#                117     20.00000 |********************************    20.20740
#
#                 10        > 95% |**                                  20.65953
#
#        mean of 95%     20.08993
#          95th %ile     20.59095
 for      4.14331 seconds
 
Running:           chdir_tmp# bin/chdir -E -C 200 -L -S -W -N chdir_tmp -I 1000 /tmp/libmicro.2571/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.2571/1/2/3/4/5/6/7/8/9/0 
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chdir_tmp      1   1    145.64949          172        0      100     2     n
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    143.27893               143.27893
#                    max    192.43861               149.10805
#                   mean    147.59167               145.67695
#                 median    145.86965               145.64949
#                 stddev      6.07749                 1.23296
#         standard error      0.42761                 0.09401
#   99% confidence level      0.99462                 0.21867
#                   skew      4.11198                 0.25181
#               kurtosis     20.87124                -0.17369
#       time correlation     -0.01526                -0.00195
#
#           elasped time      2.98707
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          171
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 14    143.00000 |*******                            143.56035
#                 33    144.00000 |*****************                  144.42697
#                 60    145.00000 |********************************   145.51820
#                 42    146.00000 |**********************             146.45985
#                 14    147.00000 |*******                            147.32556
#
#                  9        > 95% |****                               148.39296
#
#        mean of 95%    145.52699
#          95th %ile    147.71029
 for      3.01312 seconds
Running:           chdir_usr# bin/chdir -E -C 200 -L -S -W -N chdir_usr -I 1000 /var/tmp/libmicro.2571/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.2571/1/2/3/4/5/6/7/8/9/0 
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chdir_usr      1   1    159.03835          174        0      100     2     n
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    155.00635               155.00635
#                    max    227.77691               166.03739
#                   mean    162.65984               159.14672
#                 median    159.94715               159.03835
#                 stddev     10.19582                 2.35155
#         standard error      0.71738                 0.17827
#   99% confidence level      1.66862                 0.41466
#                   skew      2.96685                 0.68283
#               kurtosis     10.39194                 0.15335
#       time correlation      0.03669                -0.01608
#
#           elasped time      3.29055
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          165
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    155.00000 |******                             155.56077
#                 31    156.00000 |***************************        156.60065
#                 32    157.00000 |****************************       157.48595
#                 16    158.00000 |**************                     158.42155
#                 21    159.00000 |******************                 159.60838
#                 36    160.00000 |********************************   160.42864
#                 13    161.00000 |***********                        161.32010
#                  7    162.00000 |******                             162.44754
#                  2    163.00000 |*                                  163.47483
#
#                  9        > 95% |********                           165.02647
#
#        mean of 95%    158.82601
#          95th %ile    163.55675
 for      3.30314 seconds
 
Running:         chgetwd_tmp# bin/chdir -E -C 200 -L -S -W -N chgetwd_tmp -I 1500 -g /tmp/libmicro.2571/0/1/2/3/4/5/6/7/8/9 /tmp/libmicro.2571/1/2/3/4/5/6/7/8/9/0 
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_tmp    1   1    159.14785          178        0       66     2     y
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    155.39318               155.39318
#                    max    219.31561               165.61767
#                   mean    161.92109               159.30453
#                 median    159.52797               159.14785
#                 stddev      8.96731                 2.18420
#         standard error      0.63094                 0.16371
#   99% confidence level      1.46756                 0.38080
#                   skew      3.70148                 0.67135
#               kurtosis     15.54671                 0.31225
#       time correlation     -0.06830                -0.01091
#
#           elasped time      2.16293
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          178
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    155.00000 |******                             155.71845
#                 16    156.00000 |**************                     156.43730
#                 33    157.00000 |******************************     157.56942
#                 28    158.00000 |*************************          158.49926
#                 35    159.00000 |********************************   159.50547
#                 25    160.00000 |**********************             160.48324
#                 15    161.00000 |*************                      161.36057
#                  6    162.00000 |*****                              162.27868
#                  4    163.00000 |***                                163.40773
#
#                  9        > 95% |********                           164.76951
#
#        mean of 95%    159.01349
#          95th %ile    163.93427
 for      2.17758 seconds
Running:         chgetwd_usr# bin/chdir -E -C 200 -L -S -W -N chgetwd_usr -I 1500 -g /var/tmp/libmicro.2571/0/1/2/3/4/5/6/7/8/9 /var/tmp/libmicro.2571/1/2/3/4/5/6/7/8/9/0 
             prc thr   usecs/call      samples   errors cnt/samp  dirs  gets
chgetwd_usr    1   1    172.36297          175        0       66     2     y
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    169.01170               169.01170
#                    max    209.51012               176.51327
#                   mean    174.11207               172.42073
#                 median    172.80127               172.36297
#                 stddev      5.47369                 1.61071
#         standard error      0.38513                 0.12176
#   99% confidence level      0.89581                 0.28321
#                   skew      3.49808                 0.29902
#               kurtosis     15.15777                -0.19374
#       time correlation     -0.01969                 0.00232
#
#           elasped time      2.32609
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          172
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    169.00000 |*****                              169.28931
#                 29    170.00000 |***********************            170.56361
#                 37    171.00000 |******************************     171.47756
#                 39    172.00000 |********************************   172.52707
#                 36    173.00000 |*****************************      173.45399
#                 15    174.00000 |************                       174.28659
#                  3    175.00000 |**                                 175.24879
#
#                  9        > 95% |*******                            176.07152
#
#        mean of 95%    172.22280
#          95th %ile    175.39230
 for      2.33876 seconds
 
Running:        realpath_tmp# bin/realpath -E -C 200 -L -S -W -N realpath_tmp -I 3000 -f /tmp/libmicro.2571/0/1/2/3/4/5/6/7/8/9 
             prc thr   usecs/call      samples   errors cnt/samp 
realpath_tmp   1   1    419.14488          185        0       33 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    408.11361               408.11361
#                    max    534.72500               439.29906
#                   mean    424.24925               420.31380
#                 median    419.60258               419.14488
#                 stddev     16.44921                 6.64323
#         standard error      1.15736                 0.48842
#   99% confidence level      2.69202                 1.13606
#                   skew      3.55607                 0.66683
#               kurtosis     16.10046                -0.32344
#       time correlation     -0.01902                 0.01804
#
#           elasped time      2.83335
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          155
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    408.00000 |*                                  408.11361
#                  1    409.00000 |*                                  409.60306
#                  2    410.00000 |***                                410.84427
#                  4    411.00000 |******                             411.56379
#                  7    412.00000 |***********                        412.62741
#                 16    413.00000 |**************************         413.42706
#                 19    414.00000 |********************************   414.43481
#                 14    415.00000 |***********************            415.45394
#                 13    416.00000 |*********************              416.64276
#                  7    417.00000 |***********                        417.67648
#                  7    418.00000 |***********                        418.46221
#                 18    419.00000 |******************************     419.54224
#                  5    420.00000 |********                           420.75225
#                  3    421.00000 |*****                              421.57817
#                  7    422.00000 |***********                        422.35430
#                  6    423.00000 |**********                         423.48524
#                  5    424.00000 |********                           424.45572
#                  6    425.00000 |**********                         425.42593
#                  9    426.00000 |***************                    426.58784
#                  9    427.00000 |***************                    427.54978
#                  5    428.00000 |********                           428.31588
#                  3    429.00000 |*****                              429.41074
#                  6    430.00000 |**********                         430.57696
#                  2    431.00000 |***                                431.26997
#
#                 10        > 95% |****************                   435.36907
#
#        mean of 95%    419.45350
#          95th %ile    431.93712
 for      2.86228 seconds
Running:        realpath_usr# bin/realpath -E -C 200 -L -S -W -N realpath_usr -I 3000 -f /var/tmp/libmicro.2571/0/1/2/3/4/5/6/7/8/9 
             prc thr   usecs/call      samples   errors cnt/samp 
realpath_usr   1   1    459.71718          187        0       33 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    451.19936               451.19936
#                    max    603.68227               482.29173
#                   mean    466.68176               462.34011
#                 median    461.80397               459.71718
#                 stddev     19.53200                 6.68294
#         standard error      1.37427                 0.48870
#   99% confidence level      3.19654                 1.13673
#                   skew      4.29897                 0.65134
#               kurtosis     22.53347                -0.42691
#       time correlation     -0.05666                -0.01284
#
#           elasped time      3.11501
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          405
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    451.00000 |*                                  451.19936
#                  4    452.00000 |*****                              452.54918
#                  6    453.00000 |********                           453.60809
#                  5    454.00000 |******                             454.58322
#                 16    455.00000 |**********************             455.54845
#                 12    456.00000 |****************                   456.52882
#                 18    457.00000 |*************************          457.48688
#                 23    458.00000 |********************************   458.52926
#                  9    459.00000 |************                       459.34051
#                  5    460.00000 |******                             460.66671
#                  3    461.00000 |****                               461.57383
#                  6    462.00000 |********                           462.33148
#                  3    463.00000 |****                               463.23912
#                  9    464.00000 |************                       464.56825
#                 12    465.00000 |****************                   465.39120
#                  9    466.00000 |************                       466.54126
#                  5    467.00000 |******                             467.55854
#                  7    468.00000 |*********                          468.40677
#                  7    469.00000 |*********                          469.52165
#                  4    470.00000 |*****                              470.61658
#                  6    471.00000 |********                           471.54748
#                  1    472.00000 |*                                  472.29221
#                  3    473.00000 |****                               473.23864
#                  3    474.00000 |****                               474.49019
#
#                 10        > 95% |*************                      477.25551
#
#        mean of 95%    461.49744
#          95th %ile    474.86773
 for      3.12890 seconds
 
Running:            stat_tmp# bin/stat -E -C 200 -L -S -W -N stat_tmp -I 500 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp 
stat_tmp       1   1    101.05903          190        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     98.36335                98.36335
#                    max    121.85391               105.02959
#                   mean    101.75354               101.19133
#                 median    101.27407               101.05903
#                 stddev      2.85154                 1.37733
#         standard error      0.20063                 0.09992
#   99% confidence level      0.46667                 0.23242
#                   skew      3.49920                 0.63508
#               kurtosis     16.68876                -0.19479
#       time correlation     -0.00783                -0.00776
#
#           elasped time      4.11686
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          162
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     98.00000 |*                                   98.62895
#                 44     99.00000 |*****************************       99.69813
#                 48    100.00000 |********************************   100.42842
#                 47    101.00000 |*******************************    101.55289
#                 27    102.00000 |******************                 102.36435
#                 12    103.00000 |********                           103.38426
#
#                 10        > 95% |******                             104.43785
#
#        mean of 95%    101.01097
#          95th %ile    104.03887
 for      4.14114 seconds
Running:            stat_usr# bin/stat -E -C 200 -L -S -W -N stat_usr -I 500 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp 
stat_usr       1   1    113.61963          184        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    111.40395               111.40395
#                    max    149.41355               117.09867
#                   mean    114.85442               113.63073
#                 median    113.74891               113.61963
#                 stddev      4.71661                 1.18332
#         standard error      0.33186                 0.08724
#   99% confidence level      0.77190                 0.20291
#                   skew      4.16122                 0.49200
#               kurtosis     21.07309                -0.04820
#       time correlation      0.00156                -0.00406
#
#           elasped time      4.64470
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          170
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10    111.00000 |*****                              111.70373
#                 47    112.00000 |************************           112.45347
#                 62    113.00000 |********************************   113.51696
#                 43    114.00000 |**********************             114.41305
#                 12    115.00000 |******                             115.32502
#
#                 10        > 95% |*****                              116.39915
#
#        mean of 95%    113.47163
#          95th %ile    115.90955
 for      4.65486 seconds
 
Running:           fcntl_tmp# bin/fcntl -E -C 200 -L -S -W -N fcntl_tmp -I 100 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp 
fcntl_tmp      1   1      0.89070          188        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.86970                 0.86970
#                    max      1.69786                 1.01767
#                   mean      0.93314                 0.90948
#                 median      0.89172                 0.89070
#                 stddev      0.10375                 0.03918
#         standard error      0.00730                 0.00286
#   99% confidence level      0.01698                 0.00665
#                   skew      3.76893                 1.42053
#               kurtosis     17.94695                 0.66573
#       time correlation     -0.00035                 0.00001
#
#           elasped time      0.19327
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          184
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                178      0.00000 |********************************     0.90370
#
#                 10        > 95% |*                                    1.01222
#
#        mean of 95%      0.90370
#          95th %ile      1.00590
 for      0.21820 seconds
Running:           fcntl_usr# bin/fcntl -E -C 200 -L -S -W -N fcntl_usr -I 100 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp 
fcntl_usr      1   1      0.88891          143        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.85179                 0.85179
#                    max      1.73883                 0.92987
#                   mean      0.95846                 0.88953
#                 median      0.89582                 0.88891
#                 stddev      0.13715                 0.01449
#         standard error      0.00965                 0.00121
#   99% confidence level      0.02245                 0.00282
#                   skew      2.36593                 0.26104
#               kurtosis      6.36617                 0.28509
#       time correlation     -0.00020                -0.00003
#
#           elasped time      0.19710
#      number of samples          143
#     number of outliers           59
#      getnsecs overhead          179
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                135      0.00000 |********************************     0.88763
#
#                  8        > 95% |*                                    0.92165
#
#        mean of 95%      0.88763
#          95th %ile      0.91681
 for      0.20805 seconds
Running:        fcntl_ndelay# bin/fcntl_ndelay -E -C 200 -L -S -W -N fcntl_ndelay -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
fcntl_ndelay   1   1      0.97494          190        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.94397                 0.94397
#                    max      1.65897                 1.12470
#                   mean      1.01733                 0.99555
#                 median      0.97776                 0.97494
#                 stddev      0.10403                 0.04404
#         standard error      0.00732                 0.00320
#   99% confidence level      0.01703                 0.00743
#                   skew      3.51642                 1.31425
#               kurtosis     14.32852                 0.50780
#       time correlation     -0.00028                 0.00002
#
#           elasped time      0.21014
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                136      0.00000 |********************************     0.97056
#                 44      1.00000 |**********                           1.04746
#
#                 10        > 95% |**                                   1.10706
#
#        mean of 95%      0.98935
#          95th %ile      1.09091
 for      0.23466 seconds
 
Running:           lseek_t8k# bin/lseek -E -C 200 -L -S -W -N lseek_t8k -s 8k -I 50 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
lseek_t8k      1   1      0.79785          186        0     2000     8192
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.77289                 0.77289
#                    max      1.19196                 0.87491
#                   mean      0.82522                 0.80792
#                 median      0.80438                 0.79785
#                 stddev      0.06946                 0.02449
#         standard error      0.00489                 0.00180
#   99% confidence level      0.01137                 0.00418
#                   skew      3.25764                 0.69577
#               kurtosis     11.35297                -0.47175
#       time correlation     -0.00000                -0.00003
#
#           elasped time      0.33809
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          204
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176      0.00000 |********************************     0.80469
#
#                 10        > 95% |*                                    0.86476
#
#        mean of 95%      0.80469
#          95th %ile      0.85647
 for      0.36313 seconds
Running:           lseek_u8k# bin/lseek -E -C 200 -L -S -W -N lseek_u8k -s 8k -I 50 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
lseek_u8k      1   1      0.80246          195        0     2000     8192
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.74294                 0.74294
#                    max      1.12092                 0.99049
#                   mean      0.83316                 0.82454
#                 median      0.80540                 0.80246
#                 stddev      0.07237                 0.05669
#         standard error      0.00509                 0.00406
#   99% confidence level      0.01184                 0.00944
#                   skew      1.80765                 1.39553
#               kurtosis      3.11669                 1.06095
#       time correlation     -0.00024                -0.00016
#
#           elasped time      0.34020
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          209
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                185      0.00000 |********************************     0.81634
#
#                 10        > 95% |*                                    0.97636
#
#        mean of 95%      0.81634
#          95th %ile      0.96348
 for      0.35140 seconds
 
Running:            open_tmp# bin/open -E -C 200 -L -S -W -N open_tmp -B 256 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp 
open_tmp       1   1    113.85532          196        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    108.70232               108.70232
#                    max    144.48732               124.92532
#                   mean    115.16360               114.62128
#                 median    113.94832               113.85532
#                 stddev      4.74669                 3.48245
#         standard error      0.33398                 0.24875
#   99% confidence level      0.77683                 0.57858
#                   skew      2.25462                 0.74290
#               kurtosis      8.63873                -0.07243
#       time correlation     -0.02075                -0.01053
#
#           elasped time      6.15117
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          174
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    108.00000 |*                                  108.82982
#                  9    109.00000 |********                           109.60265
#                 11    110.00000 |**********                         110.46377
#                 25    111.00000 |************************           111.62320
#                 33    112.00000 |********************************   112.47408
#                 22    113.00000 |*********************              113.49805
#                 16    114.00000 |***************                    114.40507
#                 17    115.00000 |****************                   115.46267
#                 16    116.00000 |***************                    116.39113
#                 11    117.00000 |**********                         117.55259
#                  9    118.00000 |********                           118.46965
#                  5    119.00000 |****                               119.57672
#                  6    120.00000 |*****                              120.30415
#                  4    121.00000 |***                                121.32532
#
#                 10        > 95% |*********                          122.74852
#
#        mean of 95%    114.18434
#          95th %ile    121.69032
 for      6.17689 seconds
Running:            open_usr# bin/open -E -C 200 -L -S -W -N open_usr -B 256 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp 
open_usr       1   1    126.38236          197        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    122.36236               122.36236
#                    max    156.46836               135.19836
#                   mean    127.40212               127.02182
#                 median    126.41336               126.38236
#                 stddev      3.95034                 2.96896
#         standard error      0.27795                 0.21153
#   99% confidence level      0.64650                 0.49202
#                   skew      2.58769                 0.63513
#               kurtosis     13.81836                -0.39988
#       time correlation     -0.00746                -0.00433
#
#           elasped time      6.78840
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  9    122.00000 |**********                         122.81981
#                 22    123.00000 |*************************          123.45768
#                 27    124.00000 |******************************     124.60140
#                 28    125.00000 |********************************   125.47679
#                 26    126.00000 |*****************************      126.42586
#                 20    127.00000 |**********************             127.49241
#                 15    128.00000 |*****************                  128.34970
#                 15    129.00000 |*****************                  129.57670
#                 10    130.00000 |***********                        130.61606
#                 11    131.00000 |************                       131.37491
#                  4    132.00000 |****                               132.58111
#
#                 10        > 95% |***********                        133.68366
#
#        mean of 95%    126.66557
#          95th %ile    132.71436
 for      6.80110 seconds
Running:           open_zero# bin/open -E -C 200 -L -S -W -N open_zero -B 256 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp 
open_zero      1   1     70.51538          201        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     67.22938                67.22938
#                    max     85.30737                79.42538
#                   mean     71.66612                71.59825
#                 median     70.52738                70.51538
#                 stddev      3.18640                 3.04448
#         standard error      0.22419                 0.21474
#   99% confidence level      0.52148                 0.49949
#                   skew      1.07135                 0.85340
#               kurtosis      0.78547                -0.36729
#       time correlation     -0.00419                -0.00439
#
#           elasped time      3.91517
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6     67.00000 |****                                67.66054
#                 33     68.00000 |**************************          68.52504
#                 39     69.00000 |*******************************     69.49458
#                 40     70.00000 |********************************    70.45765
#                 12     71.00000 |*********                           71.48921
#                 14     72.00000 |***********                         72.36830
#                 10     73.00000 |********                            73.63117
#                 12     74.00000 |*********                           74.58229
#                 12     75.00000 |*********                           75.64021
#                  7     76.00000 |*****                               76.60137
#                  5     77.00000 |****                                77.25957
#
#                 11        > 95% |********                            78.44074
#
#        mean of 95%     71.20211
#          95th %ile     77.58437
 for      3.93293 seconds
 
Running:                 dup# bin/dup -E -C 200 -L -S -W -N dup -B 1024 
             prc thr   usecs/call      samples   errors cnt/samp 
dup            1   1      1.24409          174        0     1024 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.20284                 1.20284
#                    max      1.88359                 1.39034
#                   mean      1.31079                 1.26211
#                 median      1.25084                 1.24409
#                 stddev      0.13634                 0.04325
#         standard error      0.00959                 0.00328
#   99% confidence level      0.02231                 0.00763
#                   skew      2.21126                 0.93208
#               kurtosis      4.31394                -0.11041
#       time correlation     -0.00041                 0.00004
#
#           elasped time      0.49913
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          164
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                165      1.00000 |********************************     1.25645
#
#                  9        > 95% |*                                    1.36592
#
#        mean of 95%      1.25645
#          95th %ile      1.33859
 for      0.52448 seconds
 
Running:            socket_u# bin/socket -E -C 200 -L -S -W -N socket_u -B 256 
             prc thr   usecs/call      samples   errors cnt/samp 
socket_u       1   1     16.64439          192        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.14839                15.14839
#                    max     51.31939                20.15139
#                   mean     17.85703                16.98031
#                 median     16.69539                16.64439
#                 stddev      4.90341                 1.14003
#         standard error      0.34500                 0.08227
#   99% confidence level      0.80248                 0.19137
#                   skew      5.57426                 0.85871
#               kurtosis     32.51852                -0.16613
#       time correlation      0.00044                -0.00254
#
#           elasped time      1.67973
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 38     15.00000 |***************                     15.77221
#                 81     16.00000 |********************************    16.43287
#                 30     17.00000 |***********                         17.45056
#                 29     18.00000 |***********                         18.36811
#                  4     19.00000 |*                                   19.20389
#
#                 10        > 95% |***                                 19.68049
#
#        mean of 95%     16.83195
#          95th %ile     19.27239
 for      1.70535 seconds
Running:            socket_i# bin/socket -E -C 200 -L -S -W -N socket_i -B 256 -f PF_INET 
             prc thr   usecs/call      samples   errors cnt/samp 
socket_i       1   1     18.14846          193        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     16.14046                16.14046
#                    max     71.33246                22.47246
#                   mean     19.17567                18.35410
#                 median     18.22246                18.14846
#                 stddev      5.01613                 1.41044
#         standard error      0.35293                 0.10153
#   99% confidence level      0.82092                 0.23615
#                   skew      6.95842                 0.67489
#               kurtosis     60.96565                -0.31387
#       time correlation     -0.00521                 0.00358
#
#           elasped time      1.92277
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          138
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 36     16.00000 |********************                16.67821
#                 56     17.00000 |********************************    17.48598
#                 44     18.00000 |*************************           18.49467
#                 29     19.00000 |****************                    19.43153
#                 15     20.00000 |********                            20.43753
#                  3     21.00000 |*                                   21.09879
#
#                 10        > 95% |*****                               21.55726
#
#        mean of 95%     18.17907
#          95th %ile     21.21046
 for      1.93453 seconds
 
Running:          socketpair# bin/socketpair -E -C 200 -L -S -W -N socketpair -B 256 
             prc thr   usecs/call      samples   errors cnt/samp 
socketpair     1   1     77.09223          195        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     71.60823                71.60823
#                    max    117.02223                85.42823
#                   mean     78.18043                77.41438
#                 median     77.23223                77.09223
#                 stddev      5.37623                 2.93423
#         standard error      0.37827                 0.21012
#   99% confidence level      0.87986                 0.48875
#                   skew      4.01613                 0.50323
#               kurtosis     23.42698                -0.28520
#       time correlation     -0.01008                -0.00251
#
#           elasped time      2.88031
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     71.00000 |**                                  71.77423
#                  3     72.00000 |**                                  72.80890
#                 16     73.00000 |***************                     73.51386
#                 16     74.00000 |***************                     74.38686
#                 33     75.00000 |********************************    75.48345
#                 24     76.00000 |***********************             76.45973
#                 29     77.00000 |****************************        77.51120
#                 16     78.00000 |***************                     78.43361
#                 15     79.00000 |**************                      79.54503
#                 15     80.00000 |**************                      80.37517
#                 10     81.00000 |*********                           81.39303
#                  3     82.00000 |**                                  82.31090
#                  2     83.00000 |*                                   83.15023
#
#                 10        > 95% |*********                           84.09263
#
#        mean of 95%     77.05339
#          95th %ile     83.28023
 for      2.90638 seconds
 
Running:          setsockopt# bin/setsockopt -E -C 200 -L -S -W -N setsockopt -I 200 
             prc thr   usecs/call      samples   errors cnt/samp 
setsockopt     1   1     13.93984          198        0      500 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.19949                13.19949
#                    max     18.50585                15.77536
#                   mean     14.13959                14.07834
#                 median     13.94752                13.93984
#                 stddev      0.73396                 0.57929
#         standard error      0.05164                 0.04117
#   99% confidence level      0.12012                 0.09576
#                   skew      2.16197                 0.80041
#               kurtosis      8.35154                 0.02284
#       time correlation     -0.00191                -0.00218
#
#           elasped time      1.46730
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          193
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                106     13.00000 |********************************    13.63959
#                 75     14.00000 |**********************              14.41548
#                  7     15.00000 |**                                  15.09966
#
#                 10        > 95% |***                                 15.48562
#
#        mean of 95%     14.00348
#          95th %ile     15.24339
 for      1.49228 seconds
 
Running:                bind# bin/bind -E -C 200 -L -S -W -N bind -B 200 
             prc thr   usecs/call      samples   errors cnt/samp 
bind           1   1     31.39889          189        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     30.31986                30.31986
#                    max     42.81905                34.66929
#                   mean     32.16097                31.77358
#                 median     31.47953                31.39889
#                 stddev      1.86434                 1.01091
#         standard error      0.13117                 0.07353
#   99% confidence level      0.30511                 0.17104
#                   skew      2.68569                 1.02975
#               kurtosis      9.10082                 0.22212
#       time correlation      0.00150                 0.00189
#
#           elasped time     16.58178
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 42     30.00000 |**************                      30.74317
#                 91     31.00000 |********************************    31.42945
#                 29     32.00000 |**********                          32.50923
#                 17     33.00000 |*****                               33.44531
#
#                 10        > 95% |***                                 34.25752
#
#        mean of 95%     31.63481
#          95th %ile     34.01906
 for     16.59835 seconds
 
Running:              listen# bin/listen -E -C 200 -L -S -W -N listen -B 800 
             prc thr   usecs/call      samples   errors cnt/samp 
listen         1   1      1.51980          184        0      800 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.47500                 1.47500
#                    max      2.32236                 1.85356
#                   mean      1.61066                 1.56729
#                 median      1.52588                 1.51980
#                 stddev      0.17112                 0.09685
#         standard error      0.01204                 0.00714
#   99% confidence level      0.02800                 0.01661
#                   skew      1.92762                 1.31412
#               kurtosis      3.48517                 0.66050
#       time correlation     -0.00044                -0.00038
#
#           elasped time      0.26451
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                174      1.00000 |********************************     1.55297
#
#                 10        > 95% |*                                    1.81641
#
#        mean of 95%      1.55297
#          95th %ile      1.78092
 for      0.29710 seconds
 
Running:          connection# bin/connection -E -C 200 -L -S -W -N connection -B 256 
             prc thr   usecs/call      samples   errors cnt/samp 
connection     1   1    310.57028          197        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    302.03828               302.03828
#                    max    367.67528               323.23328
#                   mean    311.45962               310.71026
#                 median    310.89728               310.57028
#                 stddev      6.67655                 4.17748
#         standard error      0.46976                 0.29763
#   99% confidence level      1.09266                 0.69229
#                   skew      3.88521                 0.26950
#               kurtosis     26.43113                 0.02697
#       time correlation     -0.00151                 0.00038
#
#           elasped time     25.04914
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          185
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4    302.00000 |******                             302.35303
#                  6    303.00000 |*********                          303.45311
#                 10    304.00000 |***************                    304.63418
#                  6    305.00000 |*********                          305.49844
#                 16    306.00000 |************************           306.42803
#                  9    307.00000 |*************                      307.58750
#                 17    308.00000 |*************************          308.66251
#                 21    309.00000 |********************************   309.52999
#                 17    310.00000 |*************************          310.62163
#                 17    311.00000 |*************************          311.53863
#                 15    312.00000 |**********************             312.51981
#                 16    313.00000 |************************           313.38090
#                 14    314.00000 |*********************              314.41749
#                 14    315.00000 |*********************              315.45142
#                  5    316.00000 |*******                            316.52748
#
#                 10        > 95% |***************                    320.25108
#
#        mean of 95%    310.20005
#          95th %ile    317.47228
 for     25.06826 seconds
 
Running:             poll_10# bin/poll -E -C 200 -L -S -W -N poll_10 -n 10 -I 250 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_10        1   1     49.72951          185        0      400       10   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     48.34711                48.34711
#                    max     57.45431                51.26679
#                   mean     50.00489                49.75252
#                 median     49.76407                49.72951
#                 stddev      1.08200                 0.51235
#         standard error      0.07613                 0.03767
#   99% confidence level      0.17708                 0.08762
#                   skew      3.30087                 0.53718
#               kurtosis     15.85695                 0.84570
#       time correlation     -0.00204                -0.00042
#
#           elasped time      4.04675
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 11     48.00000 |**                                  48.77841
#                129     49.00000 |********************************    49.60039
#                 35     50.00000 |********                            50.25356
#
#                 10        > 95% |**                                  51.03287
#
#        mean of 95%     49.67936
#          95th %ile     50.75479
 for      4.07389 seconds
Running:            poll_100# bin/poll -E -C 200 -L -S -W -N poll_100 -n 100 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_100       1   1    363.08824          188        0      100      100   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    355.14712               355.14712
#                    max    464.33624               373.34872
#                   mean    366.21313               362.63046
#                 median    363.41848               363.08824
#                 stddev     14.54978                 3.71173
#         standard error      1.02372                 0.27071
#   99% confidence level      2.38117                 0.62966
#                   skew      3.83666                 0.16008
#               kurtosis     16.59670                -0.28628
#       time correlation     -0.03369                -0.00192
#
#           elasped time      7.40299
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    355.00000 |*******                            355.38989
#                  5    356.00000 |******                             356.50238
#                 13    357.00000 |****************                   357.55254
#                 15    358.00000 |*******************                358.73914
#                 10    359.00000 |************                       359.47941
#                 18    360.00000 |***********************            360.53180
#                 10    361.00000 |************                       361.49848
#                 17    362.00000 |*********************              362.48032
#                 25    363.00000 |********************************   363.55221
#                 21    364.00000 |**************************         364.47076
#                 19    365.00000 |************************           365.38402
#                  7    366.00000 |********                           366.43855
#                  9    367.00000 |***********                        367.53923
#                  3    368.00000 |***                                368.43523
#
#                 10        > 95% |************                       370.56728
#
#        mean of 95%    362.18457
#          95th %ile    368.99672
 for      7.41949 seconds
Running:           poll_1000# bin/poll -E -C 200 -L -S -W -N poll_1000 -n 1000 -I 5000 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_1000      1   1   3778.33285          188        0       20     1000   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   3683.43365              3683.43365
#                    max   4414.14725              3897.43685
#                   mean   3802.40021              3777.14156
#                 median   3782.99205              3778.33285
#                 stddev    108.53164                45.83150
#         standard error      7.63626                 3.34261
#   99% confidence level     17.76194                 7.77490
#                   skew      3.04652                 0.21431
#               kurtosis     11.11412                -0.39445
#       time correlation      0.01250                 0.12420
#
#           elasped time     15.36745
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          191
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   3678.00000 |**                                3683.43365
#                  3   3684.00000 |*******                           3686.99205
#                  0   3690.00000 |                                           -
#                  4   3696.00000 |*********                         3697.55525
#                  5   3702.00000 |************                      3705.80293
#                  3   3708.00000 |*******                           3710.39045
#                  1   3714.00000 |**                                3719.74725
#                  9   3720.00000 |**********************            3722.57889
#                  8   3726.00000 |*******************               3728.69765
#                  9   3732.00000 |**********************            3733.97658
#                  6   3738.00000 |**************                    3741.51578
#                  8   3744.00000 |*******************               3747.41125
#                  6   3750.00000 |**************                    3752.05872
#                  9   3756.00000 |**********************            3759.32912
#                  7   3762.00000 |*****************                 3765.15616
#                 12   3768.00000 |*****************************     3771.51365
#                  7   3774.00000 |*****************                 3777.54656
#                 13   3780.00000 |********************************  3784.01999
#                 11   3786.00000 |***************************       3788.65314
#                  5   3792.00000 |************                      3793.87205
#                  8   3798.00000 |*******************               3800.73605
#                  6   3804.00000 |**************                    3805.65445
#                  8   3810.00000 |*******************               3812.42885
#                  5   3816.00000 |************                      3819.21861
#                 11   3822.00000 |***************************       3824.71772
#                  1   3828.00000 |**                                3829.89125
#                  5   3834.00000 |************                      3835.64613
#                  6   3840.00000 |**************                    3843.19898
#                  1   3846.00000 |**                                3849.53925
#
#                 10        > 95% |************************          3875.67941
#
#        mean of 95%   3771.60573
#          95th %ile   3851.84325
 for     15.42461 seconds
 
Running:            poll_w10# bin/poll -E -C 200 -L -S -W -N poll_w10 -n 10 -I 250 -w 1 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w10       1   1     49.53175          181        0      400       10   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     48.55704                48.55704
#                    max     62.07704                51.27255
#                   mean     50.21943                49.67362
#                 median     49.62200                49.53175
#                 stddev      2.02715                 0.56262
#         standard error      0.14263                 0.04182
#   99% confidence level      0.33176                 0.09727
#                   skew      3.70379                 0.95950
#               kurtosis     14.89122                 0.48419
#       time correlation     -0.00824                -0.00002
#
#           elasped time      4.06283
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          162
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 12     48.00000 |***                                 48.85655
#                128     49.00000 |********************************    49.47385
#                 31     50.00000 |*******                             50.35857
#
#                 10        > 95% |**                                  51.08779
#
#        mean of 95%     49.59092
#          95th %ile     50.83671
 for      4.08129 seconds
Running:           poll_w100# bin/poll -E -C 200 -L -S -W -N poll_w100 -n 100 -I 2000 -w 10 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w100      1   1    358.89344          183        0       50      100   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    351.69472               351.69472
#                    max    541.83616               372.57920
#                   mean    365.05546               359.76188
#                 median    359.35936               358.89344
#                 stddev     22.44325                 4.40311
#         standard error      1.57910                 0.32549
#   99% confidence level      3.67299                 0.75708
#                   skew      4.86410                 0.91945
#               kurtosis     26.72845                 0.36737
#       time correlation     -0.11166                 0.00423
#
#           elasped time      3.69275
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    351.00000 |*                                  351.69472
#                  1    352.00000 |*                                  352.15552
#                  4    353.00000 |*****                              353.58784
#                 11    354.00000 |***************                    354.62383
#                 17    355.00000 |***********************            355.40732
#                 23    356.00000 |********************************   356.53802
#                 18    357.00000 |*************************          357.51019
#                 19    358.00000 |**************************         358.51267
#                 19    359.00000 |**************************         359.49221
#                 12    360.00000 |****************                   360.45035
#                 12    361.00000 |****************                   361.39243
#                 10    362.00000 |*************                      362.52915
#                  6    363.00000 |********                           363.50571
#                  6    364.00000 |********                           364.52459
#                  6    365.00000 |********                           365.44619
#                  2    366.00000 |**                                 366.39680
#                  3    367.00000 |****                               367.44555
#                  0    368.00000 |                                           -
#                  3    369.00000 |****                               369.01056
#
#                 10        > 95% |*************                      370.73600
#
#        mean of 95%    359.12754
#          95th %ile    369.49696
 for      3.70897 seconds
Running:          poll_w1000# bin/poll -E -C 200 -L -S -W -N poll_w1000 -n 1000 -I 20000 -w 100 
             prc thr   usecs/call      samples   errors cnt/samp     nfds flags
poll_w1000     1   1   3790.96900          193        0        5     1000   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   3641.97700              3641.97700
#                    max   4462.20100              3993.77220
#                   mean   3826.31525              3808.44120
#                 median   3793.73380              3790.96900
#                 stddev    111.61924                68.63135
#         standard error      7.85350                 4.94019
#   99% confidence level     18.26725                11.49089
#                   skew      2.71035                 0.67178
#               kurtosis     10.55211                -0.18203
#       time correlation     -0.09616                -0.10626
#
#           elasped time      3.87050
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   3640.00000 |*                                 3641.97700
#                  0   3650.00000 |                                           -
#                  0   3660.00000 |                                           -
#                  0   3670.00000 |                                           -
#                  0   3680.00000 |                                           -
#                  4   3690.00000 |******                            3697.47780
#                  1   3700.00000 |*                                 3704.74820
#                  4   3710.00000 |******                            3714.62980
#                  5   3720.00000 |*******                           3724.28612
#                  5   3730.00000 |*******                           3735.20196
#                  9   3740.00000 |*************                     3744.82073
#                 18   3750.00000 |***************************       3754.75069
#                 21   3760.00000 |********************************  3764.89357
#                 19   3770.00000 |****************************      3774.44757
#                  8   3780.00000 |************                      3785.47780
#                 15   3790.00000 |**********************            3794.87385
#                  6   3800.00000 |*********                         3803.12900
#                 10   3810.00000 |***************                   3813.48676
#                  7   3820.00000 |**********                        3826.01906
#                  4   3830.00000 |******                            3837.66340
#                  5   3840.00000 |*******                           3846.19332
#                  6   3850.00000 |*********                         3855.07140
#                  6   3860.00000 |*********                         3863.76687
#                  3   3870.00000 |****                              3875.84153
#                  6   3880.00000 |*********                         3885.37327
#                  2   3890.00000 |***                               3893.57380
#                  8   3900.00000 |************                      3904.62660
#                  6   3910.00000 |*********                         3914.48900
#                  2   3920.00000 |***                               3924.85700
#                  2   3930.00000 |***                               3934.61060
#
#                 10        > 95% |***************                   3966.32388
#
#        mean of 95%   3799.81373
#          95th %ile   3943.39140
 for      3.93113 seconds
 
Running:           select_10# bin/select -E -C 200 -L -S -W -N select_10 -n 10 -I 250 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_10      1   1     27.38444          191        0      400       10   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     26.64716                26.64716
#                    max     31.91180                29.03436
#                   mean     27.71001                27.54475
#                 median     27.40748                27.38444
#                 stddev      0.87205                 0.50580
#         standard error      0.06136                 0.03660
#   99% confidence level      0.14272                 0.08513
#                   skew      2.47444                 1.02075
#               kurtosis      7.18813                 0.27005
#       time correlation     -0.00461                -0.00139
#
#           elasped time      2.24492
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          209
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 16     26.00000 |***                                 26.91360
#                140     27.00000 |********************************    27.39250
#                 25     28.00000 |*****                               28.30583
#
#                 10        > 95% |**                                  28.78335
#
#        mean of 95%     27.47631
#          95th %ile     28.53708
 for      2.27292 seconds
Running:          select_100# bin/select -E -C 200 -L -S -W -N select_100 -n 100 -I 1000 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_100     1   1     55.82885          176        0      100      100   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     53.91653                53.91653
#                    max     67.21829                58.79845
#                   mean     56.66800                55.80262
#                 median     56.01829                55.82885
#                 stddev      2.63208                 1.02541
#         standard error      0.18519                 0.07729
#   99% confidence level      0.43076                 0.17978
#                   skew      2.21043                 0.50048
#               kurtosis      4.84377                 0.06883
#       time correlation     -0.02146                -0.00939
#
#           elasped time      1.14892
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     53.00000 |**                                  53.94008
#                 38     54.00000 |*********************               54.65967
#                 57     55.00000 |********************************    55.49852
#                 52     56.00000 |*****************************       56.30215
#                 15     57.00000 |********                            57.28839
#
#                  9        > 95% |*****                               58.22672
#
#        mean of 95%     55.67198
#          95th %ile     57.65669
 for      1.16924 seconds
Running:         select_1000# bin/select -E -C 200 -L -S -W -N select_1000 -n 1000 -I 5000 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_1000    1   1    346.67435          189        0       20     1000   ---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    336.84395               336.84395
#                    max    590.62955               365.33675
#                   mean    351.10473               347.95300
#                 median    347.63435               346.67435
#                 stddev     19.75959                 5.80928
#         standard error      1.39028                 0.42256
#   99% confidence level      3.23379                 0.98288
#                   skew      9.15254                 0.57708
#               kurtosis    104.84976                -0.06795
#       time correlation      0.02984                 0.02305
#
#           elasped time      1.42323
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          273
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    336.00000 |***                                336.88875
#                  2    337.00000 |***                                337.73355
#                  2    338.00000 |***                                338.71275
#                  5    339.00000 |*********                          339.66507
#                  4    340.00000 |*******                            340.43435
#                 10    341.00000 |******************                 341.57739
#                 15    342.00000 |****************************       342.47083
#                 16    343.00000 |******************************     343.48395
#                 11    344.00000 |********************               344.74039
#                 17    345.00000 |********************************   345.47793
#                 13    346.00000 |************************           346.48235
#                  9    347.00000 |****************                   347.60448
#                  6    348.00000 |***********                        348.54955
#                 10    349.00000 |******************                 349.42123
#                  7    350.00000 |*************                      350.62041
#                 17    351.00000 |********************************   351.45703
#                  9    352.00000 |****************                   352.50546
#                  7    353.00000 |*************                      353.69058
#                  7    354.00000 |*************                      354.41469
#                  0    355.00000 |                                           -
#                  5    356.00000 |*********                          356.36651
#                  3    357.00000 |*****                              357.41782
#                  2    358.00000 |***                                358.30955
#
#                 10        > 95% |******************                 361.52107
#
#        mean of 95%    347.19500
#          95th %ile    358.69355
 for      1.48221 seconds
 
Running:          select_w10# bin/select -E -C 200 -L -S -W -N select_w10 -n 10 -I 250 -w 1 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w10     1   1     36.39447          181        0      400       10   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     35.54903                35.54903
#                    max     43.99447                37.97207
#                   mean     36.86086                36.49863
#                 median     36.56983                36.39447
#                 stddev      1.30701                 0.50132
#         standard error      0.09196                 0.03726
#   99% confidence level      0.21390                 0.08667
#                   skew      2.99497                 0.48216
#               kurtosis     10.54507                -0.38176
#       time correlation      0.00107                 0.00211
#
#           elasped time      2.98266
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          165
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 29     35.00000 |*******                             35.86113
#                123     36.00000 |********************************    36.46481
#                 19     37.00000 |****                                37.08971
#
#                 10        > 95% |**                                  37.64029
#
#        mean of 95%     36.43186
#          95th %ile     37.35511
 for      2.99882 seconds
Running:         select_w100# bin/select -E -C 200 -L -S -W -N select_w100 -n 100 -I 2000 -w 10 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w100    1   1     65.47642          189        0       50      100   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     61.83610                61.83610
#                    max    103.33882                69.89498
#                   mean     66.11708                65.38012
#                 median     65.59930                65.47642
#                 stddev      3.85356                 1.60433
#         standard error      0.27114                 0.11670
#   99% confidence level      0.63066                 0.27144
#                   skew      5.39343                 0.33651
#               kurtosis     43.60373                -0.35638
#       time correlation     -0.02701                -0.01618
#
#           elasped time      0.67144
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     61.00000 |*                                   61.87706
#                  6     62.00000 |****                                62.69626
#                 34     63.00000 |**********************              63.58157
#                 41     64.00000 |***************************         64.46254
#                 48     65.00000 |********************************    65.62074
#                 27     66.00000 |******************                  66.50819
#                 18     67.00000 |************                        67.40865
#                  3     68.00000 |**                                  68.18319
#
#                 10        > 95% |******                              68.87508
#
#        mean of 95%     65.18487
#          95th %ile     68.31290
 for      0.69243 seconds
Running:        select_w1000# bin/select -E -C 200 -L -S -W -N select_w1000 -n 1000 -I 20000 -w 100 
             prc thr   usecs/call      samples   errors cnt/samp    maxfd flags
select_w1000   1   1    358.16200          167        0        5     1000   -w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    342.54600               342.54600
#                    max    710.98120               396.15240
#                   mean    384.14372               359.68850
#                 median    361.38760               358.16200
#                 stddev     66.40074                12.63421
#         standard error      4.67194                 0.97766
#   99% confidence level     10.86693                 2.27405
#                   skew      2.91288                 0.83932
#               kurtosis      8.55959                -0.01295
#       time correlation      0.06523                -0.01058
#
#           elasped time      0.39201
#      number of samples          167
#     number of outliers           35
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    342.00000 |**                                 342.85320
#                 11    344.00000 |*************                      345.15255
#                 26    346.00000 |********************************   347.00040
#                 12    348.00000 |**************                     349.06973
#                 11    350.00000 |*************                      350.77989
#                  9    352.00000 |***********                        353.06476
#                  4    354.00000 |****                               354.80840
#                  8    356.00000 |*********                          357.12520
#                 13    358.00000 |****************                   359.02452
#                  8    360.00000 |*********                          361.04200
#                  8    362.00000 |*********                          362.94280
#                  8    364.00000 |*********                          364.85000
#                  7    366.00000 |********                           367.04886
#                  8    368.00000 |*********                          369.19560
#                  8    370.00000 |*********                          371.22440
#                  3    372.00000 |***                                373.02707
#                  0    374.00000 |                                           -
#                  4    376.00000 |****                               376.86280
#                  2    378.00000 |**                                 378.69320
#                  3    380.00000 |***                                380.45107
#                  1    382.00000 |*                                  382.32840
#                  2    384.00000 |**                                 385.65640
#
#                  9        > 95% |***********                        390.30422
#
#        mean of 95%    357.94456
#          95th %ile    386.37320
 for      0.44938 seconds
 
Running:               semop# bin/semop -E -C 200 -L -S -W -N semop -I 200 
             prc thr   usecs/call      samples   errors cnt/samp 
semop          1   1     26.81363          193        0      500 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     25.66368                25.66368
#                    max     38.26963                29.16781
#                   mean     27.19121                26.94183
#                 median     26.90579                26.81363
#                 stddev      1.50668                 0.82618
#         standard error      0.10601                 0.05947
#   99% confidence level      0.24658                 0.13833
#                   skew      3.45321                 0.62412
#               kurtosis     17.66429                -0.38079
#       time correlation     -0.00783                -0.00369
#
#           elasped time      2.76629
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 19     25.00000 |******                              25.84054
#                 88     26.00000 |********************************    26.43559
#                 62     27.00000 |**********************              27.39873
#                 14     28.00000 |*****                               28.24910
#
#                 10        > 95% |***                                 28.82630
#
#        mean of 95%     26.83886
#          95th %ile     28.54573
 for      2.79378 seconds
 
Running:           sigaction# bin/sigaction -E -C 200 -L -S -W -N sigaction -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
sigaction      1   1     15.66602          187        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.33296                15.33296
#                    max     19.03088                16.76989
#                   mean     15.89886                15.75962
#                 median     15.67984                15.66602
#                 stddev      0.61482                 0.33946
#         standard error      0.04326                 0.02482
#   99% confidence level      0.10062                 0.05774
#                   skew      2.38808                 1.33020
#               kurtosis      6.65682                 0.89709
#       time correlation     -0.00285                -0.00081
#
#           elasped time      3.21745
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                153     15.00000 |********************************    15.61900
#                 24     16.00000 |*****                               16.28609
#
#                 10        > 95% |**                                  16.64755
#
#        mean of 95%     15.70945
#          95th %ile     16.55587
 for      3.24352 seconds
Running:              signal# bin/signal -E -C 200 -L -S -W -N signal -I 500 
             prc thr   usecs/call      samples   errors cnt/samp 
signal         1   1    106.37982          181        0      200 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    104.36894               104.36894
#                    max    148.82462               110.60894
#                   mean    107.86581               106.67244
#                 median    106.59870               106.37982
#                 stddev      4.64074                 1.33154
#         standard error      0.32652                 0.09897
#   99% confidence level      0.75949                 0.23021
#                   skew      4.82252                 0.87732
#               kurtosis     32.10596                 0.35641
#       time correlation     -0.01340                -0.00143
#
#           elasped time      4.36452
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          196
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  8    104.00000 |****                               104.75518
#                 55    105.00000 |********************************   105.50484
#                 54    106.00000 |*******************************    106.41699
#                 35    107.00000 |********************               107.38268
#                 15    108.00000 |********                           108.37227
#                  4    109.00000 |**                                 109.18814
#
#                 10        > 95% |*****                              109.96574
#
#        mean of 95%    106.47985
#          95th %ile    109.23422
 for      4.39069 seconds
Running:         sigprocmask# bin/sigprocmask -E -C 200 -L -S -W -N sigprocmask -I 100 
             prc thr   usecs/call      samples   errors cnt/samp 
sigprocmask    1   1     14.86985          182        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     14.43183                14.43183
#                    max     17.84790                15.65782
#                   mean     15.07877                14.92729
#                 median     14.90390                14.86985
#                 stddev      0.55676                 0.24998
#         standard error      0.03917                 0.01853
#   99% confidence level      0.09112                 0.04310
#                   skew      2.60405                 0.91601
#               kurtosis      7.95300                 0.21706
#       time correlation     -0.00320                -0.00058
#
#           elasped time      3.05208
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                130     14.00000 |********************************    14.79531
#                 42     15.00000 |**********                          15.19396
#
#                 10        > 95% |**                                  15.52303
#
#        mean of 95%     14.89266
#          95th %ile     15.42383
 for      3.07681 seconds
 
Running:          pthread_16# bin/pthread_create -E -C 200 -L -S -W -N pthread_16 -B 16 
             prc thr   usecs/call      samples   errors cnt/samp 
pthread_16     1   1    347.12631          198        0       16 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    310.98231               310.98231
#                    max    738.11831               392.61431
#                   mean    349.58398               346.47120
#                 median    347.30231               347.12631
#                 stddev     33.64148                16.69645
#         standard error      2.36701                 1.18657
#   99% confidence level      5.50566                 2.75995
#                   skew      7.83133                 0.20961
#               kurtosis     86.00610                -0.37145
#       time correlation     -0.07685                -0.00116
#
#           elasped time      2.91212
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          155
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    309.00000 |**                                 310.98231
#                  0    312.00000 |                                           -
#                  7    315.00000 |**************                     316.73317
#                  4    318.00000 |********                           319.47831
#                  4    321.00000 |********                           322.43031
#                 13    324.00000 |***************************        325.21124
#                  7    327.00000 |**************                     328.54346
#                  9    330.00000 |*******************                331.60098
#                 12    333.00000 |*************************          334.65031
#                 15    336.00000 |********************************   337.44418
#                  8    339.00000 |*****************                  339.50831
#                 11    342.00000 |***********************            343.44340
#                 15    345.00000 |********************************   346.78498
#                 15    348.00000 |********************************   349.84738
#                  9    351.00000 |*******************                352.87387
#                 11    354.00000 |***********************            355.14959
#                 14    357.00000 |*****************************      358.36288
#                 14    360.00000 |*****************************      361.51260
#                  5    363.00000 |**********                         364.22391
#                  7    366.00000 |**************                     367.61088
#                  7    369.00000 |**************                     370.40174
#
#                 10        > 95% |*********************              382.47191
#
#        mean of 95%    344.55627
#          95th %ile    374.05431
 for      2.94054 seconds
Running:          pthread_32# bin/pthread_create -E -C 200 -L -S -W -N pthread_32 -B 32 
             prc thr   usecs/call      samples   errors cnt/samp 
pthread_32     1   1    364.96253          196        0       32 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    335.70653               335.70653
#                    max    527.65053               402.33853
#                   mean    369.24827               366.69343
#                 median    365.90653               364.96253
#                 stddev     21.68896                14.40105
#         standard error      1.52603                 1.02865
#   99% confidence level      3.54955                 2.39263
#                   skew      3.15896                 0.39036
#               kurtosis     17.76460                -0.28570
#       time correlation     -0.02113                -0.00363
#
#           elasped time      6.44831
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          175
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    334.00000 |**                                 335.70653
#                  1    336.00000 |**                                 337.61853
#                  2    338.00000 |****                               338.59053
#                  1    340.00000 |**                                 341.33853
#                  2    342.00000 |****                               343.18253
#                  4    344.00000 |*********                          345.36853
#                  6    346.00000 |*************                      346.66653
#                  7    348.00000 |****************                   348.98653
#                  2    350.00000 |****                               350.96653
#                 10    352.00000 |**********************             353.12653
#                 12    354.00000 |***************************        355.11186
#                 12    356.00000 |***************************        357.10986
#                  8    358.00000 |******************                 359.10853
#                 13    360.00000 |*****************************      360.99207
#                 11    362.00000 |*************************          363.32326
#                 10    364.00000 |**********************             364.84173
#                  9    366.00000 |********************               367.14920
#                 14    368.00000 |********************************   369.23796
#                 10    370.00000 |**********************             371.07133
#                  8    372.00000 |******************                 372.87653
#                  6    374.00000 |*************                      375.13453
#                  5    376.00000 |***********                        376.87453
#                  6    378.00000 |*************                      379.09453
#                  2    380.00000 |****                               381.75853
#                  7    382.00000 |****************                   382.99225
#                  7    384.00000 |****************                   384.78653
#                  3    386.00000 |******                             386.42120
#                  2    388.00000 |****                               388.38653
#                  3    390.00000 |******                             391.05586
#                  2    392.00000 |****                               392.47853
#
#                 10        > 95% |**********************             398.94493
#
#        mean of 95%    364.95948
#          95th %ile    394.52253
 for      6.46230 seconds
Running:         pthread_128# bin/pthread_create -E -C 200 -L -S -W -N pthread_128 -B 128 
             prc thr   usecs/call      samples   errors cnt/samp 
pthread_128    1   1    365.61662          200        0      128 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    339.03863               339.03863
#                    max    456.55262               394.37263
#                   mean    364.87176               364.05877
#                 median    365.66262               365.61662
#                 stddev     15.95412                13.74472
#         standard error      1.12253                 0.97190
#   99% confidence level      2.61100                 2.26064
#                   skew      1.34772                 0.13491
#               kurtosis      5.34099                -1.13749
#       time correlation      0.07238                 0.08041
#
#           elasped time     28.22340
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          176
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    338.00000 |**                                 339.03863
#                  3    340.00000 |******                             340.73863
#                  3    342.00000 |******                             342.75396
#                  9    344.00000 |*******************                345.22085
#                 11    346.00000 |***********************            347.11662
#                 15    348.00000 |********************************   348.89916
#                 12    350.00000 |*************************          350.98663
#                 11    352.00000 |***********************            352.87481
#                  9    354.00000 |*******************                355.00440
#                  8    356.00000 |*****************                  356.77688
#                  3    358.00000 |******                             359.34796
#                  7    360.00000 |**************                     360.97177
#                  6    362.00000 |************                       363.36163
#                  6    364.00000 |************                       365.34129
#                  8    366.00000 |*****************                  366.92713
#                 11    368.00000 |***********************            368.99008
#                 12    370.00000 |*************************          371.04563
#                  8    372.00000 |*****************                  373.08013
#                 13    374.00000 |***************************        374.88462
#                  9    376.00000 |*******************                376.92951
#                  7    378.00000 |**************                     379.16720
#                  8    380.00000 |*****************                  380.82412
#                  3    382.00000 |******                             383.19463
#                  4    384.00000 |********                           384.76862
#                  3    386.00000 |******                             386.72463
#
#                 10        > 95% |*********************              389.67422
#
#        mean of 95%    362.71059
#          95th %ile    387.47463
 for     28.23221 seconds
Running:         pthread_512# bin/pthread_create -E -C 200 -L -S -W -N pthread_512 -B 512 
             prc thr   usecs/call      samples   errors cnt/samp 
pthread_512    1   1    365.24367          199        0      512 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    354.17167               354.17167
#                    max    406.02117               380.19117
#                   mean    366.22526               365.84493
#                 median    365.32617               365.24367
#                 stddev      6.27789                 5.34794
#         standard error      0.44171                 0.37911
#   99% confidence level      1.02742                 0.88180
#                   skew      1.56715                 0.33138
#               kurtosis      7.01012                -0.35171
#       time correlation     -0.04295                -0.03652
#
#           elasped time    117.07067
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    354.00000 |**                                 354.17167
#                  2    355.00000 |****                               355.69792
#                  5    356.00000 |**********                         356.55667
#                  4    357.00000 |********                           357.69292
#                  5    358.00000 |**********                         358.62677
#                 13    359.00000 |**************************         359.64586
#                  9    360.00000 |******************                 360.51895
#                 14    361.00000 |****************************       361.45910
#                 10    362.00000 |********************               362.56047
#                 16    363.00000 |********************************   363.71102
#                 16    364.00000 |********************************   364.45383
#                 16    365.00000 |********************************   365.48202
#                  9    366.00000 |******************                 366.54228
#                  8    367.00000 |****************                   367.35436
#                 14    368.00000 |****************************       368.51603
#                 14    369.00000 |****************************       369.44185
#                 12    370.00000 |************************           370.49221
#                  3    371.00000 |******                             371.26651
#                  8    372.00000 |****************                   372.34080
#                  6    373.00000 |************                       373.78109
#                  4    374.00000 |********                           374.55867
#
#                 10        > 95% |********************               377.79572
#
#        mean of 95%    365.21262
#          95th %ile    375.39417
 for    117.08469 seconds
 
Running:             fork_10# bin/fork -E -C 200 -L -S -W -N fork_10 -B 10 
             prc thr   usecs/call      samples   errors cnt/samp 
fork_10        1   1    634.98970          197        0       10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    564.38490               564.38490
#                    max    985.09530               770.87450
#                   mean    647.38099               641.99318
#                 median    636.88410               634.98970
#                 stddev     59.32374                48.02601
#         standard error      4.17400                 3.42171
#   99% confidence level      9.70873                 7.95890
#                   skew      1.71495                 0.68247
#               kurtosis      5.35005                -0.25278
#       time correlation     -0.10386                -0.06280
#
#           elasped time      1.72106
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          183
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    564.00000 |*****                              565.91237
#                  1    570.00000 |*                                  575.70010
#                  6    576.00000 |***********                        578.47343
#                 11    582.00000 |********************               585.36759
#                 10    588.00000 |******************                 591.32890
#                 17    594.00000 |********************************   596.81709
#                 12    600.00000 |**********************             604.06277
#                  7    606.00000 |*************                      609.50673
#                  6    612.00000 |***********                        613.76303
#                  9    618.00000 |****************                   621.42739
#                  9    624.00000 |****************                   626.39379
#                  8    630.00000 |***************                    632.69530
#                  9    636.00000 |****************                   638.12428
#                  9    642.00000 |****************                   644.68072
#                  7    648.00000 |*************                      650.14124
#                 10    654.00000 |******************                 656.64986
#                  7    660.00000 |*************                      663.29599
#                  9    666.00000 |****************                   669.00641
#                  5    672.00000 |*********                          674.39834
#                  8    678.00000 |***************                    680.49690
#                  1    684.00000 |*                                  685.26810
#                  2    690.00000 |***                                692.78170
#                  4    696.00000 |*******                            699.37370
#                  2    702.00000 |***                                704.32730
#                  4    708.00000 |*******                            710.93850
#                  6    714.00000 |***********                        715.76197
#                  2    720.00000 |***                                723.47610
#                  1    726.00000 |*                                  730.58010
#                  2    732.00000 |***                                733.69050
#
#                 10        > 95% |******************                 753.72762
#
#        mean of 95%    636.01808
#          95th %ile    734.26650
 for      1.74659 seconds
Running:            fork_100# bin/fork -E -C 200 -L -S -W -N fork_100 -B 100 -C 100 
             prc thr   usecs/call      samples   errors cnt/samp 
fork_100       1   1    598.31896          101        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    558.80792               558.80792
#                    max    685.78904               672.66904
#                   mean    605.03120               604.23162
#                 median    598.72856               598.31896
#                 stddev     26.12461                24.96910
#         standard error      2.58672                 2.48452
#   99% confidence level      6.01671                 5.77899
#                   skew      0.82291                 0.71202
#               kurtosis      0.33085                 0.03274
#       time correlation     -0.04153                -0.01114
#
#           elasped time      7.47952
#      number of samples          101
#     number of outliers            1
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    556.00000 |***                                558.80792
#                  1    560.00000 |***                                561.27064
#                  1    564.00000 |***                                566.28824
#                  3    568.00000 |**********                         570.62829
#                  4    572.00000 |**************                     574.89304
#                  4    576.00000 |**************                     577.07352
#                  9    580.00000 |********************************   582.32493
#                  5    584.00000 |*****************                  586.27262
#                  9    588.00000 |********************************   589.93809
#                  8    592.00000 |****************************       593.74936
#                  8    596.00000 |****************************       597.62584
#                  4    600.00000 |**************                     603.02616
#                  8    604.00000 |****************************       605.83608
#                  1    608.00000 |***                                609.67768
#                  5    612.00000 |*****************                  613.86942
#                  3    616.00000 |**********                         617.07181
#                  6    620.00000 |*********************              622.02157
#                  4    624.00000 |**************                     626.86232
#                  4    628.00000 |**************                     630.08024
#                  2    632.00000 |*******                            632.99928
#                  1    636.00000 |***                                637.80952
#                  3    640.00000 |**********                         641.43875
#                  1    644.00000 |***                                647.12792
#
#                  6        > 95% |*********************              664.05976
#
#        mean of 95%    600.45300
#          95th %ile    652.54744
 for      7.49244 seconds
Running:           fork_1000# bin/fork -E -C 200 -L -S -W -N fork_1000 -B 1000 -C 50 
             prc thr   usecs/call      samples   errors cnt/samp 
fork_1000      1   1   1059.40566           51        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    761.45570              1011.83087
#                    max   1262.93590              1262.93590
#                   mean   1086.77728              1093.15613
#                 median   1059.40566              1059.40566
#                 stddev     83.37698                70.23226
#         standard error     11.56231                 9.83448
#   99% confidence level     26.89393                22.87501
#                   skew     -0.36400                 1.05991
#               kurtosis      3.10670                -0.09310
#       time correlation      0.75994                 0.04007
#
#           elasped time     65.72755
#      number of samples           51
#     number of outliers            1
#      getnsecs overhead          169
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1008.00000 |****                              1011.83087
#                  1   1016.00000 |****                              1016.09788
#                  3   1024.00000 |*************                     1028.30089
#                  7   1032.00000 |********************************  1035.72635
#                  6   1040.00000 |***************************       1044.35414
#                  2   1048.00000 |*********                         1050.85833
#                  6   1056.00000 |***************************       1058.00265
#                  2   1064.00000 |*********                         1070.89033
#                  1   1072.00000 |****                              1076.66185
#                  6   1080.00000 |***************************       1084.15049
#                  0   1088.00000 |                                           -
#                  1   1096.00000 |****                              1097.17385
#                  0   1104.00000 |                                           -
#                  0   1112.00000 |                                           -
#                  0   1120.00000 |                                           -
#                  0   1128.00000 |                                           -
#                  2   1136.00000 |*********                         1139.71529
#                  2   1144.00000 |*********                         1146.09532
#                  2   1152.00000 |*********                         1154.67273
#                  1   1160.00000 |****                              1167.31375
#                  1   1168.00000 |****                              1168.62191
#                  0   1176.00000 |                                           -
#                  0   1184.00000 |                                           -
#                  2   1192.00000 |*********                         1197.27791
#                  0   1200.00000 |                                           -
#                  0   1208.00000 |                                           -
#                  0   1216.00000 |                                           -
#                  1   1224.00000 |****                              1227.56386
#                  1   1232.00000 |****                              1239.50370
#
#                  3        > 95% |*************                     1257.71486
#
#        mean of 95%   1082.87121
#          95th %ile   1252.17494
 for     65.74254 seconds
 
Running:             exit_10# bin/exit -E -C 200 -L -S -W -N exit_10 -B 10 
             prc thr   usecs/call      samples   errors cnt/samp 
exit_10        1   1    317.60200          199        0       10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    245.69160               245.69160
#                    max    446.47240               415.98280
#                   mean    322.33534               320.62820
#                 median    318.88200               317.60200
#                 stddev     34.91990                32.24443
#         standard error      2.45696                 2.28575
#   99% confidence level      5.71488                 5.31665
#                   skew      0.52873                 0.17719
#               kurtosis      0.76631                -0.08273
#       time correlation     -0.04239                -0.02597
#
#           elasped time      1.73317
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          172
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4    245.00000 |*****                              247.25960
#                  0    250.00000 |                                           -
#                  1    255.00000 |*                                  255.67560
#                  2    260.00000 |**                                 260.23240
#                  5    265.00000 |******                             267.74344
#                  3    270.00000 |****                               271.84627
#                  3    275.00000 |****                               278.32307
#                  7    280.00000 |*********                          281.53891
#                  8    285.00000 |***********                        286.75720
#                  5    290.00000 |******                             292.88776
#                 11    295.00000 |***************                    297.18251
#                 10    300.00000 |*************                      302.66952
#                 15    305.00000 |********************               307.69480
#                 23    310.00000 |********************************   312.58440
#                  8    315.00000 |***********                        318.37640
#                  9    320.00000 |************                       323.39613
#                 19    325.00000 |**************************         327.45531
#                  4    330.00000 |*****                              332.95560
#                  9    335.00000 |************                       337.60413
#                 12    340.00000 |****************                   343.32573
#                  6    345.00000 |********                           347.04200
#                  2    350.00000 |**                                 354.08200
#                  7    355.00000 |*********                          357.68429
#                  7    360.00000 |*********                          362.92497
#                  5    365.00000 |******                             366.95880
#                  4    370.00000 |*****                              371.68200
#
#                 10        > 95% |*************                      389.51752
#
#        mean of 95%    316.98327
#          95th %ile    375.27880
 for      1.75890 seconds
Running:            exit_100# bin/exit -E -C 200 -L -S -W -N exit_100 -B 100 
             prc thr   usecs/call      samples   errors cnt/samp 
exit_100       1   1    194.27663          201        0      100 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    157.63791               157.63791
#                    max    255.93679               242.25871
#                   mean    196.73983               196.44532
#                 median    194.35855               194.27663
#                 stddev     18.34906                17.90985
#         standard error      1.29104                 1.26326
#   99% confidence level      3.00295                 2.93835
#                   skew      0.57671                 0.49271
#               kurtosis      0.07076                -0.16292
#       time correlation      0.09752                 0.09296
#
#           elasped time     15.03411
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          177
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    156.00000 |*                                  157.63791
#                  0    159.00000 |                                           -
#                  1    162.00000 |*                                  162.90639
#                  6    165.00000 |********                           166.62948
#                  5    168.00000 |*******                            169.57161
#                  6    171.00000 |********                           171.86639
#                  6    174.00000 |********                           176.18255
#                 10    177.00000 |**************                     178.21647
#                  6    180.00000 |********                           182.00271
#                 22    183.00000 |********************************   184.64347
#                 12    186.00000 |*****************                  187.98842
#                 19    189.00000 |***************************        190.23385
#                 11    192.00000 |****************                   193.81630
#                 14    195.00000 |********************               196.80134
#                  9    198.00000 |*************                      199.24417
#                 12    201.00000 |*****************                  202.51194
#                  9    204.00000 |*************                      205.06191
#                  7    207.00000 |**********                         208.74026
#                 11    210.00000 |****************                   211.02601
#                  7    213.00000 |**********                         214.79393
#                  4    216.00000 |*****                              217.92335
#                  4    219.00000 |*****                              220.20815
#                  0    222.00000 |                                           -
#                  5    225.00000 |*******                            226.91817
#                  3    228.00000 |****                               229.25050
#
#                 11        > 95% |****************                   236.85502
#
#        mean of 95%    194.10581
#          95th %ile    231.03823
 for     15.04658 seconds
Running:           exit_1000# bin/exit -E -C 200 -L -S -W -N exit_1000 -B 1000 -C 50 
             prc thr   usecs/call      samples   errors cnt/samp 
exit_1000      1   1    745.42294           52        0     1000 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    325.26806               325.26806
#                    max    848.52285               848.52285
#                   mean    687.34241               687.34241
#                 median    745.42294               745.42294
#                 stddev    148.02677               148.02677
#         standard error     20.52762                20.52762
#   99% confidence level     47.74724                47.74724
#                   skew     -1.76058                -1.76058
#               kurtosis      1.57430                 1.57430
#       time correlation      1.02233                 1.02233
#
#           elasped time     63.38438
#      number of samples           52
#     number of outliers            0
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    320.00000 |***********                        331.69462
#                  0    340.00000 |                                           -
#                  0    360.00000 |                                           -
#                  0    380.00000 |                                           -
#                  0    400.00000 |                                           -
#                  0    420.00000 |                                           -
#                  0    440.00000 |                                           -
#                  0    460.00000 |                                           -
#                  0    480.00000 |                                           -
#                  0    500.00000 |                                           -
#                  0    520.00000 |                                           -
#                  0    540.00000 |                                           -
#                  0    560.00000 |                                           -
#                  0    580.00000 |                                           -
#                  3    600.00000 |****                               613.88528
#                  0    620.00000 |                                           -
#                  1    640.00000 |*                                  641.92086
#                  0    660.00000 |                                           -
#                  1    680.00000 |*                                  685.09885
#                  0    700.00000 |                                           -
#                  7    720.00000 |***********                        734.64801
#                 20    740.00000 |********************************   748.28081
#                 10    760.00000 |****************                   764.68853
#
#                  3        > 95% |****                               832.07656
#
#        mean of 95%    678.48113
#          95th %ile    818.00176
 for     63.39725 seconds
 
Running:      exit_10_nolibc# bin/exit -E -C 200 -L -S -W -N exit_10_nolibc -e -B 10 
             prc thr   usecs/call      samples   errors cnt/samp 
exit_10_nolibc   1   1    242.59630          201        0       10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    177.80270               177.80270
#                    max    371.08270               313.96910
#                   mean    241.53022               240.88569
#                 median    242.87790               242.59630
#                 stddev     30.63542                29.30674
#         standard error      2.15550                 2.06714
#   99% confidence level      5.01369                 4.80816
#                   skew      0.34844                 0.03588
#               kurtosis      0.73001                -0.42357
#       time correlation     -0.01028                 0.00084
#
#           elasped time      1.57518
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          149
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    176.00000 |****                               178.58350
#                  1    180.00000 |**                                 181.79630
#                  5    184.00000 |***********                        186.57838
#                  3    188.00000 |******                             189.61283
#                  5    192.00000 |***********                        194.77038
#                  6    196.00000 |*************                      197.99683
#                  4    200.00000 |*********                          201.88590
#                  3    204.00000 |******                             204.98990
#                  4    208.00000 |*********                          210.46190
#                  9    212.00000 |********************               213.60003
#                  6    216.00000 |*************                      217.52963
#                 10    220.00000 |**********************             221.90894
#                 10    224.00000 |**********************             225.38542
#                  5    228.00000 |***********                        230.07278
#                  9    232.00000 |********************               233.88092
#                 10    236.00000 |**********************             238.03694
#                 14    240.00000 |********************************   241.99653
#                 12    244.00000 |***************************        246.29977
#                 11    248.00000 |*************************          249.17550
#                 11    252.00000 |*************************          254.04881
#                 12    256.00000 |***************************        258.19950
#                  9    260.00000 |********************               262.45337
#                  4    264.00000 |*********                          265.36110
#                  9    268.00000 |********************               270.68519
#                  5    272.00000 |***********                        274.10478
#                  5    276.00000 |***********                        278.66670
#                  4    280.00000 |*********                          281.90510
#                  0    284.00000 |                                           -
#                  2    288.00000 |****                               288.72750
#
#                 11        > 95% |*************************          300.81070
#
#        mean of 95%    237.41634
#          95th %ile    292.08110
 for      1.59587 seconds
 
Running:                exec# bin/exec -E -C 200 -L -S -W -N exec -B 10 
             prc thr   usecs/call      samples   errors cnt/samp 
exec           1   1   5652.17670          200        0       10 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   5243.37030              5243.37030
#                    max   8592.89990              6066.97350
#                   mean   5681.86358              5664.87136
#                 median   5652.58630              5652.17670
#                 stddev    259.75573               155.18891
#         standard error     18.27635                10.97351
#   99% confidence level     42.51079                25.52439
#                   skew      7.00506                 0.34971
#               kurtosis     75.49075                -0.20403
#       time correlation     -0.62594                -0.24080
#
#           elasped time     11.51154
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   5220.00000 |*                                 5243.37030
#                  0   5250.00000 |                                           -
#                  0   5280.00000 |                                           -
#                  2   5310.00000 |***                               5331.66470
#                  0   5340.00000 |                                           -
#                  2   5370.00000 |***                               5386.17990
#                  0   5400.00000 |                                           -
#                 12   5430.00000 |********************              5444.98097
#                  3   5460.00000 |*****                             5465.80870
#                 14   5490.00000 |***********************           5504.37510
#                 14   5520.00000 |***********************           5539.12161
#                 14   5550.00000 |***********************           5567.87590
#                 19   5580.00000 |********************************  5592.36567
#                 15   5610.00000 |*************************         5626.06641
#                 17   5640.00000 |****************************      5658.31317
#                 13   5670.00000 |*********************             5688.27073
#                 13   5700.00000 |*********************             5714.06765
#                 14   5730.00000 |***********************           5741.07087
#                  8   5760.00000 |*************                     5771.95270
#                  5   5790.00000 |********                          5804.03590
#                  6   5820.00000 |**********                        5842.49563
#                  4   5850.00000 |******                            5869.20710
#                  6   5880.00000 |**********                        5892.48817
#                  5   5910.00000 |********                          5922.26182
#                  3   5940.00000 |*****                             5954.67483
#
#                 10        > 95% |****************                  5999.82726
#
#        mean of 95%   5647.24210
#          95th %ile   5965.77670
 for     11.53517 seconds
 
Running:              system# bin/system -E -C 200 -L -S -W -N system -I 1000000 
             prc thr   usecs/call      samples   errors cnt/samp  command
system         1   1  44190.81500          196        0        1     A=$$
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min  41608.79900             41608.79900
#                    max 149948.76700             47149.91900
#                   mean  45131.54783             44254.61647
#                 median  44207.71100             44190.81500
#                 stddev   7938.46537              1094.06844
#         standard error    558.54847                78.14775
#   99% confidence level   1299.18375               181.77166
#                   skew     11.69050                 0.16714
#               kurtosis    148.44774                -0.29146
#       time correlation      0.98780                 3.78715
#
#           elasped time      9.12408
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          161
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1  41600.00000 |*                                41608.79900
#                  1  41800.00000 |*                                41834.84700
#                  4  42000.00000 |*******                          42071.58300
#                  1  42200.00000 |*                                42290.01500
#                  3  42400.00000 |*****                            42489.09767
#                 11  42600.00000 |********************             42694.12264
#                  1  42800.00000 |*                                42828.89500
#                  8  43000.00000 |***************                  43106.33500
#                 13  43200.00000 |************************         43333.27408
#                 17  43400.00000 |******************************** 43512.52041
#                  8  43600.00000 |***************                  43692.83100
#                 17  43800.00000 |******************************** 43906.59476
#                 15  44000.00000 |****************************     44081.70780
#                 10  44200.00000 |******************               44304.96540
#                 14  44400.00000 |**************************       44492.73043
#                 13  44600.00000 |************************         44701.35777
#                 10  44800.00000 |******************               44896.65820
#                 11  45000.00000 |********************             45107.08555
#                  6  45200.00000 |***********                      45260.34033
#                  6  45400.00000 |***********                      45469.36433
#                 10  45600.00000 |******************               45708.56220
#                  5  45800.00000 |*********                        45876.83100
#                  1  46000.00000 |*                                46082.91100
#
#                 10        > 95% |******************               46573.58620
#
#        mean of 95%  44129.94068
#          95th %ile  46137.95100
 for      9.15372 seconds
 
Running:             recurse# bin/recurse -E -C 200 -L -S -W -N recurse -B 512 
             prc thr   usecs/call      samples   errors cnt/samp 
recurse        1   1      2.03268          191        0      512 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      1.96618                 1.96618
#                    max      3.59318                 2.23568
#                   mean      2.09890                 2.04620
#                 median      2.03668                 2.03268
#                 stddev      0.24789                 0.06323
#         standard error      0.01744                 0.00457
#   99% confidence level      0.04057                 0.01064
#                   skew      4.32893                 1.04933
#               kurtosis     19.56180                 0.43573
#       time correlation      0.00015                -0.00001
#
#           elasped time      0.22138
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 57      1.00000 |**************                       1.98512
#                124      2.00000 |********************************     2.06115
#
#                 10        > 95% |**                                   2.20888
#
#        mean of 95%      2.03721
#          95th %ile      2.18718
 for      0.24758 seconds
 
Running:            read_t1k# bin/read -E -C 200 -L -S -W -N read_t1k -s 1k -B 800 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t1k       1   1     16.51213          192        0      800     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     16.06605                16.06605
#                    max     19.97869                17.45869
#                   mean     16.66425                16.58288
#                 median     16.55341                16.51213
#                 stddev      0.49027                 0.29936
#         standard error      0.03450                 0.02160
#   99% confidence level      0.08024                 0.05025
#                   skew      2.87782                 0.82114
#               kurtosis     12.74429                 0.38252
#       time correlation     -0.00148                -0.00075
#
#           elasped time      2.70031
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          155
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                173     16.00000 |********************************    16.51436
#                  9     17.00000 |*                                   17.06548
#
#                 10        > 95% |*                                   17.33401
#
#        mean of 95%     16.54161
#          95th %ile     17.15117
 for      2.72504 seconds
Running:           read_t10k# bin/read -E -C 200 -L -S -W -N read_t10k -s 10k -B 200 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t10k      1   1     40.72991          184        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     39.56896                39.56896
#                    max     51.52287                42.75871
#                   mean     41.21452                40.83529
#                 median     40.80416                40.72991
#                 stddev      1.56369                 0.64319
#         standard error      0.11002                 0.04742
#   99% confidence level      0.25591                 0.11029
#                   skew      3.63346                 0.88973
#               kurtosis     17.19232                 0.56984
#       time correlation     -0.00850                -0.00047
#
#           elasped time      1.67096
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          193
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  8     39.00000 |**                                  39.81696
#                116     40.00000 |********************************    40.52830
#                 46     41.00000 |************                        41.32801
#                  4     42.00000 |*                                   42.07615
#
#                 10        > 95% |**                                  42.44806
#
#        mean of 95%     40.74260
#          95th %ile     42.12383
 for      1.68064 seconds
Running:          read_t100k# bin/read -E -C 200 -L -S -W -N read_t100k -s 100k -B 20 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_t100k     1   1    297.23390          187        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    286.99390               286.99390
#                    max    404.79230               322.24510
#                   mean    302.86032               299.39135
#                 median    298.09150               297.23390
#                 stddev     15.73705                 8.33821
#         standard error      1.10726                 0.60975
#   99% confidence level      2.57548                 1.41828
#                   skew      2.85061                 1.02944
#               kurtosis     11.43801                 0.36457
#       time correlation     -0.12048                -0.06228
#
#           elasped time      1.22875
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          154
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    286.00000 |**                                 287.36510
#                 12    288.00000 |*************                      289.17950
#                 18    290.00000 |*******************                291.17452
#                 21    292.00000 |***********************            292.91116
#                 29    294.00000 |********************************   295.12146
#                 18    296.00000 |*******************                296.94448
#                 21    298.00000 |***********************            298.80160
#                 10    300.00000 |***********                        300.98558
#                 14    302.00000 |***************                    303.00396
#                  5    304.00000 |*****                              305.24158
#                  9    306.00000 |*********                          307.02021
#                  6    308.00000 |******                             308.76030
#                  2    310.00000 |**                                 311.31390
#                  3    312.00000 |***                                313.32777
#                  3    314.00000 |***                                314.91070
#                  4    316.00000 |****                               316.79550
#
#                 10        > 95% |***********                        320.22782
#
#        mean of 95%    298.21415
#          95th %ile    317.49630
 for      1.24029 seconds
 
Running:            read_u1k# bin/read -E -C 200 -L -S -W -N read_u1k -s 1k -B 500 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u1k       1   1     16.51780          171        0      500     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     16.13994                16.13994
#                    max     27.00202                17.25149
#                   mean     16.89719                16.56187
#                 median     16.57360                16.51780
#                 stddev      1.12364                 0.23911
#         standard error      0.07906                 0.01829
#   99% confidence level      0.18389                 0.04253
#                   skew      5.10002                 0.84342
#               kurtosis     35.25173                 0.39326
#       time correlation     -0.00376                -0.00118
#
#           elasped time      1.71238
#      number of samples          171
#     number of outliers           31
#      getnsecs overhead          174
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                160     16.00000 |********************************    16.52198
#                  2     17.00000 |*                                   17.00676
#
#                  9        > 95% |*                                   17.17219
#
#        mean of 95%     16.52796
#          95th %ile     17.05540
 for      1.72336 seconds
Running:           read_u10k# bin/read -E -C 200 -L -S -W -N read_u10k -s 10k -B 200 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u10k      1   1     33.61815          167        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     32.61847                32.61847
#                    max     45.49911                35.37815
#                   mean     34.47384                33.69981
#                 median     33.81399                33.61815
#                 stddev      2.08840                 0.57329
#         standard error      0.14694                 0.04436
#   99% confidence level      0.34178                 0.10319
#                   skew      2.88123                 0.63116
#               kurtosis      9.89187                -0.06207
#       time correlation     -0.01044                -0.00425
#
#           elasped time      1.39820
#      number of samples          167
#     number of outliers           35
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 14     32.00000 |****                                32.87895
#                107     33.00000 |********************************    33.48547
#                 37     34.00000 |***********                         34.30132
#
#                  9        > 95% |**                                  35.05203
#
#        mean of 95%     33.62278
#          95th %ile     34.70871
 for      1.40846 seconds
Running:          read_u100k# bin/read -E -C 200 -L -S -W -N read_u100k -s 100k -B 20 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_u100k     1   1    218.74195          178        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    207.43955               207.43955
#                    max    354.84435               234.53715
#                   mean    225.60218               219.33262
#                 median    219.63795               218.74195
#                 stddev     22.55038                 5.09026
#         standard error      1.58664                 0.38153
#   99% confidence level      3.69052                 0.88744
#                   skew      3.89207                 0.56277
#               kurtosis     16.01769                 0.40611
#       time correlation     -0.13496                -0.03915
#
#           elasped time      0.91717
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          201
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    207.00000 |*                                  207.43955
#                  1    208.00000 |*                                  208.68115
#                  1    209.00000 |*                                  209.74355
#                  3    210.00000 |*****                              210.68648
#                  5    211.00000 |********                           211.55091
#                  4    212.00000 |******                             212.57555
#                  9    213.00000 |***************                    213.42426
#                  8    214.00000 |*************                      214.63155
#                 16    215.00000 |**************************         215.63555
#                 14    216.00000 |***********************            216.66378
#                 11    217.00000 |******************                 217.46660
#                 19    218.00000 |********************************   218.43071
#                 17    219.00000 |****************************       219.55437
#                 11    220.00000 |******************                 220.47926
#                 12    221.00000 |********************               221.53768
#                 11    222.00000 |******************                 222.50748
#                  4    223.00000 |******                             223.45555
#                  9    224.00000 |***************                    224.50195
#                  7    225.00000 |***********                        225.61555
#                  1    226.00000 |*                                  226.58835
#                  2    227.00000 |***                                227.38835
#                  3    228.00000 |*****                              228.75582
#
#                  9        > 95% |***************                    231.84062
#
#        mean of 95%    218.66651
#          95th %ile    229.48115
 for      0.93032 seconds
 
Running:            read_z1k# bin/read -E -C 200 -L -S -W -N read_z1k -s 1k -B 600 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z1k       1   1     12.05136          188        0      600     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.70107                11.70107
#                    max     16.22971                13.06640
#                   mean     12.25816                12.14511
#                 median     12.06331                12.05136
#                 stddev      0.55816                 0.31065
#         standard error      0.03927                 0.02266
#   99% confidence level      0.09135                 0.05270
#                   skew      3.15770                 1.35336
#               kurtosis     14.86247                 0.99673
#       time correlation     -0.00058                -0.00125
#
#           elasped time      1.49086
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 68     11.00000 |*******************                 11.89823
#                110     12.00000 |********************************    12.22452
#
#                 10        > 95% |**                                  12.95039
#
#        mean of 95%     12.09987
#          95th %ile     12.86501
 for      1.50232 seconds
Running:           read_z10k# bin/read -E -C 200 -L -S -W -N read_z10k -s 10k -B 200 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z10k      1   1     24.46379          175        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     23.93899                23.93899
#                    max     30.53483                25.68363
#                   mean     24.96576                24.56310
#                 median     24.58923                24.46379
#                 stddev      1.18555                 0.39138
#         standard error      0.08342                 0.02959
#   99% confidence level      0.19402                 0.06882
#                   skew      2.42603                 0.74718
#               kurtosis      5.96666                -0.16238
#       time correlation     -0.00808                -0.00322
#
#           elasped time      1.01401
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          170
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     23.00000 |*                                   23.96886
#                144     24.00000 |********************************    24.44533
#                 19     25.00000 |****                                25.11194
#
#                  9        > 95% |**                                  25.48679
#
#        mean of 95%     24.51302
#          95th %ile     25.28427
 for      1.02635 seconds
Running:          read_z100k# bin/read -E -C 200 -L -S -W -N read_z100k -s 100k -B 40 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_z100k     1   1    162.89527          179        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    158.02488               158.02488
#                    max    194.39608               169.12248
#                   mean    164.94429               162.99035
#                 median    163.24728               162.89527
#                 stddev      6.26343                 2.28242
#         standard error      0.44069                 0.17060
#   99% confidence level      1.02505                 0.39681
#                   skew      2.50589                 0.27842
#               kurtosis      6.87946                -0.02853
#       time correlation     -0.04398                -0.01878
#
#           elasped time      1.33820
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10    158.00000 |*********                          158.62135
#                  3    159.00000 |**                                 159.55661
#                 17    160.00000 |****************                   160.36238
#                 30    161.00000 |*****************************      161.50050
#                 33    162.00000 |********************************   162.47365
#                 28    163.00000 |***************************        163.42807
#                 27    164.00000 |**************************         164.41089
#                 13    165.00000 |************                       165.42869
#                  9    166.00000 |********                           166.42096
#
#                  9        > 95% |********                           168.23785
#
#        mean of 95%    162.71254
#          95th %ile    167.19608
 for      1.35325 seconds
Running:         read_zw100k# bin/read -E -C 200 -L -S -W -N read_zw100k -s 100k -B 40 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
read_zw100k    1   1    167.17023          169        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    163.39423               163.39423
#                    max    205.84542               173.81983
#                   mean    169.85829               167.41002
#                 median    167.61822               167.17023
#                 stddev      6.57624                 2.17188
#         standard error      0.46270                 0.16707
#   99% confidence level      1.07625                 0.38860
#                   skew      2.44279                 0.57898
#               kurtosis      7.14357                 0.14290
#       time correlation     -0.03266                 0.00752
#
#           elasped time      1.37745
#      number of samples          169
#     number of outliers           33
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  6    163.00000 |*****                              163.66622
#                 14    164.00000 |************                       164.40634
#                 23    165.00000 |*********************              165.49398
#                 35    166.00000 |********************************   166.49457
#                 30    167.00000 |***************************        167.44351
#                 28    168.00000 |*************************          168.46783
#                 13    169.00000 |***********                        169.42992
#                  8    170.00000 |*******                            170.57343
#                  3    171.00000 |**                                 171.29609
#
#                  9        > 95% |********                           172.60738
#
#        mean of 95%    167.11766
#          95th %ile    171.69502
 for      1.38911 seconds
 
Running:           write_t1k# bin/write -E -C 200 -L -S -W -N write_t1k -s 1k -B 200 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t1k      1   1     28.17841          174        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     27.28881                27.28881
#                    max     36.60977                29.23441
#                   mean     28.63792                28.21181
#                 median     28.27953                28.17841
#                 stddev      1.29663                 0.37414
#         standard error      0.09123                 0.02836
#   99% confidence level      0.21220                 0.06597
#                   skew      3.05117                 0.29339
#               kurtosis     11.19272                -0.41899
#       time correlation     -0.00017                -0.00033
#
#           elasped time      1.16293
#      number of samples          174
#     number of outliers           28
#      getnsecs overhead          158
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 55     27.00000 |****************                    27.80034
#                110     28.00000 |********************************    28.35265
#
#                  9        > 95% |**                                  29.00486
#
#        mean of 95%     28.16855
#          95th %ile     28.87985
 for      1.18805 seconds
Running:          write_t10k# bin/write -E -C 200 -L -S -W -N write_t10k -s 10k -B 100 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t10k     1   1     75.66950          173        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     73.53702                73.53702
#                    max    117.48966                78.51878
#                   mean     77.01652                75.68992
#                 median     75.87686                75.66950
#                 stddev      4.86298                 0.95341
#         standard error      0.34216                 0.07249
#   99% confidence level      0.79586                 0.16860
#                   skew      5.25006                 0.44105
#               kurtosis     33.07711                 0.16495
#       time correlation     -0.01547                -0.00244
#
#           elasped time      1.56188
#      number of samples          173
#     number of outliers           29
#      getnsecs overhead          154
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     73.00000 |*                                   73.71110
#                 42     74.00000 |******************                  74.60960
#                 71     75.00000 |********************************    75.57208
#                 40     76.00000 |******************                  76.38848
#                  8     77.00000 |***                                 77.13830
#
#                  9        > 95% |****                                77.92856
#
#        mean of 95%     75.56707
#          95th %ile     77.34886
 for      1.57327 seconds
Running:         write_t100k# bin/write -E -C 200 -L -S -W -N write_t100k -s 100k -B 10 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_t100k    1   1    592.26500          187        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    574.49860               574.49860
#                    max    732.19460               616.17540
#                   mean    597.17158               593.24670
#                 median    593.26340               592.26500
#                 stddev     17.97605                 7.90860
#         standard error      1.26479                 0.57833
#   99% confidence level      2.94190                 1.34521
#                   skew      3.82179                 0.49498
#               kurtosis     20.55467                -0.02996
#       time correlation     -0.06356                -0.00560
#
#           elasped time      1.21175
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    574.00000 |*                                  574.49860
#                  1    576.00000 |*                                  576.08580
#                  2    578.00000 |**                                 579.38820
#                  5    580.00000 |******                             581.12388
#                  7    582.00000 |*********                          583.18066
#                 21    584.00000 |*****************************      585.10188
#                 15    586.00000 |********************               586.98287
#                 19    588.00000 |**************************         588.94508
#                 21    590.00000 |*****************************      591.13129
#                 14    592.00000 |*******************                593.16649
#                 23    594.00000 |********************************   594.94855
#                 13    596.00000 |******************                 597.05417
#                  7    598.00000 |*********                          599.35986
#                 13    600.00000 |******************                 601.04580
#                  4    602.00000 |*****                              602.88900
#                  7    604.00000 |*********                          605.12351
#                  4    606.00000 |*****                              606.50500
#
#                 10        > 95% |*************                      611.18852
#
#        mean of 95%    592.23304
#          95th %ile    607.98340
 for      1.22369 seconds
 
Running:           write_u1k# bin/write -E -C 200 -L -S -W -N write_u1k -s 1k -B 200 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u1k      1   1     31.24399          188        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     30.16367                30.16367
#                    max     56.92847                33.16911
#                   mean     31.72035                31.36061
#                 median     31.30415                31.24399
#                 stddev      2.11337                 0.62534
#         standard error      0.14870                 0.04561
#   99% confidence level      0.34587                 0.10608
#                   skew      8.76734                 0.79350
#               kurtosis     98.19336                 0.40087
#       time correlation     -0.01001                -0.00332
#
#           elasped time      1.28744
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          162
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 54     30.00000 |****************                    30.69947
#                107     31.00000 |********************************    31.40637
#                 17     32.00000 |*****                               32.25971
#
#                 10        > 95% |**                                  32.91273
#
#        mean of 95%     31.27342
#          95th %ile     32.66351
 for      1.29809 seconds
Running:          write_u10k# bin/write -E -C 200 -L -S -W -N write_u10k -s 10k -B 100 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u10k     1   1     82.76836          183        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     80.01636                80.01636
#                    max    123.97668                87.57860
#                   mean     84.58343                83.03593
#                 median     82.86052                82.76836
#                 stddev      6.24696                 1.56953
#         standard error      0.43953                 0.11602
#   99% confidence level      1.02236                 0.26987
#                   skew      4.47395                 0.87341
#               kurtosis     22.65896                 0.59038
#       time correlation     -0.01947                -0.00825
#
#           elasped time      1.71456
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 12     80.00000 |*****                               80.58127
#                 32     81.00000 |***************                     81.57316
#                 66     82.00000 |********************************    82.54870
#                 35     83.00000 |****************                    83.45342
#                 16     84.00000 |*******                             84.50068
#                  8     85.00000 |***                                 85.28772
#                  4     86.00000 |*                                   86.22436
#
#                 10        > 95% |****                                86.99646
#
#        mean of 95%     82.80700
#          95th %ile     86.50852
 for      1.72669 seconds
Running:         write_u100k# bin/write -E -C 200 -L -S -W -N write_u100k -s 100k -B 10 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_u100k    1   1    644.89880          180        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    622.98520               622.98520
#                    max    935.38200               681.96760
#                   mean    661.18420               646.80586
#                 median    646.89560               644.89880
#                 stddev     52.07759                12.33786
#         standard error      3.66417                 0.91961
#   99% confidence level      8.52285                 2.13901
#                   skew      3.66240                 0.59872
#               kurtosis     13.67729                 0.11257
#       time correlation     -0.27121                -0.04184
#
#           elasped time      1.34122
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          164
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    622.00000 |***                                623.38200
#                  3    624.00000 |*****                              625.22093
#                  4    626.00000 |*******                            627.35640
#                  3    628.00000 |*****                              628.48920
#                  5    630.00000 |*********                          630.96728
#                  4    632.00000 |*******                            633.34040
#                  8    634.00000 |***************                    635.08120
#                 17    636.00000 |********************************   636.90407
#                 13    638.00000 |************************           638.97732
#                 14    640.00000 |**************************         641.27274
#                 10    642.00000 |******************                 643.22968
#                 12    644.00000 |**********************             644.77293
#                  9    646.00000 |****************                   646.77898
#                 13    648.00000 |************************           649.32169
#                  9    650.00000 |****************                   650.93756
#                 10    652.00000 |******************                 653.06776
#                  8    654.00000 |***************                    655.15800
#                  3    656.00000 |*****                              656.74307
#                  8    658.00000 |***************                    658.69720
#                  5    660.00000 |*********                          661.34424
#                  3    662.00000 |*****                              663.41613
#                  4    664.00000 |*******                            664.95640
#                  1    666.00000 |*                                  666.78680
#                  2    668.00000 |***                                669.59000
#                  1    670.00000 |*                                  670.57560
#
#                  9        > 95% |****************                   676.85613
#
#        mean of 95%    645.22426
#          95th %ile    671.88120
 for      1.35316 seconds
 
Running:           write_n1k# bin/write -E -C 200 -L -S -W -N write_n1k -s 1k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n1k      1   1      0.96981          136        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.94677                 0.94677
#                    max      1.51970                 1.01077
#                   mean      1.04504                 0.97229
#                 median      0.97877                 0.96981
#                 stddev      0.13285                 0.01412
#         standard error      0.00935                 0.00121
#   99% confidence level      0.02174                 0.00282
#                   skew      1.88719                 0.65742
#               kurtosis      2.70773                 0.18422
#       time correlation     -0.00058                 0.00003
#
#           elasped time      0.21485
#      number of samples          136
#     number of outliers           66
#      getnsecs overhead          173
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                128      0.00000 |********************************     0.97014
#                  1      1.00000 |*                                    1.00079
#
#                  7        > 95% |*                                    1.00752
#
#        mean of 95%      0.97038
#          95th %ile      1.00386
 for      0.22575 seconds
Running:          write_n10k# bin/write -E -C 200 -L -S -W -N write_n10k -s 10k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n10k     1   1      0.98492          173        0     1000    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.94089                 0.94089
#                    max      1.95388                 1.19381
#                   mean      1.07519                 1.00938
#                 median      0.98978                 0.98492
#                 stddev      0.18838                 0.06173
#         standard error      0.01325                 0.00469
#   99% confidence level      0.03083                 0.01092
#                   skew      2.45024                 1.68774
#               kurtosis      5.96439                 1.75165
#       time correlation     -0.00100                -0.00020
#
#           elasped time      0.22151
#      number of samples          173
#     number of outliers           29
#      getnsecs overhead          170
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                119      0.00000 |********************************     0.97660
#                 45      1.00000 |************                         1.06175
#
#                  9        > 95% |**                                   1.18104
#
#        mean of 95%      0.99996
#          95th %ile      1.16873
 for      0.23234 seconds
Running:         write_n100k# bin/write -E -C 200 -L -S -W -N write_n100k -s 100k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
write_n100k    1   1      0.98181          189        0     1000   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.92882                 0.92882
#                    max      1.95486                 1.40395
#                   mean      1.08015                 1.04613
#                 median      0.98898                 0.98181
#                 stddev      0.17870                 0.12122
#         standard error      0.01257                 0.00882
#   99% confidence level      0.02924                 0.02051
#                   skew      1.91088                 1.43414
#               kurtosis      3.79048                 0.87536
#       time correlation     -0.00063                -0.00022
#
#           elasped time      0.22164
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          209
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                114      0.00000 |********************************     0.96987
#                 65      1.00000 |******************                   1.13096
#
#                 10        > 95% |**                                   1.36409
#
#        mean of 95%      1.02837
#          95th %ile      1.31896
 for      0.23286 seconds
 
Running:          writev_t1k# bin/writev -E -C 200 -L -S -W -N writev_t1k -s 1k -B 200 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t1k     1   1    146.01389          193        0      200     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    143.27982               143.27982
#                    max    176.77869               150.86893
#                   mean    146.78861               146.25231
#                 median    146.12398               146.01389
#                 stddev      3.52115                 1.62525
#         standard error      0.24775                 0.11699
#   99% confidence level      0.57626                 0.27211
#                   skew      5.17425                 0.51636
#               kurtosis     36.06179                -0.37279
#       time correlation      0.00180                -0.00539
#
#           elasped time      5.93830
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          165
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 10    143.00000 |******                             143.77441
#                 35    144.00000 |*********************              144.47954
#                 51    145.00000 |********************************   145.43471
#                 32    146.00000 |********************               146.44433
#                 33    147.00000 |********************               147.37973
#                 20    148.00000 |************                       148.41249
#                  2    149.00000 |*                                  149.01997
#
#                 10        > 95% |******                             149.89588
#
#        mean of 95%    146.05321
#          95th %ile    149.05005
 for      5.96429 seconds
Running:         writev_t10k# bin/writev -E -C 200 -L -S -W -N writev_t10k -s 10k -B 10 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t10k    1   1    662.99540          186        0       10    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    639.59700               639.59700
#                    max    791.99380               702.67540
#                   mean    668.30410               662.67609
#                 median    664.48020               662.99540
#                 stddev     24.17163                13.59028
#         standard error      1.70071                 0.99649
#   99% confidence level      3.95585                 2.31783
#                   skew      2.14312                 0.56139
#               kurtosis      6.01497                 0.17537
#       time correlation     -0.09525                 0.01835
#
#           elasped time      1.35610
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          190
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    638.00000 |****                               639.78900
#                  3    640.00000 |******                             640.95380
#                  7    642.00000 |**************                     642.98351
#                  8    644.00000 |****************                   645.29300
#                 12    646.00000 |************************           647.05727
#                  8    648.00000 |****************                   648.56340
#                 10    650.00000 |********************               650.86100
#                  7    652.00000 |**************                     652.98214
#                  6    654.00000 |************                       655.13193
#                  7    656.00000 |**************                     656.66854
#                 10    658.00000 |********************               659.50356
#                  8    660.00000 |****************                   661.04020
#                 10    662.00000 |********************               662.88276
#                 10    664.00000 |********************               664.82836
#                 15    666.00000 |******************************     667.06239
#                 13    668.00000 |**************************         669.10789
#                 16    670.00000 |********************************   671.13940
#                  4    672.00000 |********                           673.07540
#                  4    674.00000 |********                           675.61620
#                  8    676.00000 |****************                   677.24820
#                  3    678.00000 |******                             679.15753
#                  2    680.00000 |****                               680.53140
#                  1    682.00000 |**                                 682.29780
#                  0    684.00000 |                                           -
#                  2    686.00000 |****                               686.99540
#
#                 10        > 95% |********************               696.13204
#
#        mean of 95%    660.77518
#          95th %ile    689.59380
 for      1.36893 seconds
Running:        writev_t100k# bin/writev -E -C 200 -L -S -W -N writev_t100k -s 100k -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_t100k   1   1   5751.84400          176        0        1   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   5608.74000              5608.74000
#                    max  11746.59600              5978.66000
#                   mean   5855.87632              5764.08109
#                 median   5770.78800              5751.84400
#                 stddev    460.15233                74.07595
#         standard error     32.37620                 5.58369
#   99% confidence level     75.30705                12.98765
#                   skew     10.53706                 0.44245
#               kurtosis    130.21443                -0.11182
#       time correlation     -1.95892                -0.32230
#
#           elasped time      1.18880
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   5600.00000 |*                                 5608.74000
#                  0   5610.00000 |                                           -
#                  1   5620.00000 |*                                 5629.73200
#                  2   5630.00000 |***                               5638.30800
#                  3   5640.00000 |*****                             5646.03067
#                  6   5650.00000 |***********                       5653.66800
#                  4   5660.00000 |*******                           5664.61200
#                  5   5670.00000 |*********                         5675.60720
#                  8   5680.00000 |***************                   5684.13200
#                  6   5690.00000 |***********                       5696.29200
#                  4   5700.00000 |*******                           5703.52400
#                 12   5710.00000 |**********************            5716.11067
#                  7   5720.00000 |*************                     5724.63486
#                 17   5730.00000 |********************************  5735.62565
#                 12   5740.00000 |**********************            5746.31867
#                  6   5750.00000 |***********                       5754.27600
#                  7   5760.00000 |*************                     5765.30229
#                  7   5770.00000 |*************                     5775.90800
#                  3   5780.00000 |*****                             5782.13733
#                  7   5790.00000 |*************                     5795.25429
#                 11   5800.00000 |********************              5804.20764
#                  8   5810.00000 |***************                   5814.37200
#                  7   5820.00000 |*************                     5824.91371
#                  3   5830.00000 |*****                             5833.16667
#                  5   5840.00000 |*********                         5845.33520
#                  5   5850.00000 |*********                         5855.57520
#                  2   5860.00000 |***                               5862.82000
#                  6   5870.00000 |***********                       5873.40133
#                  2   5880.00000 |***                               5883.30000
#
#                  9        > 95% |****************                  5930.53200
#
#        mean of 95%   5755.11068
#          95th %ile   5888.80400
 for      1.20355 seconds
 
Running:          writev_u1k# bin/writev -E -C 200 -L -S -W -N writev_u1k -s 1k -B 100 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u1k     1   1    153.64695          178        0      100     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    151.04855               151.04855
#                    max    202.54039               159.30711
#                   mean    156.17883               154.03501
#                 median    154.11799               153.64695
#                 stddev      7.26848                 1.82039
#         standard error      0.51141                 0.13644
#   99% confidence level      1.18954                 0.31737
#                   skew      3.59490                 0.45491
#               kurtosis     14.74105                -0.73840
#       time correlation     -0.01606                 0.01296
#
#           elasped time      3.16181
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          169
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 19    151.00000 |*************                      151.58844
#                 44    152.00000 |********************************   152.41542
#                 37    153.00000 |**************************         153.45682
#                 18    154.00000 |*************                      154.53968
#                 30    155.00000 |*********************              155.48145
#                 21    156.00000 |***************                    156.51708
#
#                  9        > 95% |******                             157.87266
#
#        mean of 95%    153.83063
#          95th %ile    156.99799
 for      3.17263 seconds
Running:         writev_u10k# bin/writev -E -C 200 -L -S -W -N writev_u10k -s 10k -B 10 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u10k    1   1    711.57620          187        0       10    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    692.86260               692.86260
#                    max   1371.46740               741.29780
#                   mean    723.48172               712.99857
#                 median    712.06260               711.57620
#                 stddev     63.01190                 9.77672
#         standard error      4.43350                 0.71494
#   99% confidence level     10.31233                 1.66296
#                   skew      8.42846                 0.52073
#               kurtosis     77.44368                -0.18906
#       time correlation      0.00214                 0.00144
#
#           elasped time      1.46739
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          270
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    692.00000 |*                                  692.86260
#                  4    694.00000 |******                             695.14740
#                  1    696.00000 |*                                  696.98420
#                  6    698.00000 |*********                          698.65247
#                  8    700.00000 |************                       701.18580
#                 16    702.00000 |*************************          703.12180
#                  9    704.00000 |**************                     705.29567
#                 17    706.00000 |***************************        706.92905
#                 18    708.00000 |****************************       709.33051
#                 20    710.00000 |********************************   711.07956
#                 15    712.00000 |************************           712.97225
#                 10    714.00000 |****************                   715.27284
#                  9    716.00000 |**************                     716.90384
#                 11    718.00000 |*****************                  718.80005
#                 13    720.00000 |********************               721.18998
#                  1    722.00000 |*                                  723.68500
#                  6    724.00000 |*********                          724.92660
#                  2    726.00000 |***                                726.57780
#                  5    728.00000 |********                           728.86644
#                  5    730.00000 |********                           730.99636
#
#                 10        > 95% |****************                   734.65204
#
#        mean of 95%    711.77521
#          95th %ile    732.05620
 for      1.47991 seconds
Running:        writev_u100k# bin/writev -E -C 200 -L -S -W -N writev_u100k -s 100k -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_u100k   1   1   6311.00400          176        0        1   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   6087.77200              6087.77200
#                    max  11553.88400              6727.77200
#                   mean   6511.75236              6333.00691
#                 median   6341.72400              6311.00400
#                 stddev    621.08064               131.65737
#         standard error     43.69908                 9.92405
#   99% confidence level    101.64406                23.08333
#                   skew      4.50198                 0.61083
#               kurtosis     25.86955                -0.05741
#       time correlation     -0.10675                -0.76561
#
#           elasped time      1.32157
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          164
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2   6080.00000 |****                              6092.76400
#                  2   6100.00000 |****                              6117.85200
#                  3   6120.00000 |******                            6124.12400
#                  6   6140.00000 |************                      6153.00933
#                  7   6160.00000 |**************                    6173.27600
#                  5   6180.00000 |**********                        6192.47600
#                  9   6200.00000 |******************                6210.42444
#                 16   6220.00000 |********************************  6230.18800
#                  9   6240.00000 |******************                6251.24222
#                  7   6260.00000 |**************                    6269.09314
#                 12   6280.00000 |************************          6290.97200
#                 12   6300.00000 |************************          6308.12400
#                 10   6320.00000 |********************              6329.92240
#                 12   6340.00000 |************************          6349.14800
#                  9   6360.00000 |******************                6369.77022
#                  6   6380.00000 |************                      6391.00400
#                  8   6400.00000 |****************                  6410.58800
#                  7   6420.00000 |**************                    6431.39714
#                  7   6440.00000 |**************                    6447.19600
#                  1   6460.00000 |**                                6470.74800
#                  5   6480.00000 |**********                        6491.99600
#                  4   6500.00000 |********                          6507.22800
#                  2   6520.00000 |****                              6521.43600
#                  2   6540.00000 |****                              6549.85200
#                  1   6560.00000 |**                                6561.62800
#                  3   6580.00000 |******                            6589.36133
#
#                  9        > 95% |******************                6642.41022
#
#        mean of 95%   6316.33248
#          95th %ile   6599.77200
 for      1.33792 seconds
 
Running:          writev_n1k# bin/writev -E -C 200 -L -S -W -N writev_n1k -s 1k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n1k     1   1     15.73667          186        0     1000     1024   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.29866                15.29866
#                    max     18.37501                16.52182
#                   mean     15.86507                15.75621
#                 median     15.74384                15.73667
#                 stddev      0.48362                 0.27579
#         standard error      0.03403                 0.02022
#   99% confidence level      0.07915                 0.04704
#                   skew      2.36557                 0.83111
#               kurtosis      7.67964                 0.39193
#       time correlation     -0.00250                -0.00034
#
#           elasped time      3.21051
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          161
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                156     15.00000 |********************************    15.66182
#                 20     16.00000 |****                                16.14646
#
#                 10        > 95% |**                                  16.44825
#
#        mean of 95%     15.71689
#          95th %ile     16.34979
 for      3.22017 seconds
Running:         writev_n10k# bin/writev -E -C 200 -L -S -W -N writev_n10k -s 10k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n10k    1   1     15.60274          178        0     1000    10240   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.14578                15.14578
#                    max     20.80389                16.27474
#                   mean     15.82172                15.63988
#                 median     15.64984                15.60274
#                 stddev      0.63962                 0.22434
#         standard error      0.04500                 0.01681
#   99% confidence level      0.10468                 0.03911
#                   skew      3.82248                 0.66236
#               kurtosis     20.80632                 0.00119
#       time correlation     -0.00108                -0.00008
#
#           elasped time      3.20238
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          206
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                162     15.00000 |********************************    15.59359
#                  7     16.00000 |*                                   16.03563
#
#                  9        > 95% |*                                   16.16526
#
#        mean of 95%     15.61190
#          95th %ile     16.07890
 for      3.21383 seconds
Running:        writev_n100k# bin/writev -E -C 200 -L -S -W -N writev_n100k -s 100k -I 100 -B 0 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size  vec
writev_n100k   1   1     15.81987          192        0     1000   102400   10
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.35575                15.35575
#                    max     19.43869                16.75581
#                   mean     15.98106                15.87517
#                 median     15.83293                15.81987
#                 stddev      0.58054                 0.29939
#         standard error      0.04085                 0.02161
#   99% confidence level      0.09501                 0.05026
#                   skew      3.21921                 0.95970
#               kurtosis     12.86766                 0.55702
#       time correlation     -0.00085                -0.00036
#
#           elasped time      3.23425
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                137     15.00000 |********************************    15.72254
#                 45     16.00000 |**********                          16.16983
#
#                 10        > 95% |**                                  16.64025
#
#        mean of 95%     15.83313
#          95th %ile     16.50596
 for      3.24461 seconds
 
Running:           pread_t1k# bin/pread -E -C 200 -L -S -W -N pread_t1k -s 1k -I 150 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t1k      1   1     16.68011          190        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     16.06740                16.06740
#                    max     23.58250                17.61532
#                   mean     16.89734                16.74860
#                 median     16.69933                16.68011
#                 stddev      0.77913                 0.32140
#         standard error      0.05482                 0.02332
#   99% confidence level      0.12751                 0.05423
#                   skew      4.83668                 0.73607
#               kurtosis     32.36969                -0.10405
#       time correlation     -0.00092                -0.00050
#
#           elasped time      2.27861
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          165
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                154     16.00000 |********************************    16.62307
#                 26     17.00000 |*****                               17.20455
#
#                 10        > 95% |**                                  17.49628
#
#        mean of 95%     16.70706
#          95th %ile     17.36931
 for      2.30422 seconds
Running:          pread_t10k# bin/pread -E -C 200 -L -S -W -N pread_t10k -s 10k -I 500 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t10k     1   1     39.74444          178        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     38.21996                38.21996
#                    max     57.27404                41.43916
#                   mean     40.50381                39.76026
#                 median     39.83404                39.74444
#                 stddev      2.55309                 0.57300
#         standard error      0.17963                 0.04295
#   99% confidence level      0.41783                 0.09990
#                   skew      3.90410                 0.31999
#               kurtosis     17.87480                 0.07958
#       time correlation     -0.01045                 0.00157
#
#           elasped time      1.64083
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          168
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 13     38.00000 |***                                 38.77715
#                106     39.00000 |********************************    39.52798
#                 50     40.00000 |***************                     40.27369
#
#                  9        > 95% |**                                  41.06369
#
#        mean of 95%     39.69085
#          95th %ile     40.84396
 for      1.65066 seconds
Running:         pread_t100k# bin/pread -E -C 200 -L -S -W -N pread_t100k -s 100k -I 5000 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_t100k    1   1    296.93755          177        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    286.14715               286.14715
#                    max    411.43355               310.74875
#                   mean    300.65399               297.05116
#                 median    297.43675               296.93755
#                 stddev     12.60273                 4.60811
#         standard error      0.88672                 0.34637
#   99% confidence level      2.06252                 0.80565
#                   skew      4.27926                 0.47927
#               kurtosis     29.45160                 0.40745
#       time correlation     -0.05924                -0.02195
#
#           elasped time      1.21852
#      number of samples          177
#     number of outliers           25
#      getnsecs overhead          193
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    286.00000 |*                                  286.14715
#                  3    287.00000 |*****                              287.43995
#                  1    288.00000 |*                                  288.74555
#                  1    289.00000 |*                                  289.79515
#                 10    290.00000 |****************                   290.58491
#                  2    291.00000 |***                                291.26715
#                 13    292.00000 |*********************              292.53238
#                 16    293.00000 |**************************         293.59835
#                 19    294.00000 |********************************   294.55742
#                 15    295.00000 |*************************          295.45958
#                 12    296.00000 |********************               296.61862
#                 15    297.00000 |*************************          297.36166
#                  9    298.00000 |***************                    298.34697
#                 14    299.00000 |***********************            299.49755
#                 15    300.00000 |*************************          300.53862
#                 10    301.00000 |****************                   301.42139
#                  5    302.00000 |********                           302.41083
#                  4    303.00000 |******                             303.62555
#                  2    304.00000 |***                                304.46395
#                  1    305.00000 |*                                  305.03995
#
#                  9        > 95% |***************                    308.10342
#
#        mean of 95%    296.45907
#          95th %ile    305.59035
 for      1.23245 seconds
 
Running:           pread_u1k# bin/pread -E -C 200 -L -S -W -N pread_u1k -s 1k -I 150 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u1k      1   1     16.25066          177        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     15.84667                15.84667
#                    max     21.96799                17.29541
#                   mean     16.57341                16.32022
#                 median     16.29409                16.25066
#                 stddev      0.84046                 0.32794
#         standard error      0.05913                 0.02465
#   99% confidence level      0.13755                 0.05733
#                   skew      3.12630                 1.07757
#               kurtosis     13.47833                 0.64166
#       time correlation     -0.00244                -0.00054
#
#           elasped time      2.23401
#      number of samples          177
#     number of outliers           25
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 18     15.00000 |***                                 15.91663
#                150     16.00000 |********************************    16.31731
#
#                  9        > 95% |*                                   17.17591
#
#        mean of 95%     16.27438
#          95th %ile     17.00136
 for      2.24480 seconds
Running:          pread_u10k# bin/pread -E -C 200 -L -S -W -N pread_u10k -s 10k -I 500 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u10k     1   1     32.88880          183        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     32.00433                32.00433
#                    max     56.20400                35.00464
#                   mean     33.62212                33.04358
#                 median     32.95921                32.88880
#                 stddev      2.60787                 0.65641
#         standard error      0.18349                 0.04852
#   99% confidence level      0.42680                 0.11287
#                   skew      5.62893                 1.28660
#               kurtosis     38.17821                 1.31910
#       time correlation     -0.00278                -0.00341
#
#           elasped time      1.36201
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                111     32.00000 |********************************    32.64722
#                 52     33.00000 |**************                      33.30761
#                 10     34.00000 |**                                  34.26020
#
#                 10        > 95% |**                                  34.85361
#
#        mean of 95%     32.93895
#          95th %ile     34.65904
 for      1.37436 seconds
Running:         pread_u100k# bin/pread -E -C 200 -L -S -W -N pread_u100k -s 100k -I 5000 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_u100k    1   1    218.69105          180        0       20   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    211.13905               211.13905
#                    max    344.33585               227.68945
#                   mean    223.36261               218.97336
#                 median    219.39505               218.69105
#                 stddev     16.11739                 3.47894
#         standard error      1.13402                 0.25931
#   99% confidence level      2.63772                 0.60314
#                   skew      4.36332                 0.34409
#               kurtosis     23.08961                -0.38075
#       time correlation     -0.03144                -0.02178
#
#           elasped time      0.90681
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          195
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    211.00000 |**                                 211.56145
#                  3    212.00000 |****                               212.72625
#                  4    213.00000 |*****                              213.60305
#                 12    214.00000 |****************                   214.64945
#                 23    215.00000 |********************************   215.55171
#                 16    216.00000 |**********************             216.51825
#                 16    217.00000 |**********************             217.62065
#                 17    218.00000 |***********************            218.45764
#                 21    219.00000 |*****************************      219.51817
#                 16    220.00000 |**********************             220.44785
#                 16    221.00000 |**********************             221.60865
#                 10    222.00000 |*************                      222.39665
#                  9    223.00000 |************                       223.37869
#                  4    224.00000 |*****                              224.43185
#                  2    225.00000 |**                                 225.39185
#
#                  9        > 95% |************                       226.70385
#
#        mean of 95%    218.56649
#          95th %ile    225.79505
 for      0.91943 seconds
 
Running:           pread_z1k# bin/pread -E -C 200 -L -S -W -N pread_z1k -s 1k -I 150 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z1k      1   1     11.94098          182        0      666     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.52815                11.52815
#                    max     15.95319                12.98805
#                   mean     12.19715                12.02638
#                 median     11.96981                11.94098
#                 stddev      0.64497                 0.32727
#         standard error      0.04538                 0.02426
#   99% confidence level      0.10555                 0.05643
#                   skew      2.50020                 1.24461
#               kurtosis      8.26758                 0.94597
#       time correlation     -0.00298                -0.00055
#
#           elasped time      1.64518
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          201
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                112     11.00000 |********************************    11.82539
#                 60     12.00000 |*****************                   12.25620
#
#                 10        > 95% |**                                  12.89860
#
#        mean of 95%     11.97567
#          95th %ile     12.79393
 for      1.65640 seconds
Running:          pread_z10k# bin/pread -E -C 200 -L -S -W -N pread_z10k -s 10k -I 500 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z10k     1   1     25.03351          172        0      200    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     24.34358                24.34358
#                    max     31.96343                26.42487
#                   mean     25.56406                25.10997
#                 median     25.10519                25.03351
#                 stddev      1.28218                 0.49075
#         standard error      0.09021                 0.03742
#   99% confidence level      0.20984                 0.08704
#                   skew      2.19887                 0.87631
#               kurtosis      5.20658                 0.30215
#       time correlation     -0.00654                -0.00192
#
#           elasped time      1.03661
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          147
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 82     24.00000 |********************************    24.72448
#                 77     25.00000 |******************************      25.32589
#                  4     26.00000 |*                                   26.12567
#
#                  9        > 95% |***                                 26.32346
#
#        mean of 95%     25.04297
#          95th %ile     26.18934
 for      1.04966 seconds
Running:         pread_z100k# bin/pread -E -C 200 -L -S -W -N pread_z100k -s 100k -I 2000 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_z100k    1   1    165.97596          175        0       50   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    162.37660               162.37660
#                    max    213.81212               171.97660
#                   mean    168.58962               165.97289
#                 median    166.49820               165.97596
#                 stddev      7.92150                 2.00862
#         standard error      0.55736                 0.15184
#   99% confidence level      1.29641                 0.35317
#                   skew      2.98876                 0.45153
#               kurtosis      9.86921                -0.42077
#       time correlation     -0.03755                -0.01537
#
#           elasped time      1.70728
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  7    162.00000 |*****                              162.78986
#                 23    163.00000 |******************                 163.51947
#                 40    164.00000 |********************************   164.49487
#                 18    165.00000 |**************                     165.48529
#                 33    166.00000 |**************************         166.51713
#                 26    167.00000 |********************               167.38376
#                 13    168.00000 |**********                         168.38984
#                  6    169.00000 |****                               169.33980
#
#                  9        > 95% |*******                            170.45539
#
#        mean of 95%    165.72986
#          95th %ile    169.77500
 for      1.71946 seconds
Running:        pread_zw100k# bin/pread -E -C 200 -L -S -W -N pread_zw100k -s 100k -w -I 2500 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size
pread_zw100k   1   1    171.72063          189        0       40   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    165.84542               165.84542
#                    max    248.74463               180.07262
#                   mean    173.38130               171.98062
#                 median    171.86783               171.72063
#                 stddev      7.51931                 2.80816
#         standard error      0.52906                 0.20426
#   99% confidence level      1.23059                 0.47512
#                   skew      6.02948                 0.71765
#               kurtosis     50.96636                 0.30097
#       time correlation     -0.01518                -0.01410
#
#           elasped time      1.40500
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    165.00000 |*                                  165.84542
#                  1    166.00000 |*                                  166.37023
#                  6    167.00000 |******                             167.46249
#                 16    168.00000 |*****************                  168.68183
#                 25    169.00000 |**************************         169.57842
#                 27    170.00000 |****************************       170.51197
#                 30    171.00000 |********************************   171.59497
#                 26    172.00000 |***************************        172.36752
#                 20    173.00000 |*********************              173.30559
#                 12    174.00000 |************                       174.59049
#                  5    175.00000 |*****                              175.56703
#                  6    176.00000 |******                             176.41289
#                  4    177.00000 |****                               177.57182
#
#                 10        > 95% |**********                         178.79519
#
#        mean of 95%    171.59992
#          95th %ile    177.81983
 for      1.42002 seconds
 
Running:          pwrite_t1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t1k -s 1k -I 500 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t1k     1   1     28.02989          189        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     26.94828                26.94828
#                    max     46.11885                30.05997
#                   mean     28.43617                28.11460
#                 median     28.06444                28.02989
#                 stddev      1.72456                 0.66386
#         standard error      0.12134                 0.04829
#   99% confidence level      0.28224                 0.11232
#                   skew      6.14408                 0.82306
#               kurtosis     54.34601                 0.34657
#       time correlation     -0.00680                -0.00085
#
#           elasped time      1.15408
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     26.00000 |*                                   26.94828
#                 89     27.00000 |********************************    27.59355
#                 80     28.00000 |****************************        28.37448
#                  9     29.00000 |***                                 29.24887
#
#                 10        > 95% |***                                 29.76876
#
#        mean of 95%     28.02219
#          95th %ile     29.39437
 for      1.17912 seconds
Running:         pwrite_t10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t10k -s 10k -I 1000 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t10k    1   1     76.34017          190        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     73.77761                73.77761
#                    max     96.61793                79.71937
#                   mean     76.93218                76.47891
#                 median     76.41697                76.34017
#                 stddev      2.37895                 1.11120
#         standard error      0.16738                 0.08062
#   99% confidence level      0.38933                 0.18751
#                   skew      4.19275                 0.62298
#               kurtosis     25.93964                 0.65947
#       time correlation     -0.00994                -0.00366
#
#           elasped time      1.55845
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     73.00000 |*                                   73.86337
#                 11     74.00000 |****                                74.74576
#                 49     75.00000 |********************                75.56752
#                 78     76.00000 |********************************    76.44933
#                 31     77.00000 |************                        77.35872
#                  9     78.00000 |***                                 78.22063
#
#                 10        > 95% |****                                79.31003
#
#        mean of 95%     76.32162
#          95th %ile     78.91809
 for      1.57385 seconds
Running:        pwrite_t100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_t100k -s 100k -I 10000 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_t100k   1   1    583.06820          176        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    557.87780               560.07940
#                    max   1021.85220               603.77860
#                   mean    600.44249               582.72507
#                 median    584.37380               583.06820
#                 stddev     62.37730                 7.77871
#         standard error      4.38885                 0.58634
#   99% confidence level     10.20847                 1.36383
#                   skew      4.01378                 0.06913
#               kurtosis     17.26444                -0.18376
#       time correlation      0.27355                -0.01274
#
#           elasped time      1.21697
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          230
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    560.00000 |*                                  560.07940
#                  1    562.00000 |*                                  563.38180
#                  0    564.00000 |                                           -
#                  2    566.00000 |***                                566.53060
#                  2    568.00000 |***                                569.21860
#                  5    570.00000 |*******                            571.52260
#                 11    572.00000 |****************                   573.27038
#                 20    574.00000 |******************************     574.91332
#                  9    576.00000 |*************                      576.94127
#                 15    578.00000 |**********************             579.02852
#                 15    580.00000 |**********************             581.04068
#                 16    582.00000 |************************           583.06500
#                 21    584.00000 |********************************   584.93212
#                 17    586.00000 |*************************          587.19281
#                 11    588.00000 |****************                   588.80027
#                  6    590.00000 |*********                          590.92313
#                 11    592.00000 |****************                   592.88464
#                  3    594.00000 |****                               595.35620
#                  1    596.00000 |*                                  596.07300
#
#                  9        > 95% |*************                      598.68704
#
#        mean of 95%    581.86485
#          95th %ile    596.96900
 for      1.23407 seconds
 
Running:          pwrite_u1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u1k -s 1k -I 500 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u1k     1   1     31.16967          187        0      200     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     29.86023                29.86023
#                    max     40.05416                32.94888
#                   mean     31.49858                31.23073
#                 median     31.25415                31.16967
#                 stddev      1.22879                 0.62196
#         standard error      0.08646                 0.04548
#   99% confidence level      0.20110                 0.10579
#                   skew      3.19761                 0.51507
#               kurtosis     15.46142                 0.05925
#       time correlation     -0.00207                -0.00386
#
#           elasped time      1.27692
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          177
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     29.00000 |*                                   29.89672
#                 68     30.00000 |***********************             30.65457
#                 92     31.00000 |********************************    31.37825
#                 15     32.00000 |*****                               32.15621
#
#                 10        > 95% |***                                 32.67009
#
#        mean of 95%     31.14941
#          95th %ile     32.29863
 for      1.28672 seconds
Running:         pwrite_u10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u10k -s 10k -I 1000 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u10k    1   1     81.99788          180        0      100    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     79.06924                79.06924
#                    max    105.81868                84.98028
#                   mean     82.88932                81.91929
#                 median     82.09772                81.99788
#                 stddev      3.57374                 1.06833
#         standard error      0.25145                 0.07963
#   99% confidence level      0.58487                 0.18522
#                   skew      3.95158                 0.24632
#               kurtosis     19.17867                 0.23704
#       time correlation     -0.01522                -0.00160
#
#           elasped time      1.67903
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          148
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     79.00000 |**                                  79.76863
#                 37     80.00000 |*****************                   80.60849
#                 49     81.00000 |**********************              81.62611
#                 69     82.00000 |********************************    82.43508
#                 11     83.00000 |*****                               83.30488
#
#                  9        > 95% |****                                84.45121
#
#        mean of 95%     81.78603
#          95th %ile     83.63884
 for      1.68924 seconds
Running:        pwrite_u100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_u100k -s 100k -I 10000 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_u100k   1   1    645.58720          172        0       10   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    624.36480               624.36480
#                    max   1002.68160               677.79200
#                   mean    665.85720               646.36621
#                 median    648.78720               645.58720
#                 stddev     57.86497                10.58168
#         standard error      4.07137                 0.80685
#   99% confidence level      9.47000                 1.87672
#                   skew      3.20427                 0.32019
#               kurtosis     10.80259                 0.09536
#       time correlation     -0.07699                 0.05478
#
#           elasped time      1.34968
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          192
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    624.00000 |******                             624.64640
#                  6    626.00000 |************                       626.92907
#                  2    628.00000 |****                               629.02400
#                  0    630.00000 |                                           -
#                  6    632.00000 |************                       632.89813
#                 13    634.00000 |***************************        635.05182
#                  8    636.00000 |*****************                  637.29600
#                  8    638.00000 |*****************                  638.79360
#                 15    640.00000 |********************************   640.99285
#                 15    642.00000 |********************************   643.08181
#                 14    644.00000 |*****************************      645.21234
#                  9    646.00000 |*******************                647.03218
#                 12    648.00000 |*************************          649.35680
#                 11    650.00000 |***********************            651.10749
#                 11    652.00000 |***********************            653.11360
#                 10    654.00000 |*********************              654.96192
#                 11    656.00000 |***********************            656.92567
#                  2    658.00000 |****                               659.09120
#                  4    660.00000 |********                           661.00480
#                  2    662.00000 |****                               662.43200
#                  1    664.00000 |**                                 664.17280
#
#                  9        > 95% |*******************                670.72356
#
#        mean of 95%    645.02133
#          95th %ile    666.37440
 for      1.36200 seconds
 
Running:          pwrite_n1k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n1k -s 1k -I 100 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n1k     1   1      0.94781          188        0     1000     1024
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.90173                 0.90173
#                    max      1.74884                 1.29904
#                   mean      1.03567                 1.00122
#                 median      0.94986                 0.94781
#                 stddev      0.16454                 0.10451
#         standard error      0.01158                 0.00762
#   99% confidence level      0.02693                 0.01773
#                   skew      1.91564                 1.36769
#               kurtosis      3.47566                 0.60158
#       time correlation      0.00029                 0.00012
#
#           elasped time      0.21236
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                133      0.00000 |********************************     0.94107
#                 45      1.00000 |**********                           1.11916
#
#                 10        > 95% |**                                   1.27040
#
#        mean of 95%      0.98609
#          95th %ile      1.24298
 for      0.22596 seconds
Running:         pwrite_n10k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n10k -s 10k -I 100 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n10k    1   1      0.94576          171        0     1000    10240
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.91478                 0.91478
#                    max      2.35376                 1.05174
#                   mean      0.99923                 0.95661
#                 median      0.95088                 0.94576
#                 stddev      0.14606                 0.03261
#         standard error      0.01028                 0.00249
#   99% confidence level      0.02390                 0.00580
#                   skew      5.49329                 1.27640
#               kurtosis     40.65539                 0.70396
#       time correlation     -0.00022                -0.00002
#
#           elasped time      0.20550
#      number of samples          171
#     number of outliers           31
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                147      0.00000 |********************************     0.94572
#                 15      1.00000 |***                                  1.01210
#
#                  9        > 95% |*                                    1.04201
#
#        mean of 95%      0.95187
#          95th %ile      1.03280
 for      0.22159 seconds
Running:        pwrite_n100k# bin/pwrite -E -C 200 -L -S -W -N pwrite_n100k -s 100k -I 100 -f /dev/null 
             prc thr   usecs/call      samples   errors cnt/samp     size
pwrite_n100k   1   1      0.94766          200        0     1000   102400
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      0.89364                 0.89364
#                    max      2.04462                 1.51367
#                   mean      1.04955                 1.04110
#                 median      0.94791                 0.94766
#                 stddev      0.18223                 0.16143
#         standard error      0.01282                 0.01141
#   99% confidence level      0.02982                 0.02655
#                   skew      1.85403                 1.27829
#               kurtosis      4.34688                 0.35402
#       time correlation     -0.00024                -0.00040
#
#           elasped time      0.21520
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          311
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                128      0.00000 |********************************     0.93760
#                 62      1.00000 |***************                      1.18863
#
#                 10        > 95% |**                                   1.45123
#
#        mean of 95%      1.01951
#          95th %ile      1.40385
 for      0.22544 seconds
 
Running:            mmap_z8k# bin/mmap -E -C 200 -L -S -W -N mmap_z8k -l 8k -I 300 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_z8k       1   1     11.95771          188        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.51874                11.51874
#                    max     20.08975                12.68420
#                   mean     12.16821                11.98104
#                 median     11.99000                11.95771
#                 stddev      0.95268                 0.25557
#         standard error      0.06703                 0.01864
#   99% confidence level      0.15591                 0.04336
#                   skew      5.85795                 0.50214
#               kurtosis     40.61409                -0.26476
#       time correlation     -0.00123                -0.00095
#
#           elasped time      1.73824
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          162
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                108     11.00000 |********************************    11.80480
#                 70     12.00000 |********************                12.17096
#
#                 10        > 95% |**                                  12.55497
#
#        mean of 95%     11.94879
#          95th %ile     12.48047
 for      1.76324 seconds
Running:          mmap_z128k# bin/mmap -E -C 200 -L -S -W -N mmap_z128k -l 128k -I 300 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_z128k     1   1     11.91229          179        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.53405                11.53405
#                    max     20.94840                12.74410
#                   mean     12.22971                11.97830
#                 median     11.98148                11.91229
#                 stddev      0.93958                 0.25708
#         standard error      0.06611                 0.01922
#   99% confidence level      0.15377                 0.04469
#                   skew      5.12191                 0.79767
#               kurtosis     37.55149                 0.26958
#       time correlation     -0.00316                 0.00083
#
#           elasped time      1.75243
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          184
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                104     11.00000 |********************************    11.79903
#                 66     12.00000 |********************                12.17191
#
#                  9        > 95% |**                                  12.62998
#
#        mean of 95%     11.94379
#          95th %ile     12.48579
 for      1.76155 seconds
Running:            mmap_t8k# bin/mmap -E -C 200 -L -S -W -N mmap_t8k -l 8k -I 300 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_t8k       1   1     12.71108          183        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     12.22829                12.22829
#                    max     22.87881                13.57902
#                   mean     13.03443                12.76417
#                 median     12.74721                12.71108
#                 stddev      1.11611                 0.27731
#         standard error      0.07853                 0.02050
#   99% confidence level      0.18266                 0.04768
#                   skew      5.20118                 0.77541
#               kurtosis     34.86978                 0.24140
#       time correlation     -0.00451                -0.00121
#
#           elasped time      1.80326
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          171
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                149     12.00000 |********************************    12.66170
#                 24     13.00000 |*****                               13.11295
#
#                 10        > 95% |**                                  13.45386
#
#        mean of 95%     12.72430
#          95th %ile     13.30841
 for      1.81817 seconds
Running:          mmap_t128k# bin/mmap -E -C 200 -L -S -W -N mmap_t128k -l 128k -I 300 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_t128k     1   1     12.80791          193        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     12.23979                12.23979
#                    max     16.49185                14.07176
#                   mean     12.97424                12.87080
#                 median     12.82559                12.80791
#                 stddev      0.65223                 0.41115
#         standard error      0.04589                 0.02959
#   99% confidence level      0.10674                 0.06884
#                   skew      2.68882                 1.12540
#               kurtosis      9.81623                 0.96846
#       time correlation     -0.00234                -0.00199
#
#           elasped time      1.79435
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          183
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                137     12.00000 |********************************    12.66388
#                 46     13.00000 |**********                          13.24532
#
#                 10        > 95% |**                                  13.98282
#
#        mean of 95%     12.81003
#          95th %ile     13.87342
 for      1.80449 seconds
Running:            mmap_u8k# bin/mmap -E -C 200 -L -S -W -N mmap_u8k -l 8k -I 300 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_u8k       1   1     12.84026          189        0      333     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     12.16758                12.16758
#                    max     19.38632                13.99956
#                   mean     13.02612                12.88661
#                 median     12.87024                12.84026
#                 stddev      0.73443                 0.39105
#         standard error      0.05167                 0.02844
#   99% confidence level      0.12019                 0.06616
#                   skew      3.96825                 0.56993
#               kurtosis     27.26032                 0.06360
#       time correlation     -0.00192                -0.00131
#
#           elasped time      1.83036
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                126     12.00000 |********************************    12.66585
#                 53     13.00000 |*************                       13.23909
#
#                 10        > 95% |**                                  13.80006
#
#        mean of 95%     12.83558
#          95th %ile     13.62132
 for      1.84141 seconds
Running:          mmap_u128k# bin/mmap -E -C 200 -L -S -W -N mmap_u128k -l 128k -I 300 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_u128k     1   1     12.47335          179        0      333   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.97519                11.97519
#                    max     18.85797                13.26057
#                   mean     12.70105                12.49952
#                 median     12.51563                12.47335
#                 stddev      0.74285                 0.25546
#         standard error      0.05227                 0.01909
#   99% confidence level      0.12157                 0.04441
#                   skew      4.26895                 0.67949
#               kurtosis     26.14378                 0.33043
#       time correlation     -0.00360                -0.00053
#
#           elasped time      1.78129
#      number of samples          179
#     number of outliers           23
#      getnsecs overhead          231
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     11.00000 |*                                   11.97519
#                169     12.00000 |********************************    12.46878
#
#                  9        > 95% |*                                   13.13500
#
#        mean of 95%     12.46588
#          95th %ile     12.99304
 for      1.79156 seconds
Running:            mmap_a8k# bin/mmap -E -C 200 -L -S -W -N mmap_a8k -l 8k -I 200 -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_a8k       1   1      6.57173          182        0      500     8192  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      6.22357                 6.22357
#                    max     13.42946                 7.05198
#                   mean      6.75143                 6.58626
#                 median      6.60552                 6.57173
#                 stddev      0.71692                 0.15646
#         standard error      0.05044                 0.01160
#   99% confidence level      0.11733                 0.02698
#                   skew      6.11228                 0.53760
#               kurtosis     46.47619                 0.36220
#       time correlation     -0.00073                 0.00022
#
#           elasped time      3.00826
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          152
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                172      6.00000 |********************************     6.56401
#
#                 10        > 95% |*                                    6.96894
#
#        mean of 95%      6.56401
#          95th %ile      6.86408
 for      3.01836 seconds
Running:          mmap_a128k# bin/mmap -E -C 200 -L -S -W -N mmap_a128k -l 128k -I 200 -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_a128k     1   1      6.56148          178        0      500   131072  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min      6.27732                 6.27732
#                    max      8.21166                 6.81799
#                   mean      6.67858                 6.55767
#                 median      6.58145                 6.56148
#                 stddev      0.37485                 0.11692
#         standard error      0.02637                 0.00876
#   99% confidence level      0.06135                 0.02038
#                   skew      2.50890                -0.03119
#               kurtosis      6.01386                -0.61799
#       time correlation     -0.00094                 0.00014
#
#           elasped time      2.97269
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                169      6.00000 |********************************     6.54564
#
#                  9        > 95% |*                                    6.78352
#
#        mean of 95%      6.54564
#          95th %ile      6.74990
 for      2.98244 seconds
 
Running:           mmap_rz8k# bin/mmap -E -C 200 -L -S -W -N mmap_rz8k -l 8k -I 1000 -r -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rz8k      1   1     61.37702          189        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     59.04998                59.04998
#                    max     88.30822                65.17606
#                   mean     62.11189                61.57092
#                 median     61.49990                61.37702
#                 stddev      2.80152                 1.27707
#         standard error      0.19711                 0.09289
#   99% confidence level      0.45849                 0.21607
#                   skew      4.88486                 0.70245
#               kurtosis     37.50831                 0.30428
#       time correlation     -0.00691                -0.00241
#
#           elasped time      2.09641
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          154
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 16     59.00000 |*******                             59.72262
#                 50     60.00000 |************************            60.48327
#                 65     61.00000 |********************************    61.50128
#                 37     62.00000 |******************                  62.53933
#                 11     63.00000 |*****                               63.44038
#
#                 10        > 95% |****                                64.77952
#
#        mean of 95%     61.39166
#          95th %ile     64.14950
 for      2.11901 seconds
Running:         mmap_rz128k# bin/mmap -E -C 200 -L -S -W -N mmap_rz128k -l 128k -I 1000 -r -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rz128k    1   1    469.77629          188        0      100   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    458.23837               458.23837
#                    max    543.66813               487.54781
#                   mean    472.81847               470.24172
#                 median    470.31645               469.77629
#                 stddev     11.86436                 5.81582
#         standard error      0.83477                 0.42416
#   99% confidence level      1.94168                 0.98660
#                   skew      3.06212                 0.51807
#               kurtosis     12.70710                 0.26445
#       time correlation     -0.01987                 0.00354
#
#           elasped time     10.67412
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    458.00000 |*                                  458.23837
#                  1    459.00000 |*                                  459.12669
#                  5    460.00000 |*********                          460.52189
#                  7    461.00000 |*************                      461.47348
#                 10    462.00000 |******************                 462.60189
#                  5    463.00000 |*********                          463.47869
#                  5    464.00000 |*********                          464.51907
#                  7    465.00000 |*************                      465.54095
#                  9    466.00000 |****************                   466.42781
#                 17    467.00000 |********************************   467.55285
#                 17    468.00000 |********************************   468.54734
#                 17    469.00000 |********************************   469.65040
#                  8    470.00000 |***************                    470.62205
#                 16    471.00000 |******************************     471.43325
#                 10    472.00000 |******************                 472.44176
#                 10    473.00000 |******************                 473.53002
#                 10    474.00000 |******************                 474.57117
#                  6    475.00000 |***********                        475.48680
#                  4    476.00000 |*******                            476.35549
#                  7    477.00000 |*************                      477.49250
#                  2    478.00000 |***                                478.80797
#                  2    479.00000 |***                                479.62333
#                  1    480.00000 |*                                  480.07773
#                  0    481.00000 |                                           -
#                  1    482.00000 |*                                  482.02845
#
#                 10        > 95% |******************                 484.16528
#
#        mean of 95%    469.45950
#          95th %ile    482.03869
 for     10.68627 seconds
Running:           mmap_rt8k# bin/mmap -E -C 200 -L -S -W -N mmap_rt8k -l 8k -I 1000 -r -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rt8k      1   1     61.99838          184        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     59.78654                59.78654
#                    max     91.14910                66.14814
#                   mean     63.17912                62.24168
#                 median     62.22622                61.99838
#                 stddev      3.82153                 1.39231
#         standard error      0.26888                 0.10264
#   99% confidence level      0.62542                 0.23875
#                   skew      3.93717                 0.85995
#               kurtosis     20.23283                 0.58564
#       time correlation     -0.01089                 0.00082
#
#           elasped time      2.27067
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          226
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     59.00000 |**                                  59.89470
#                 27     60.00000 |*************                       60.60754
#                 62     61.00000 |********************************    61.51632
#                 47     62.00000 |************************            62.50815
#                 26     63.00000 |*************                       63.44626
#                  6     64.00000 |***                                 64.34035
#                  2     65.00000 |*                                   65.16382
#
#                 10        > 95% |*****                               65.86193
#
#        mean of 95%     62.03362
#          95th %ile     65.45694
 for      2.28298 seconds
Running:         mmap_rt128k# bin/mmap -E -C 200 -L -S -W -N mmap_rt128k -l 128k -I 10000 -r -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_rt128k    1   1    266.78720          178        0       10   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    255.39520               255.39520
#                    max    362.58240               285.09120
#                   mean    272.25115               267.05844
#                 median    267.68320               266.78720
#                 stddev     16.97012                 6.13358
#         standard error      1.19401                 0.45973
#   99% confidence level      2.77728                 1.06933
#                   skew      2.84307                 0.61352
#               kurtosis      9.71383                 0.42844
#       time correlation     -0.09881                 0.00523
#
#           elasped time      0.74117
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    255.00000 |******                             255.59147
#                  3    256.00000 |******                             256.82027
#                  3    257.00000 |******                             257.35787
#                  6    258.00000 |************                       258.59520
#                  6    259.00000 |************                       259.36320
#                  5    260.00000 |**********                         260.52544
#                  9    261.00000 |******************                 261.40267
#                 14    262.00000 |****************************       262.37486
#                 12    263.00000 |************************           263.57227
#                  5    264.00000 |**********                         264.65728
#                 16    265.00000 |********************************   265.57280
#                 12    266.00000 |************************           266.66133
#                 12    267.00000 |************************           267.52107
#                 12    268.00000 |************************           268.56853
#                 11    269.00000 |**********************             269.48684
#                 13    270.00000 |**************************         270.56812
#                  6    271.00000 |************                       271.46773
#                  4    272.00000 |********                           272.45760
#                  4    273.00000 |********                           273.43680
#                  2    274.00000 |****                               274.63360
#                  5    275.00000 |**********                         275.58336
#                  5    276.00000 |**********                         276.56128
#                  1    277.00000 |**                                 277.07840
#
#                  9        > 95% |******************                 282.36907
#
#        mean of 95%    266.24309
#          95th %ile    278.38400
 for      0.75397 seconds
Running:           mmap_ru8k# bin/mmap -E -C 200 -L -S -W -N mmap_ru8k -l 8k -I 1000 -r -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ru8k      1   1     61.56851          183        0      100     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     59.18771                59.18771
#                    max     73.45715                65.01939
#                   mean     62.21866                61.60698
#                 median     61.72723                61.56851
#                 stddev      2.32100                 1.15878
#         standard error      0.16330                 0.08566
#   99% confidence level      0.37985                 0.19924
#                   skew      2.24489                 0.47724
#               kurtosis      6.05177                 0.11364
#       time correlation     -0.00983                -0.00168
#
#           elasped time      2.24064
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          205
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 14     59.00000 |*******                             59.71946
#                 47     60.00000 |***********************             60.59135
#                 63     61.00000 |********************************    61.55669
#                 40     62.00000 |********************                62.46598
#                  9     63.00000 |****                                63.36677
#
#                 10        > 95% |*****                               64.32000
#
#        mean of 95%     61.45016
#          95th %ile     63.76755
 for      2.25127 seconds
Running:         mmap_ru128k# bin/mmap -E -C 200 -L -S -W -N mmap_ru128k -l 128k -I 10000 -r -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ru128k    1   1    282.09660          194        0       10   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    269.29660               269.29660
#                    max    647.79260               301.09180
#                   mean    287.90020               282.40961
#                 median    282.19900               282.09660
#                 stddev     36.67766                 6.79786
#         standard error      2.58063                 0.48806
#   99% confidence level      6.00255                 1.13522
#                   skew      7.74412                 0.35284
#               kurtosis     66.15984                -0.29066
#       time correlation     -0.12963                 0.00181
#
#           elasped time      0.77126
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          154
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    269.00000 |******                             269.52700
#                  3    270.00000 |******                             270.72167
#                  4    271.00000 |********                           271.60700
#                  6    272.00000 |************                       272.49233
#                  8    273.00000 |*****************                  273.56860
#                  6    274.00000 |************                       274.54887
#                  7    275.00000 |**************                     275.45523
#                  3    276.00000 |******                             276.24273
#                 11    277.00000 |***********************            277.56307
#                 15    278.00000 |********************************   278.62695
#                  9    279.00000 |*******************                279.67029
#                 14    280.00000 |*****************************      280.61729
#                  8    281.00000 |*****************                  281.53660
#                 12    282.00000 |*************************          282.55527
#                  7    283.00000 |**************                     283.59969
#                 15    284.00000 |********************************   284.56956
#                 10    285.00000 |*********************              285.40924
#                 10    286.00000 |*********************              286.62524
#                  4    287.00000 |********                           287.56860
#                  6    288.00000 |************                       288.55207
#                  8    289.00000 |*****************                  289.47580
#                  3    290.00000 |******                             290.32273
#                  4    291.00000 |********                           291.40860
#                  4    292.00000 |********                           292.55420
#                  2    293.00000 |****                               293.53980
#                  1    294.00000 |**                                 294.97340
#                  1    295.00000 |**                                 295.48540
#
#                 10        > 95% |*********************              297.55132
#
#        mean of 95%    281.58669
#          95th %ile    295.58780
 for      0.78433 seconds
Running:           mmap_ra8k# bin/mmap -E -C 200 -L -S -W -N mmap_ra8k -l 8k -I 500 -r -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ra8k      1   1     48.72884          185        0      200     8192  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     47.37844                47.37844
#                    max     61.58901                51.51029
#                   mean     49.28711                48.84593
#                 median     48.81461                48.72884
#                 stddev      1.90909                 0.89385
#         standard error      0.13432                 0.06572
#   99% confidence level      0.31244                 0.15286
#                   skew      3.37241                 0.72725
#               kurtosis     15.71877                 0.22534
#       time correlation     -0.00356                -0.00206
#
#           elasped time      4.23736
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          151
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 33     47.00000 |*************                       47.73223
#                 81     48.00000 |********************************    48.49898
#                 50     49.00000 |*******************                 49.40709
#                 11     50.00000 |****                                50.22284
#
#                 10        > 95% |***                                 51.01108
#
#        mean of 95%     48.72221
#          95th %ile     50.38004
 for      4.24741 seconds
Running:         mmap_ra128k# bin/mmap -E -C 200 -L -S -W -N mmap_ra128k -l 128k -I 5000 -r -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_ra128k    1   1    439.59560          185        0       20   131072  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    422.73800               422.73800
#                    max    637.24040               486.23880
#                   mean    450.34114               443.85689
#                 median    441.09320               439.59560
#                 stddev     27.58297                14.16548
#         standard error      1.94073                 1.04147
#   99% confidence level      4.51414                 2.42245
#                   skew      2.98632                 1.31001
#               kurtosis     12.86349                 1.11906
#       time correlation     -0.17891                -0.10476
#
#           elasped time      2.07521
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          152
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    422.00000 |**                                 422.99400
#                  1    424.00000 |*                                  424.09480
#                  4    426.00000 |*****                              426.80520
#                  7    428.00000 |*********                          429.41411
#                 13    430.00000 |******************                 431.38095
#                 16    432.00000 |**********************             432.85880
#                 23    434.00000 |********************************   434.93974
#                 14    436.00000 |*******************                436.93869
#                 15    438.00000 |********************               439.15101
#                 16    440.00000 |**********************             441.14440
#                 14    442.00000 |*******************                443.08177
#                  7    444.00000 |*********                          444.89846
#                  4    446.00000 |*****                              447.48360
#                  5    448.00000 |******                             449.10088
#                  4    450.00000 |*****                              451.35560
#                  1    452.00000 |*                                  452.38280
#                  6    454.00000 |********                           454.59507
#                  4    456.00000 |*****                              456.77000
#                  5    458.00000 |******                             459.14888
#                  2    460.00000 |**                                 461.68840
#                  2    462.00000 |**                                 463.34600
#                  2    464.00000 |**                                 465.34280
#                  3    466.00000 |****                               466.80840
#                  0    468.00000 |                                           -
#                  1    470.00000 |*                                  471.33960
#                  3    472.00000 |****                               472.97800
#                  1    474.00000 |*                                  475.29480
#
#                 10        > 95% |*************                      482.24776
#
#        mean of 95%    441.66313
#          95th %ile    475.79400
 for      2.08834 seconds
 
Running:           mmap_wz8k# bin/mmap -E -C 200 -L -S -W -N mmap_wz8k -l 8k -I 1250 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wz8k      1   1    104.79791          183        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    100.32431               100.32431
#                    max    185.79631               109.80911
#                   mean    106.26090               104.86468
#                 median    104.97391               104.79791
#                 stddev      6.87783                 1.76529
#         standard error      0.48392                 0.13049
#   99% confidence level      1.12560                 0.30353
#                   skew      8.20455                 0.26617
#               kurtosis     87.40191                -0.08681
#       time correlation     -0.02057                 0.00048
#
#           elasped time      2.89161
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    100.00000 |*                                  100.44111
#                  4    101.00000 |***                                101.80751
#                 23    102.00000 |******************                 102.58866
#                 33    103.00000 |**************************         103.60470
#                 40    104.00000 |********************************   104.51047
#                 33    105.00000 |**************************         105.49435
#                 29    106.00000 |***********************            106.49965
#                  9    107.00000 |*******                            107.30885
#
#                 10        > 95% |********                           108.76271
#
#        mean of 95%    104.63936
#          95th %ile    107.79631
 for      2.90143 seconds
Running:         mmap_wz128k# bin/mmap -E -C 200 -L -S -W -N mmap_wz128k -l 128k -I 25000 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wz128k    1   1    941.96425          171        0        4   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    894.73225               894.73225
#                    max   1334.41225              1005.96425
#                   mean    968.86960               946.03218
#                 median    945.93225               941.96425
#                 stddev     64.01836                20.99052
#         standard error      4.50432                 1.60519
#   99% confidence level     10.47704                 3.73366
#                   skew      2.65289                 0.61990
#               kurtosis      8.83250                 0.34438
#       time correlation     -0.49182                -0.04265
#
#           elasped time      0.93177
#      number of samples          171
#     number of outliers           31
#      getnsecs overhead          207
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    892.00000 |*                                  894.73225
#                  0    896.00000 |                                           -
#                  1    900.00000 |*                                  902.47625
#                  1    904.00000 |*                                  904.20425
#                  2    908.00000 |***                                909.80425
#                  4    912.00000 |******                             914.50825
#                  5    916.00000 |********                           918.54025
#                  4    920.00000 |******                             923.05225
#                 11    924.00000 |******************                 926.15625
#                 14    928.00000 |***********************            930.43054
#                 12    932.00000 |********************               933.94292
#                 19    936.00000 |********************************   938.22530
#                 17    940.00000 |****************************       941.79860
#                 17    944.00000 |****************************       945.81178
#                 10    948.00000 |****************                   949.77225
#                  7    952.00000 |***********                        953.51168
#                 11    956.00000 |******************                 958.42389
#                  2    960.00000 |***                                961.32425
#                  5    964.00000 |********                           966.25865
#                  5    968.00000 |********                           970.39305
#                  9    972.00000 |***************                    974.29847
#                  2    976.00000 |***                                977.96425
#                  1    980.00000 |*                                  982.47625
#                  1    984.00000 |*                                  987.21225
#                  1    988.00000 |*                                  988.94025
#
#                  9        > 95% |***************                    996.30025
#
#        mean of 95%    943.23951
#          95th %ile    989.45225
 for      0.94515 seconds
Running:           mmap_wt8k# bin/mmap -E -C 200 -L -S -W -N mmap_wt8k -l 8k -I 1250 -w -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wt8k      1   1    118.02371          187        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    114.36291               114.36291
#                    max    153.22371               125.15971
#                   mean    119.86138               118.47101
#                 median    118.35971               118.02371
#                 stddev      5.93280                 2.31064
#         standard error      0.41743                 0.16897
#   99% confidence level      0.97094                 0.39303
#                   skew      3.35284                 0.82755
#               kurtosis     12.75887                 0.14362
#       time correlation     -0.02000                 0.00007
#
#           elasped time      3.09672
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          151
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    114.00000 |**                                 114.55278
#                 15    115.00000 |************                       115.55502
#                 40    116.00000 |********************************   116.53363
#                 35    117.00000 |****************************       117.44963
#                 30    118.00000 |************************           118.53497
#                 24    119.00000 |*******************                119.42691
#                 12    120.00000 |*********                          120.48825
#                 10    121.00000 |********                           121.59843
#                  8    122.00000 |******                             122.47811
#
#                 10        > 95% |********                           124.10499
#
#        mean of 95%    118.15271
#          95th %ile    122.67331
 for      3.10631 seconds
Running:         mmap_wt128k# bin/mmap -E -C 200 -L -S -W -N mmap_wt128k -l 128k -I 25000 -w -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wt128k    1   1   1081.49375          175        0        4   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1049.94175              1049.94175
#                    max   1522.19775              1146.19775
#                   mean   1105.29795              1086.09846
#                 median   1084.94975              1081.49375
#                 stddev     61.25915                20.21653
#         standard error      4.31018                 1.52823
#   99% confidence level     10.02548                 3.55465
#                   skew      3.43988                 0.84844
#               kurtosis     16.19102                 0.18359
#       time correlation     -0.30732                -0.01319
#
#           elasped time      1.03142
#      number of samples          175
#     number of outliers           27
#      getnsecs overhead          169
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1047.00000 |*                                 1049.94175
#                  0   1050.00000 |                                           -
#                  2   1053.00000 |***                               1055.22175
#                  5   1056.00000 |*********                         1057.76255
#                  5   1059.00000 |*********                         1060.56575
#                  7   1062.00000 |*************                     1063.66518
#                 11   1065.00000 |********************              1066.79702
#                 10   1068.00000 |******************                1069.78815
#                 17   1071.00000 |********************************  1072.95916
#                 12   1074.00000 |**********************            1075.74442
#                 10   1077.00000 |******************                1078.96575
#                 15   1080.00000 |****************************      1081.62175
#                  9   1083.00000 |****************                  1084.67242
#                 12   1086.00000 |**********************            1087.64842
#                  6   1089.00000 |***********                       1090.99775
#                  5   1092.00000 |*********                         1093.84575
#                  7   1095.00000 |*************                     1096.99089
#                  4   1098.00000 |*******                           1100.21375
#                  5   1101.00000 |*********                         1102.46015
#                  2   1104.00000 |***                               1105.46175
#                  5   1107.00000 |*********                         1108.25855
#                  3   1110.00000 |*****                             1111.25375
#                  4   1113.00000 |*******                           1113.90975
#                  2   1116.00000 |***                               1117.33375
#                  4   1119.00000 |*******                           1120.82175
#                  2   1122.00000 |***                               1122.58175
#                  1   1125.00000 |*                                 1126.67775
#
#                  9        > 95% |****************                  1135.68042
#
#        mean of 95%   1083.41028
#          95th %ile   1128.40575
 for      1.04544 seconds
Running:           mmap_wu8k# bin/mmap -E -C 200 -L -S -W -N mmap_wu8k -l 8k -I 1250 -w -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wu8k      1   1    112.31151          182        0       80     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    107.95951               107.95951
#                    max    143.01231               117.62351
#                   mean    113.62647               112.41787
#                 median    112.72111               112.31151
#                 stddev      4.50442                 1.75736
#         standard error      0.31693                 0.13026
#   99% confidence level      0.73718                 0.30299
#                   skew      3.22511                 0.34487
#               kurtosis     13.58105                 0.07875
#       time correlation     -0.01298                -0.00572
#
#           elasped time      2.95452
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    107.00000 |*                                  107.95951
#                  2    108.00000 |*                                  108.55311
#                  7    109.00000 |****                               109.56226
#                 28    110.00000 |*******************                110.52911
#                 45    111.00000 |********************************   111.49878
#                 33    112.00000 |***********************            112.55597
#                 36    113.00000 |*************************          113.47640
#                 16    114.00000 |***********                        114.56011
#                  4    115.00000 |**                                 115.20671
#
#                 10        > 95% |*******                            116.25039
#
#        mean of 95%    112.19505
#          95th %ile    115.39951
 for      2.96474 seconds
Running:         mmap_wu128k# bin/mmap -E -C 200 -L -S -W -N mmap_wu128k -l 128k -I 12500 -w -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wu128k    1   1   1073.22637          182        0        8   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min   1049.35437              1049.35437
#                    max   1366.95438              1127.11438
#                   mean   1089.47556              1077.02207
#                 median   1075.46637              1073.22637
#                 stddev     46.90437                17.25471
#         standard error      3.30018                 1.27900
#   99% confidence level      7.67622                 2.97496
#                   skew      3.29877                 0.94375
#               kurtosis     12.66843                 0.44767
#       time correlation     -0.25345                -0.08543
#
#           elasped time      2.02905
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          173
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1   1047.00000 |*                                 1049.35437
#                  6   1050.00000 |*********                         1051.97838
#                  4   1053.00000 |******                            1054.16237
#                  7   1056.00000 |***********                       1058.19552
#                 14   1059.00000 |**********************            1060.65266
#                 19   1062.00000 |******************************    1063.94301
#                 20   1065.00000 |********************************  1066.75117
#                 13   1068.00000 |********************              1069.49222
#                 12   1071.00000 |*******************               1072.71437
#                  8   1074.00000 |************                      1075.35038
#                 10   1077.00000 |****************                  1078.28877
#                 11   1080.00000 |*****************                 1081.41547
#                 11   1083.00000 |*****************                 1084.21401
#                  8   1086.00000 |************                      1087.69438
#                  6   1089.00000 |*********                         1090.15971
#                  7   1092.00000 |***********                       1094.28695
#                  5   1095.00000 |********                          1096.22158
#                  1   1098.00000 |*                                 1100.23438
#                  3   1101.00000 |****                              1101.72771
#                  3   1104.00000 |****                              1105.65304
#                  0   1107.00000 |                                           -
#                  3   1110.00000 |****                              1110.81571
#
#                 10        > 95% |****************                  1121.16557
#
#        mean of 95%   1074.45558
#          95th %ile   1114.73038
 for      2.04161 seconds
Running:           mmap_wa8k# bin/mmap -E -C 200 -L -S -W -N mmap_wa8k -l 8k -I 1500 -w -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wa8k      1   1     80.76930          183        0       66     8192  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     77.98433                77.98433
#                    max    100.28736                84.98167
#                   mean     81.71582                80.85835
#                 median     80.89342                80.76930
#                 stddev      3.22108                 1.39813
#         standard error      0.22663                 0.10335
#   99% confidence level      0.52715                 0.24040
#                   skew      2.74182                 0.60852
#               kurtosis      9.24461                 0.10214
#       time correlation     -0.00953                -0.00250
#
#           elasped time      2.22818
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          170
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     77.00000 |*                                   77.98433
#                 12     78.00000 |*******                             78.80922
#                 41     79.00000 |************************            79.52241
#                 54     80.00000 |********************************    80.51409
#                 41     81.00000 |************************            81.48026
#                 20     82.00000 |***********                         82.52678
#                  4     83.00000 |**                                  83.25464
#
#                 10        > 95% |*****                               84.09575
#
#        mean of 95%     80.67121
#          95th %ile     83.30215
 for      2.23869 seconds
Running:         mmap_wa128k# bin/mmap -E -C 200 -L -S -W -N mmap_wa128k -l 128k -I 25000 -w -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp   length flags
mmap_wa128k    1   1    883.11450          180        0        4   131072  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    851.69050               851.69050
#                    max   1286.89050               928.68250
#                   mean    898.44884               884.66046
#                 median    886.37850               883.11450
#                 stddev     50.65172                14.68279
#         standard error      3.56384                 1.09439
#   99% confidence level      8.28950                 2.54555
#                   skew      4.20022                 0.32945
#               kurtosis     23.12040                -0.08123
#       time correlation     -0.28362                 0.05085
#
#           elasped time      0.87675
#      number of samples          180
#     number of outliers           22
#      getnsecs overhead          342
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    850.00000 |**                                 851.69050
#                  0    852.00000 |                                           -
#                  2    854.00000 |****                               855.05050
#                  1    856.00000 |**                                 857.89850
#                  2    858.00000 |****                               859.14650
#                  3    860.00000 |******                             860.67183
#                  3    862.00000 |******                             863.16783
#                  8    864.00000 |****************                   865.13850
#                  7    866.00000 |**************                     867.37964
#                  2    868.00000 |****                               869.54650
#                  2    870.00000 |****                               871.78650
#                 12    872.00000 |************************           873.09850
#                  7    874.00000 |**************                     875.24250
#                 16    876.00000 |********************************   877.09450
#                 11    878.00000 |**********************             879.00686
#                  7    880.00000 |**************                     881.26764
#                 10    882.00000 |********************               882.90330
#                  6    884.00000 |************                       884.86383
#                  5    886.00000 |**********                         886.99290
#                 10    888.00000 |********************               888.76570
#                  8    890.00000 |****************                   891.29850
#                  9    892.00000 |******************                 892.96339
#                 10    894.00000 |********************               894.74330
#                  9    896.00000 |******************                 897.25850
#                  3    898.00000 |******                             898.73050
#                  3    900.00000 |******                             900.99183
#                  8    902.00000 |****************                   903.09050
#                  2    904.00000 |****                               904.77850
#                  2    906.00000 |****                               907.05050
#                  2    908.00000 |****                               908.77850
#
#                  9        > 95% |******************                 918.09406
#
#        mean of 95%    882.90079
#          95th %ile    910.12250
 for      0.88951 seconds
 
Running:           unmap_z8k# bin/munmap -E -C 200 -L -S -W -N unmap_z8k -l 8k -I 250 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_z8k      1   1     13.97458          191        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.41970                13.41970
#                    max     31.51954                15.04914
#                   mean     14.29831                14.04608
#                 median     13.99954                13.97458
#                 stddev      1.67433                 0.33643
#         standard error      0.11781                 0.02434
#   99% confidence level      0.27401                 0.05662
#                   skew      8.09155                 0.66117
#               kurtosis     72.44061                 0.03021
#       time correlation      0.00264                 0.00046
#
#           elasped time      2.15685
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          183
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                102     13.00000 |********************************    13.79803
#                 79     14.00000 |************************            14.26417
#
#                 10        > 95% |***                                 14.85330
#
#        mean of 95%     14.00148
#          95th %ile     14.71954
 for      2.18230 seconds
Running:         unmap_z128k# bin/munmap -E -C 200 -L -S -W -N unmap_z128k -l 128k -I 250 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_z128k    1   1     13.51706          181        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.07994                13.07994
#                    max     17.46906                14.24218
#                   mean     13.74182                13.53918
#                 median     13.55738                13.51706
#                 stddev      0.69753                 0.26339
#         standard error      0.04908                 0.01958
#   99% confidence level      0.11416                 0.04554
#                   skew      2.74186                 0.47447
#               kurtosis      8.76683                -0.46254
#       time correlation     -0.00506                -0.00030
#
#           elasped time      2.09840
#      number of samples          181
#     number of outliers           21
#      getnsecs overhead          153
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                171     13.00000 |********************************    13.50599
#
#                 10        > 95% |*                                   14.10669
#
#        mean of 95%     13.50599
#          95th %ile     14.00474
 for      2.10918 seconds
Running:           unmap_t8k# bin/munmap -E -C 200 -L -S -W -N unmap_t8k -l 8k -I 250 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_t8k      1   1     13.70967          186        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.14967                13.14967
#                    max     16.94743                14.83159
#                   mean     13.90993                13.76079
#                 median     13.74231                13.70967
#                 stddev      0.64022                 0.36996
#         standard error      0.04505                 0.02713
#   99% confidence level      0.10478                 0.06310
#                   skew      2.03077                 0.89548
#               kurtosis      4.80764                 0.48800
#       time correlation     -0.00327                -0.00107
#
#           elasped time      2.20299
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          165
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                149     13.00000 |********************************    13.61358
#                 27     14.00000 |*****                               14.22771
#
#                 10        > 95% |**                                  14.69360
#
#        mean of 95%     13.70779
#          95th %ile     14.57495
 for      2.21389 seconds
Running:         unmap_t128k# bin/munmap -E -C 200 -L -S -W -N unmap_t128k -l 128k -I 250 -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_t128k    1   1     13.57467          187        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.05947                13.05947
#                    max     16.19419                14.49691
#                   mean     13.71245                13.59938
#                 median     13.59707                13.57467
#                 stddev      0.50838                 0.29949
#         standard error      0.03577                 0.02190
#   99% confidence level      0.08320                 0.05094
#                   skew      2.03511                 0.67911
#               kurtosis      5.24810                 0.21120
#       time correlation     -0.00133                -0.00022
#
#           elasped time      2.18034
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          147
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                170     13.00000 |********************************    13.53562
#                  7     14.00000 |*                                   14.09499
#
#                 10        > 95% |*                                   14.33634
#
#        mean of 95%     13.55774
#          95th %ile     14.22939
 for      2.19013 seconds
Running:           unmap_u8k# bin/munmap -E -C 200 -L -S -W -N unmap_u8k -l 8k -I 250 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_u8k      1   1     13.94956          190        0      400     8192  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     12.98443                12.98443
#                    max     19.89963                14.72972
#                   mean     14.06477                13.94383
#                 median     13.97003                13.94956
#                 stddev      0.65893                 0.33154
#         standard error      0.04636                 0.02405
#   99% confidence level      0.10784                 0.05595
#                   skew      4.27693                -0.16363
#               kurtosis     30.94770                 0.15025
#       time correlation      0.00099                 0.00185
#
#           elasped time      2.19481
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          210
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     12.00000 |*                                   12.98443
#                108     13.00000 |********************************    13.73002
#                 71     14.00000 |*********************               14.18711
#
#                 10        > 95% |**                                  14.62156
#
#        mean of 95%     13.90618
#          95th %ile     14.49932
 for      2.20424 seconds
Running:         unmap_u128k# bin/munmap -E -C 200 -L -S -W -N unmap_u128k -l 128k -I 250 -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_u128k    1   1     13.50678          186        0      400   131072  ----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     13.01718                13.01718
#                    max     20.40662                14.30486
#                   mean     13.67341                13.51205
#                 median     13.54006                13.50678
#                 stddev      0.73368                 0.26701
#         standard error      0.05162                 0.01958
#   99% confidence level      0.12007                 0.04554
#                   skew      5.12328                 0.51789
#               kurtosis     37.61347                 0.07506
#       time correlation     -0.00097                 0.00003
#
#           elasped time      2.16293
#      number of samples          186
#     number of outliers           16
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                176     13.00000 |********************************    13.47686
#
#                 10        > 95% |*                                   14.13142
#
#        mean of 95%     13.47686
#          95th %ile     13.93942
 for      2.17230 seconds
Running:           unmap_a8k# bin/munmap -E -C 200 -L -S -W -N unmap_a8k -l 8k -I 250 -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_a8k      1   1     22.53939          176        0      400     8192  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     21.97427                21.97427
#                    max     30.17139                23.61395
#                   mean     22.91075                22.60107
#                 median     22.61427                22.53939
#                 stddev      1.02601                 0.34530
#         standard error      0.07219                 0.02603
#   99% confidence level      0.16791                 0.06054
#                   skew      3.48607                 0.61816
#               kurtosis     16.38935                -0.09346
#       time correlation     -0.00436                -0.00200
#
#           elasped time      2.40035
#      number of samples          176
#     number of outliers           26
#      getnsecs overhead          308
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     21.00000 |*                                   21.97427
#                153     22.00000 |********************************    22.51220
#                 13     23.00000 |**                                  23.13602
#
#                  9        > 95% |*                                   23.40879
#
#        mean of 95%     22.55754
#          95th %ile     23.28435
 for      2.41161 seconds
Running:         unmap_a128k# bin/munmap -E -C 200 -L -S -W -N unmap_a128k -l 128k -I 250 -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_a128k    1   1     22.74451          184        0      400   131072  a---
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     22.10451                22.10451
#                    max     30.49427                23.80947
#                   mean     23.00785                22.81348
#                 median     22.81939                22.74451
#                 stddev      0.89657                 0.36609
#         standard error      0.06308                 0.02699
#   99% confidence level      0.14673                 0.06278
#                   skew      4.96309                 0.44490
#               kurtosis     34.35893                -0.35845
#       time correlation     -0.00174                -0.00019
#
#           elasped time      2.40868
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          180
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                128     22.00000 |********************************    22.61604
#                 46     23.00000 |***********                         23.18988
#
#                 10        > 95% |**                                  23.60921
#
#        mean of 95%     22.76774
#          95th %ile     23.48691
 for      2.42112 seconds
 
Running:          unmap_rz8k# bin/munmap -E -C 200 -L -S -W -N unmap_rz8k -l 8k -I 250 -r -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rz8k     1   1     41.89202          191        0      400     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     40.71185                40.71185
#                    max     48.26961                43.93745
#                   mean     42.24658                42.02906
#                 median     41.93169                41.89202
#                 stddev      1.13594                 0.65368
#         standard error      0.07992                 0.04730
#   99% confidence level      0.18590                 0.11002
#                   skew      2.48221                 0.96809
#               kurtosis      7.50816                 0.63462
#       time correlation      0.00085                 0.00025
#
#           elasped time      8.58696
#      number of samples          191
#     number of outliers           11
#      getnsecs overhead          186
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     40.00000 |*                                   40.88530
#                105     41.00000 |********************************    41.59966
#                 64     42.00000 |*******************                 42.36337
#                  9     43.00000 |**                                  43.14592
#
#                 10        > 95% |***                                 43.73611
#
#        mean of 95%     41.93474
#          95th %ile     43.40241
 for      8.59732 seconds
Running:        unmap_rz128k# bin/munmap -E -C 200 -L -S -W -N unmap_rz128k -l 128k -I 500 -r -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rz128k   1   1     47.51404          190        0      200   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     46.00876                46.00876
#                    max     61.13453                50.26476
#                   mean     47.95981                47.57905
#                 median     47.57420                47.51404
#                 stddev      1.99172                 0.94218
#         standard error      0.14014                 0.06835
#   99% confidence level      0.32596                 0.15899
#                   skew      3.83078                 0.73897
#               kurtosis     19.44008                 0.24865
#       time correlation      0.00324                -0.00005
#
#           elasped time     21.36242
#      number of samples          190
#     number of outliers           12
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 58     46.00000 |************************            46.59838
#                 75     47.00000 |********************************    47.46745
#                 44     48.00000 |******************                  48.41496
#                  3     49.00000 |*                                   49.18103
#
#                 10        > 95% |****                                49.94528
#
#        mean of 95%     47.44759
#          95th %ile     49.36876
 for     21.37289 seconds
Running:          unmap_rt8k# bin/munmap -E -C 200 -L -S -W -N unmap_rt8k -l 8k -I 500 -r -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rt8k     1   1     49.42864          187        0      200     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     47.87344                47.87344
#                    max     62.23888                52.33936
#                   mean     50.01504                49.56275
#                 median     49.51312                49.42864
#                 stddev      1.98225                 0.93912
#         standard error      0.13947                 0.06868
#   99% confidence level      0.32441                 0.15974
#                   skew      3.04166                 0.78874
#               kurtosis     12.11469                 0.35685
#       time correlation      0.00067                 0.00024
#
#           elasped time      4.61785
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          224
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     47.00000 |*                                   47.87344
#                 57     48.00000 |***********************             48.62237
#                 79     49.00000 |********************************    49.47764
#                 33     50.00000 |*************                       50.38406
#                  7     51.00000 |**                                  51.22046
#
#                 10        > 95% |****                                51.89341
#
#        mean of 95%     49.43107
#          95th %ile     51.55856
 for      4.63900 seconds
Running:        unmap_rt128k# bin/munmap -E -C 200 -L -S -W -N unmap_rt128k -l 128k -I 1500 -r -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_rt128k   1   1     84.78311          193        0       66   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     81.42020                81.42020
#                    max     99.29753                89.51135
#                   mean     85.28875                84.88725
#                 median     84.90723                84.78311
#                 stddev      2.49754                 1.56959
#         standard error      0.17573                 0.11298
#   99% confidence level      0.40874                 0.26280
#                   skew      2.39936                 0.28097
#               kurtosis      8.79139                -0.18222
#       time correlation     -0.01051                -0.00991
#
#           elasped time      4.87768
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          219
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     81.00000 |***                                 81.68628
#                 16     82.00000 |**********                          82.56226
#                 38     83.00000 |************************            83.61100
#                 49     84.00000 |********************************    84.48167
#                 40     85.00000 |**************************          85.52861
#                 27     86.00000 |*****************                   86.45142
#                  8     87.00000 |*****                               87.30965
#
#                 10        > 95% |******                              88.31823
#
#        mean of 95%     84.69977
#          95th %ile     87.68056
 for      4.88857 seconds
Running:          unmap_ru8k# bin/munmap -E -C 200 -L -S -W -N unmap_ru8k -l 8k -I 500 -r -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ru8k     1   1     47.99408          192        0      200     8192  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     46.84848                46.84848
#                    max     53.00912                50.30960
#                   mean     48.31223                48.13638
#                 median     48.09904                47.99408
#                 stddev      1.06602                 0.73646
#         standard error      0.07500                 0.05315
#   99% confidence level      0.17446                 0.12362
#                   skew      1.79483                 0.78250
#               kurtosis      3.91382                 0.19321
#       time correlation     -0.00078                -0.00174
#
#           elasped time      4.48211
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     46.00000 |*                                   46.91760
#                 95     47.00000 |********************************    47.58556
#                 69     48.00000 |***********************             48.43696
#                 15     49.00000 |*****                               49.28150
#
#                 10        > 95% |***                                 49.94314
#
#        mean of 95%     48.03711
#          95th %ile     49.55824
 for      4.49194 seconds
Running:        unmap_ru128k# bin/munmap -E -C 200 -L -S -W -N unmap_ru128k -l 128k -I 1500 -r -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ru128k   1   1     85.81497          185        0       66   131072  -r--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     82.11461                82.11461
#                    max    124.99848                90.69448
#                   mean     87.11905                86.04476
#                 median     86.11752                85.81497
#                 stddev      4.54828                 1.62640
#         standard error      0.32002                 0.11958
#   99% confidence level      0.74436                 0.27813
#                   skew      4.40220                 0.36627
#               kurtosis     27.18646                -0.37519
#       time correlation     -0.01861                -0.00508
#
#           elasped time      4.99719
#      number of samples          185
#     number of outliers           17
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     82.00000 |*                                   82.43461
#                 14     83.00000 |**********                          83.61237
#                 39     84.00000 |*****************************       84.58798
#                 43     85.00000 |********************************    85.47742
#                 37     86.00000 |***************************         86.48034
#                 22     87.00000 |****************                    87.37724
#                 18     88.00000 |*************                       88.41462
#
#                 10        > 95% |*******                             89.48430
#
#        mean of 95%     85.84822
#          95th %ile     89.01109
 for      5.01594 seconds
Running:          unmap_ra8k# bin/munmap -E -C 200 -L -S -W -N unmap_ra8k -l 8k -I 250 -r -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ra8k     1   1     54.31694          184        0      400     8192  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     53.24173                53.24173
#                    max     66.14670                56.00910
#                   mean     54.87433                54.42468
#                 median     54.37454                54.31694
#                 stddev      1.85793                 0.62336
#         standard error      0.13072                 0.04595
#   99% confidence level      0.30406                 0.10689
#                   skew      3.96267                 0.55921
#               kurtosis     18.42182                -0.36243
#       time correlation     -0.00389                 0.00008
#
#           elasped time      8.33728
#      number of samples          184
#     number of outliers           18
#      getnsecs overhead          202
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 48     53.00000 |***************                     53.72529
#                102     54.00000 |********************************    54.41239
#                 24     55.00000 |*******                             55.29995
#
#                 10        > 95% |***                                 55.80653
#
#        mean of 95%     54.34527
#          95th %ile     55.55725
 for      8.35652 seconds
Running:        unmap_ra128k# bin/munmap -E -C 200 -L -S -W -N unmap_ra128k -l 128k -I 500 -r -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_ra128k   1   1     58.42469          187        0      200   131072  ar--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     56.44326                56.44326
#                    max     76.12454                60.95909
#                   mean     59.15388                58.56593
#                 median     58.50918                58.42469
#                 stddev      2.72923                 0.83959
#         standard error      0.19203                 0.06140
#   99% confidence level      0.44666                 0.14281
#                   skew      4.53355                 0.45791
#               kurtosis     22.86653                -0.21424
#       time correlation     -0.00080                -0.00179
#
#           elasped time     20.21440
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          181
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     56.00000 |*                                   56.44326
#                 49     57.00000 |*******************                 57.63906
#                 79     58.00000 |********************************    58.42320
#                 48     59.00000 |*******************                 59.40317
#
#                 10        > 95% |****                                60.42866
#
#        mean of 95%     58.46069
#          95th %ile     60.10406
 for     20.22464 seconds
 
Running:        conn_connect# bin/connection -E -C 200 -L -S -W -N conn_connect -B 256 -c 
             prc thr   usecs/call      samples   errors cnt/samp 
conn_connect   1   1     93.10533          182        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     88.04233                88.04233
#                    max    225.65933               103.28033
#                   mean     97.60464                93.53891
#                 median     93.38633                93.10533
#                 stddev     18.01385                 3.29735
#         standard error      1.26745                 0.24442
#   99% confidence level      2.94809                 0.56851
#                   skew      5.04002                 0.81730
#               kurtosis     26.32785                 0.15755
#       time correlation     -0.07480                 0.00243
#
#           elasped time      7.73640
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          172
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     88.00000 |*****                               88.60293
#                 18     89.00000 |******************                  89.49733
#                 18     90.00000 |******************                  90.40799
#                 26     91.00000 |**************************          91.48041
#                 20     92.00000 |********************                92.48098
#                 31     93.00000 |********************************    93.46033
#                 17     94.00000 |*****************                   94.44168
#                  8     95.00000 |********                            95.43395
#                 11     96.00000 |***********                         96.46296
#                  6     97.00000 |******                              97.45699
#                  6     98.00000 |******                              98.45299
#                  5     99.00000 |*****                               99.48753
#                  1    100.00000 |*                                  100.15133
#
#                 10        > 95% |**********                         101.42693
#
#        mean of 95%     93.08030
#          95th %ile    100.24133
 for      7.75692 seconds
 
Running:          unmap_wz8k# bin/munmap -E -C 200 -L -S -W -N unmap_wz8k -l 8k -I 500 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wz8k     1   1     69.19459          192        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     66.93411                66.93411
#                    max    102.83299                72.24867
#                   mean     69.70614                69.29042
#                 median     69.29955                69.19459
#                 stddev      2.88186                 1.11535
#         standard error      0.20277                 0.08049
#   99% confidence level      0.47164                 0.18723
#                   skew      7.95163                 0.32578
#               kurtosis     84.91345                -0.46534
#       time correlation     -0.00182                -0.00033
#
#           elasped time      7.04397
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          186
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     66.00000 |*                                   66.93411
#                 24     67.00000 |************                        67.69144
#                 61     68.00000 |********************************    68.54236
#                 54     69.00000 |****************************        69.50897
#                 40     70.00000 |********************                70.45763
#                  2     71.00000 |*                                   71.10627
#
#                 10        > 95% |*****                               71.71453
#
#        mean of 95%     69.15722
#          95th %ile     71.15427
 for      7.05777 seconds
Running:        unmap_wz128k# bin/munmap -E -C 200 -L -S -W -N unmap_wz128k -l 128k -I 4000 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wz128k   1   1    163.47196          188        0       25   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    153.95900               153.95900
#                    max    201.31900               174.19324
#                   mean    165.43556               163.87078
#                 median    163.83036               163.47196
#                 stddev      7.08446                 3.78893
#         standard error      0.49846                 0.27634
#   99% confidence level      1.15942                 0.64276
#                   skew      2.42973                 0.53401
#               kurtosis      7.54650                 0.11896
#       time correlation     -0.01306                 0.01468
#
#           elasped time      5.59555
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          241
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    153.00000 |*                                  153.95900
#                  0    154.00000 |                                           -
#                  0    155.00000 |                                           -
#                  1    156.00000 |*                                  156.83644
#                  5    157.00000 |******                             157.61468
#                  8    158.00000 |**********                         158.77052
#                 10    159.00000 |************                       159.40054
#                 16    160.00000 |********************               160.55996
#                 25    161.00000 |********************************   161.39897
#                 20    162.00000 |*************************          162.50786
#                 19    163.00000 |************************           163.50699
#                 18    164.00000 |***********************            164.54659
#                 16    165.00000 |********************               165.53404
#                 17    166.00000 |*********************              166.54276
#                  8    167.00000 |**********                         167.78684
#                  6    168.00000 |*******                            168.39228
#                  5    169.00000 |******                             169.66306
#                  2    170.00000 |**                                 170.60924
#                  1    171.00000 |*                                  171.23388
#
#                 10        > 95% |************                       172.89174
#
#        mean of 95%    163.36398
#          95th %ile    171.54108
 for      5.60834 seconds
Running:          unmap_wt8k# bin/munmap -E -C 200 -L -S -W -N unmap_wt8k -l 8k -I 500 -w -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wt8k     1   1     69.40855          192        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     67.70487                67.70487
#                    max     83.44374                71.98902
#                   mean     69.75572                69.47856
#                 median     69.45974                69.40855
#                 stddev      1.66981                 0.87352
#         standard error      0.11749                 0.06304
#   99% confidence level      0.27328                 0.14663
#                   skew      4.17303                 0.35772
#               kurtosis     26.99710                -0.62109
#       time correlation     -0.00067                -0.00162
#
#           elasped time      7.67421
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          147
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3     67.00000 |*                                   67.87596
#                 63     68.00000 |****************************        68.60178
#                 72     69.00000 |********************************    69.46391
#                 44     70.00000 |*******************                 70.46533
#
#                 10        > 95% |****                                71.24675
#
#        mean of 95%     69.38140
#          95th %ile     70.98423
 for      7.68393 seconds
Running:        unmap_wt128k# bin/munmap -E -C 200 -L -S -W -N unmap_wt128k -l 128k -I 5000 -w -f /tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wt128k   1   1    154.33380          196        0       20   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    145.23300               145.23300
#                    max    244.13860               165.23940
#                   mean    155.22030               154.30813
#                 median    154.39780               154.33380
#                 stddev      7.94347                 3.89812
#         standard error      0.55890                 0.27844
#   99% confidence level      1.30000                 0.64764
#                   skew      7.20291                 0.31438
#               kurtosis     75.63571                 0.17957
#       time correlation     -0.01026                -0.00316
#
#           elasped time      5.09450
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          172
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    145.00000 |*                                  145.23300
#                  4    146.00000 |****                               146.49060
#                  4    147.00000 |****                               147.44100
#                  9    148.00000 |**********                         148.52829
#                  9    149.00000 |**********                         149.61487
#                 13    150.00000 |***************                    150.48198
#                 11    151.00000 |*************                      151.45613
#                 16    152.00000 |******************                 152.56660
#                 27    153.00000 |********************************   153.52740
#                 25    154.00000 |*****************************      154.51198
#                 17    155.00000 |********************               155.46171
#                 19    156.00000 |**********************             156.44108
#                 12    157.00000 |**************                     157.56153
#                  7    158.00000 |********                           158.50477
#                  7    159.00000 |********                           159.55620
#                  5    160.00000 |*****                              160.32932
#
#                 10        > 95% |***********                        163.47172
#
#        mean of 95%    153.81547
#          95th %ile    160.69540
 for      5.10650 seconds
Running:          unmap_wu8k# bin/munmap -E -C 200 -L -S -W -N unmap_wu8k -l 8k -I 500 -w -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wu8k     1   1     68.87259          193        0      200     8192  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     66.41371                66.41371
#                    max     83.75899                72.65371
#                   mean     69.41687                69.01275
#                 median     68.99931                68.87259
#                 stddev      2.42275                 1.24697
#         standard error      0.17046                 0.08976
#   99% confidence level      0.39650                 0.20878
#                   skew      3.59996                 0.64467
#               kurtosis     16.81452                 0.23920
#       time correlation      0.00064                 0.00286
#
#           elasped time      7.45058
#      number of samples          193
#     number of outliers            9
#      getnsecs overhead          330
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     66.00000 |**                                  66.55611
#                 44     67.00000 |*************************           67.68882
#                 54     68.00000 |*******************************     68.49888
#                 55     69.00000 |********************************    69.47528
#                 19     70.00000 |***********                         70.28436
#                  7     71.00000 |****                                71.31556
#
#                 10        > 95% |*****                               72.02369
#
#        mean of 95%     68.84822
#          95th %ile     71.58363
 for      7.46553 seconds
Running:        unmap_wu128k# bin/munmap -E -C 200 -L -S -W -N unmap_wu128k -l 128k -I 5000 -w -f /var/tmp/libmicro.2571/data 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wu128k   1   1    165.99485          189        0       20   131072  --w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    155.03805               155.03805
#                    max    314.43645               177.64285
#                   mean    168.78348               165.81531
#                 median    166.64765               165.99485
#                 stddev     16.67973                 4.07032
#         standard error      1.17358                 0.29607
#   99% confidence level      2.72975                 0.68866
#                   skew      6.72793                 0.06794
#               kurtosis     51.40659                -0.01322
#       time correlation      0.01023                 0.02366
#
#           elasped time      5.13917
#      number of samples          189
#     number of outliers           13
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    155.00000 |*                                  155.03805
#                  2    156.00000 |***                                156.91325
#                  3    157.00000 |****                               157.54258
#                  3    158.00000 |****                               158.69032
#                  6    159.00000 |*********                          159.46685
#                  7    160.00000 |**********                         160.68468
#                  8    161.00000 |************                       161.42205
#                 19    162.00000 |****************************       162.48226
#                 20    163.00000 |******************************     163.51357
#                 11    164.00000 |****************                   164.66947
#                 15    165.00000 |**********************             165.46578
#                 16    166.00000 |************************           166.60445
#                 21    167.00000 |********************************   167.62411
#                 20    168.00000 |******************************     168.44029
#                  9    169.00000 |*************                      169.44374
#                 12    170.00000 |******************                 170.41618
#                  4    171.00000 |******                             171.45405
#                  2    172.00000 |***                                172.26685
#
#                 10        > 95% |***************                    174.28541
#
#        mean of 95%    165.34212
#          95th %ile    172.29245
 for      5.15091 seconds
Running:          unmap_wa8k# bin/munmap -E -C 200 -L -S -W -N unmap_wa8k -l 8k -I 500 -w -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wa8k     1   1     83.13392          187        0      200     8192  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     81.34960                81.34960
#                    max    102.76912                86.79472
#                   mean     84.09364                83.31963
#                 median     83.20944                83.13392
#                 stddev      3.23650                 1.20694
#         standard error      0.22772                 0.08826
#   99% confidence level      0.52968                 0.20529
#                   skew      3.39163                 0.65394
#               kurtosis     13.34606                -0.30838
#       time correlation     -0.00746                 0.00258
#
#           elasped time      6.68278
#      number of samples          187
#     number of outliers           15
#      getnsecs overhead          160
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 20     81.00000 |**********                          81.71984
#                 63     82.00000 |********************************    82.42976
#                 53     83.00000 |**************************          83.40963
#                 28     84.00000 |**************                      84.40121
#                 13     85.00000 |******                              85.32882
#
#                 10        > 95% |*****                               86.00803
#
#        mean of 95%     83.16774
#          95th %ile     85.50832
 for      6.69287 seconds
Running:        unmap_wa128k# bin/munmap -E -C 200 -L -S -W -N unmap_wa128k -l 128k -I 5000 -w -f MAP_ANON 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
unmap_wa128k   1   1    184.49125          198        0       20   131072  a-w-
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    175.14725               175.14725
#                    max    221.68805               197.98245
#                   mean    185.73925               185.16222
#                 median    184.59365               184.49125
#                 stddev      6.19647                 4.67438
#         standard error      0.43598                 0.33219
#   99% confidence level      1.01409                 0.77268
#                   skew      2.18526                 0.58482
#               kurtosis      8.29021                -0.12463
#       time correlation     -0.04733                -0.03242
#
#           elasped time      4.43052
#      number of samples          198
#     number of outliers            4
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    175.00000 |*                                  175.14725
#                  1    176.00000 |*                                  176.99045
#                  4    177.00000 |******                             177.75205
#                  9    178.00000 |**************                     178.42405
#                  7    179.00000 |***********                        179.64736
#                 16    180.00000 |*************************          180.67605
#                 19    181.00000 |******************************     181.52232
#                 16    182.00000 |*************************          182.49605
#                 15    183.00000 |************************           183.53296
#                 20    184.00000 |********************************   184.44069
#                 17    185.00000 |***************************        185.48739
#                 13    186.00000 |********************               186.46343
#                 10    187.00000 |****************                   187.49285
#                  9    188.00000 |**************                     188.48627
#                 11    189.00000 |*****************                  189.69270
#                  6    190.00000 |*********                          190.55205
#                  4    191.00000 |******                             191.59205
#                  6    192.00000 |*********                          192.43365
#                  4    193.00000 |******                             193.48965
#
#                 10        > 95% |****************                   196.06629
#
#        mean of 95%    184.58221
#          95th %ile    193.79685
 for      4.44679 seconds
 
Running:           mprot_z8k# bin/mprotect -E -C 200 -L -S -W -N mprot_z8k -l 8k -I 300 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_z8k      1   1     12.79491          178        0      333     8192 -----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     12.41975                12.41975
#                    max     18.03253                13.43529
#                   mean     13.06679                12.82332
#                 median     12.84027                12.79491
#                 stddev      0.80447                 0.21938
#         standard error      0.05660                 0.01644
#   99% confidence level      0.13166                 0.03825
#                   skew      3.32673                 0.67480
#               kurtosis     12.60480                 0.05037
#       time correlation     -0.00560                -0.00096
#
#           elasped time      0.88448
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          159
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                147     12.00000 |********************************    12.74677
#                 22     13.00000 |****                                13.11856
#
#                  9        > 95% |*                                   13.35184
#
#        mean of 95%     12.79517
#          95th %ile     13.27847
 for      0.91085 seconds
Running:         mprot_z128k# bin/mprotect -E -C 200 -L -S -W -N mprot_z128k -l 128k -I 500 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_z128k    1   1     11.90954          172        0      200   131072 -----
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     11.19531                11.19531
#                    max     25.34826                12.72363
#                   mean     12.35516                11.91029
#                 median     11.98378                11.90954
#                 stddev      1.47872                 0.32668
#         standard error      0.10404                 0.02491
#   99% confidence level      0.24200                 0.05794
#                   skew      4.88035                 0.29252
#               kurtosis     32.55984                -0.30723
#       time correlation     -0.00871                -0.00106
#
#           elasped time      0.50324
#      number of samples          172
#     number of outliers           30
#      getnsecs overhead          171
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                110     11.00000 |********************************    11.71830
#                 53     12.00000 |***************                     12.18583
#
#                  9        > 95% |**                                  12.63417
#
#        mean of 95%     11.87032
#          95th %ile     12.46378
 for      0.51436 seconds
Running:          mprot_wz8k# bin/mprotect -E -C 200 -L -S -W -N mprot_wz8k -l 8k -I 500 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_wz8k     1   1     41.43372          178        0      200     8192 --w--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     33.26861                40.28813
#                    max     66.67788                42.80332
#                   mean     42.05508                41.44261
#                 median     41.52461                41.43372
#                 stddev      2.86709                 0.52962
#         standard error      0.20173                 0.03970
#   99% confidence level      0.46922                 0.09233
#                   skew      4.85136                 0.07931
#               kurtosis     31.99611                -0.63545
#       time correlation      0.00281                -0.00194
#
#           elasped time      1.70520
#      number of samples          178
#     number of outliers           24
#      getnsecs overhead          231
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 44     40.00000 |*************                       40.76199
#                107     41.00000 |********************************    41.51687
#                 18     42.00000 |*****                               42.14050
#
#                  9        > 95% |**                                  42.49157
#
#        mean of 95%     41.38675
#          95th %ile     42.30925
 for      1.76581 seconds
Running:        mprot_wz128k# bin/mprotect -E -C 200 -L -S -W -N mprot_wz128k -l 128k -I 500 -w -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_wz128k   1   1     41.53393          183        0      200   131072 --w--
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     40.09905                40.09905
#                    max     54.10865                43.76369
#                   mean     42.11177                41.60985
#                 median     41.62482                41.53393
#                 stddev      1.87961                 0.72169
#         standard error      0.13225                 0.05335
#   99% confidence level      0.30761                 0.12409
#                   skew      3.14716                 0.70612
#               kurtosis     12.36413                 0.50706
#       time correlation     -0.00731                -0.00249
#
#           elasped time      1.71002
#      number of samples          183
#     number of outliers           19
#      getnsecs overhead          157
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 37     40.00000 |***********                         40.72985
#                101     41.00000 |********************************    41.50143
#                 34     42.00000 |**********                          42.31225
#                  1     43.00000 |*                                   43.03410
#
#                 10        > 95% |***                                 43.43038
#
#        mean of 95%     41.50462
#          95th %ile     43.08913
 for      1.74341 seconds
Running:         mprot_twz8k# bin/mprotect -E -C 200 -L -S -W -N mprot_twz8k -l 8k -I 500 -w -t -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_twz8k    1   1     43.13524          196        0      200     8192 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     41.06804                41.06804
#                    max     71.53972                46.45428
#                   mean     43.53632                43.24372
#                 median     43.14932                43.13524
#                 stddev      2.53291                 1.16580
#         standard error      0.17821                 0.08327
#   99% confidence level      0.41453                 0.19369
#                   skew      7.31505                 0.54502
#               kurtosis     73.83389                -0.11034
#       time correlation     -0.01431                -0.01071
#
#           elasped time      1.76551
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          153
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 26     41.00000 |*************                       41.60987
#                 63     42.00000 |********************************    42.50728
#                 59     43.00000 |*****************************       43.44020
#                 32     44.00000 |****************                    44.43411
#                  6     45.00000 |***                                 45.13993
#
#                 10        > 95% |*****                               46.02496
#
#        mean of 95%     43.09419
#          95th %ile     45.42388
 for      1.79524 seconds
Running:        mprot_tw128k# bin/mprotect -E -C 200 -L -S -W -N mprot_tw128k -l 128k -I 1000 -w -t -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_tw128k   1   1     42.61739          182        0      100   131072 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     41.30923                41.30923
#                    max     54.89771                44.69867
#                   mean     43.30114                42.78182
#                 median     42.73771                42.61739
#                 stddev      1.86206                 0.74572
#         standard error      0.13101                 0.05528
#   99% confidence level      0.30474                 0.12857
#                   skew      2.81698                 0.54416
#               kurtosis      9.99807                -0.52466
#       time correlation     -0.00918                -0.00285
#
#           elasped time      0.88105
#      number of samples          182
#     number of outliers           20
#      getnsecs overhead          149
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 24     41.00000 |********                            41.82144
#                 93     42.00000 |********************************    42.43943
#                 52     43.00000 |*****************                   43.44841
#                  3     44.00000 |*                                   44.09280
#
#                 10        > 95% |***                                 44.41144
#
#        mean of 95%     42.68708
#          95th %ile     44.19947
 for      0.90585 seconds
Running:          mprot_tw4m# bin/mprotect -E -C 200 -L -S -W -N mprot_tw4m -l 4m -w -t -B 10 -f /dev/zero 
             prc thr   usecs/call      samples   errors cnt/samp     size flags
mprot_tw4m     1   1    149.78920          188        0       10  4194304 --w-t
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    142.77480               142.77480
#                    max    204.57320               163.17800
#                   mean    152.64284               150.53078
#                 median    150.48040               149.78920
#                 stddev      9.55892                 4.77766
#         standard error      0.67256                 0.34845
#   99% confidence level      1.56438                 0.81049
#                   skew      2.74038                 0.52950
#               kurtosis      9.40552                -0.63473
#       time correlation     -0.03449                -0.01161
#
#           elasped time      0.31482
#      number of samples          188
#     number of outliers           14
#      getnsecs overhead          220
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    142.00000 |*                                  142.77480
#                  6    143.00000 |*********                          143.81160
#                 10    144.00000 |***************                    144.40040
#                 21    145.00000 |********************************   145.49937
#                 20    146.00000 |******************************     146.51880
#                 15    147.00000 |**********************             147.57736
#                 13    148.00000 |*******************                148.44028
#                 13    149.00000 |*******************                149.56471
#                 11    150.00000 |****************                   150.62702
#                 11    151.00000 |****************                   151.59982
#                  6    152.00000 |*********                          152.86547
#                 14    153.00000 |*********************              153.63834
#                 14    154.00000 |*********************              154.52886
#                  8    155.00000 |************                       155.63240
#                  3    156.00000 |****                               156.94013
#                  6    157.00000 |*********                          157.52040
#                  6    158.00000 |*********                          158.46760
#
#                 10        > 95% |***************                    160.87144
#
#        mean of 95%    149.94985
#          95th %ile    159.26120
 for      0.35907 seconds
 
Running:           pipe_pst1# bin/pipe -E -C 200 -L -S -W -N pipe_pst1 -s 1 -I 500 -x pipe -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pst1      1   1     33.31500          192        0      200 st pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     31.39885                31.39885
#                    max     53.31885                37.94989
#                   mean     34.20482                33.78094
#                 median     33.56461                33.31500
#                 stddev      2.54714                 1.44475
#         standard error      0.17922                 0.10427
#   99% confidence level      0.41686                 0.24252
#                   skew      3.56337                 0.86235
#               kurtosis     19.59900                 0.03668
#       time correlation     -0.01486                -0.00766
#
#           elasped time      1.43830
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          167
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  8     31.00000 |****                                31.79420
#                 64     32.00000 |********************************    32.55778
#                 46     33.00000 |***********************             33.38134
#                 38     34.00000 |*******************                 34.46114
#                 16     35.00000 |********                            35.45621
#                 10     36.00000 |*****                               36.28525
#
#                 10        > 95% |*****                               37.26726
#
#        mean of 95%     33.58939
#          95th %ile     36.65452
 for      1.46196 seconds
Running:           pipe_pmt1# bin/pipe -E -C 200 -L -S -W -N pipe_pmt1 -s 1 -I 2000 -x pipe -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmt1      1   1    201.71956          200        0       50 mt pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    125.05780               178.65396
#                    max    238.65524               230.59636
#                   mean    202.06574               202.26784
#                 median    201.71956               201.71956
#                 stddev     11.84944                10.25922
#         standard error      0.83372                 0.72544
#   99% confidence level      1.93924                 1.68736
#                   skew     -0.93736                 0.37025
#               kurtosis      7.80070                -0.29969
#       time correlation      0.00101                -0.01575
#
#           elasped time      2.26197
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    178.00000 |*                                  178.65396
#                  1    180.00000 |*                                  181.45460
#                  1    182.00000 |*                                  182.07412
#                  2    184.00000 |***                                185.08468
#                  8    186.00000 |************                       187.08596
#                  7    188.00000 |**********                         189.03439
#                 14    190.00000 |*********************              190.89442
#                 14    192.00000 |*********************              192.78370
#                 13    194.00000 |*******************                194.95525
#                 11    196.00000 |****************                   197.17253
#                 15    198.00000 |**********************             199.08447
#                 15    200.00000 |**********************             201.02222
#                 21    202.00000 |********************************   203.15852
#                 11    204.00000 |****************                   204.95587
#                 10    206.00000 |***************                    206.99879
#                 12    208.00000 |******************                 209.06036
#                  9    210.00000 |*************                      211.17677
#                  8    212.00000 |************                       212.61236
#                  6    214.00000 |*********                          214.53065
#                  4    216.00000 |******                             217.36628
#                  4    218.00000 |******                             218.99700
#                  3    220.00000 |****                               220.71647
#
#                 10        > 95% |***************                    224.90446
#
#        mean of 95%    201.07643
#          95th %ile    221.71828
 for      2.27772 seconds
Running:           pipe_pmp1# bin/pipe -E -C 200 -L -S -W -N pipe_pmp1 -s 1 -I 2000 -x pipe -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmp1      1   1    199.81492          201        0       50 mp pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    120.68020               177.25620
#                    max    229.43924               229.43924
#                   mean    200.25124               200.64711
#                 median    199.81492               199.81492
#                 stddev     12.07258                10.70797
#         standard error      0.84942                 0.75528
#   99% confidence level      1.97576                 1.75679
#                   skew     -1.17615                 0.23715
#               kurtosis      7.90734                -0.50245
#       time correlation     -0.01384                -0.01556
#
#           elasped time      2.63077
#      number of samples          201
#     number of outliers            1
#      getnsecs overhead          166
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    176.00000 |*                                  177.25620
#                  3    178.00000 |*****                              179.38271
#                  1    180.00000 |*                                  180.09780
#                  3    182.00000 |*****                              182.88991
#                  8    184.00000 |**************                     184.96180
#                  6    186.00000 |**********                         187.25983
#                  9    188.00000 |****************                   188.82968
#                 18    190.00000 |********************************   190.91750
#                 15    192.00000 |**************************         193.03126
#                  6    194.00000 |**********                         194.96713
#                 16    196.00000 |****************************       196.96276
#                 16    198.00000 |****************************       199.09236
#                 11    200.00000 |*******************                201.08608
#                 14    202.00000 |************************           202.99846
#                  9    204.00000 |****************                   204.79042
#                 12    206.00000 |*********************              206.79860
#                 16    208.00000 |****************************       209.16436
#                  9    210.00000 |****************                   210.92987
#                  5    212.00000 |********                           213.30919
#                  2    214.00000 |***                                215.37716
#                  7    216.00000 |************                       216.92157
#                  3    218.00000 |*****                              218.74356
#
#                 11        > 95% |*******************                222.62778
#
#        mean of 95%    199.37455
#          95th %ile    219.59348
 for      2.64533 seconds
Running:          pipe_pst4k# bin/pipe -E -C 200 -L -S -W -N pipe_pst4k -s 4k -I 500 -x pipe -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pst4k     1   1     35.22354          192        0      200 st pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     33.30994                33.30994
#                    max     48.15922                40.55986
#                   mean     36.18647                35.78502
#                 median     35.29906                35.22354
#                 stddev      2.46587                 1.67217
#         standard error      0.17350                 0.12068
#   99% confidence level      0.40356                 0.28070
#                   skew      2.14667                 1.16053
#               kurtosis      5.71503                 0.59063
#       time correlation     -0.01335                -0.00893
#
#           elasped time      1.51893
#      number of samples          192
#     number of outliers           10
#      getnsecs overhead          156
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                 11     33.00000 |*****                               33.80937
#                 67     34.00000 |********************************    34.53467
#                 53     35.00000 |*************************           35.40559
#                 23     36.00000 |**********                          36.51584
#                 14     37.00000 |******                              37.58825
#                 11     38.00000 |*****                               38.49371
#                  3     39.00000 |*                                   39.14034
#
#                 10        > 95% |****                                40.15500
#
#        mean of 95%     35.54491
#          95th %ile     39.39890
 for      1.53239 seconds
Running:          pipe_pmt4k# bin/pipe -E -C 200 -L -S -W -N pipe_pmt4k -s 4k -I 2000 -x pipe -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmt4k     1   1    205.69270          200        0       50 mt pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    129.03606               188.41270
#                    max    238.53750               234.05238
#                   mean    205.92574               206.14713
#                 median    205.69270               205.69270
#                 stddev     11.01905                 9.35615
#         standard error      0.77530                 0.66158
#   99% confidence level      1.80334                 1.53883
#                   skew     -1.20950                 0.49716
#               kurtosis     10.63390                -0.10175
#       time correlation      0.01026                -0.00329
#
#           elasped time      2.30118
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          165
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4    188.00000 |*****                              189.16406
#                  5    190.00000 |******                             190.86006
#                  6    192.00000 |********                           193.07873
#                 12    194.00000 |****************                   195.16043
#                 17    196.00000 |**********************             197.11068
#                 15    198.00000 |********************               198.91450
#                  9    200.00000 |************                       200.77295
#                 17    202.00000 |**********************             203.09054
#                 20    204.00000 |**************************         205.05321
#                 24    206.00000 |********************************   206.92726
#                 10    208.00000 |*************                      208.83075
#                 10    210.00000 |*************                      210.82550
#                 10    212.00000 |*************                      213.22268
#                 11    214.00000 |**************                     215.17354
#                  7    216.00000 |*********                          217.11176
#                  5    218.00000 |******                             218.80092
#                  7    220.00000 |*********                          221.28237
#                  1    222.00000 |*                                  222.09718
#
#                 10        > 95% |*************                      227.60988
#
#        mean of 95%    205.01751
#          95th %ile    222.59894
 for      2.31208 seconds
Running:          pipe_pmp4k# bin/pipe -E -C 200 -L -S -W -N pipe_pmp4k -s 4k -I 2000 -x pipe -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_pmp4k     1   1    203.51690          199        0       50 mp pipe
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    148.11338               181.21418
#                    max    252.03914               230.19722
#                   mean    203.98221               203.86601
#                 median    204.01866               203.51690
#                 stddev     11.15959                 9.70300
#         standard error      0.78519                 0.68783
#   99% confidence level      1.82634                 1.59989
#                   skew     -0.08548                 0.08964
#               kurtosis      3.37269                -0.74435
#       time correlation      0.00347                 0.00253
#
#           elasped time      2.69298
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          155
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    180.00000 |*                                  181.21418
#                  0    182.00000 |                                           -
#                  1    184.00000 |*                                  184.27594
#                  6    186.00000 |**********                         187.11327
#                  8    188.00000 |**************                     188.92426
#                  8    190.00000 |**************                     191.09642
#                  8    192.00000 |**************                     193.04522
#                 18    194.00000 |********************************   194.95598
#                 11    196.00000 |*******************                196.99309
#                 15    198.00000 |**************************         198.93279
#                 12    200.00000 |*********************              200.96202
#                 12    202.00000 |*********************              202.58207
#                 15    204.00000 |**************************         205.16383
#                 12    206.00000 |*********************              207.06378
#                 14    208.00000 |************************           208.88156
#                 13    210.00000 |***********************            210.91176
#                 11    212.00000 |*******************                212.87579
#                  8    214.00000 |**************                     214.83082
#                  9    216.00000 |****************                   216.90172
#                  7    218.00000 |************                       218.66625
#
#                 10        > 95% |*****************                  222.25098
#
#        mean of 95%    202.89326
#          95th %ile    219.19946
 for      2.70423 seconds
 
Running:           pipe_sst1# bin/pipe -E -C 200 -L -S -W -N pipe_sst1 -s 1 -I 500 -x sock -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_sst1      1   1     53.52482          199        0      200 st sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     49.67457                49.67457
#                    max     68.37409                62.92001
#                   mean     54.31987                54.13559
#                 median     53.55425                53.52482
#                 stddev      3.41643                 3.08620
#         standard error      0.24038                 0.21877
#   99% confidence level      0.55912                 0.50887
#                   skew      1.07904                 0.69447
#               kurtosis      1.22062                -0.40056
#       time correlation     -0.00170                 0.00273
#
#           elasped time      2.26966
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          189
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5     49.00000 |*****                               49.80334
#                 28     50.00000 |********************************    50.61103
#                 26     51.00000 |*****************************       51.41060
#                 27     52.00000 |******************************      52.56031
#                 28     53.00000 |********************************    53.51896
#                 23     54.00000 |**************************          54.51698
#                 10     55.00000 |***********                         55.60878
#                  9     56.00000 |**********                          56.39600
#                 13     57.00000 |**************                      57.42330
#                 11     58.00000 |************                        58.47027
#                  9     59.00000 |**********                          59.33872
#
#                 10        > 95% |***********                         61.12558
#
#        mean of 95%     53.76575
#          95th %ile     59.73921
 for      2.29009 seconds
Running:           pipe_smt1# bin/pipe -E -C 200 -L -S -W -N pipe_smt1 -s 1 -I 2000 -x sock -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smt1      1   1    288.99442          202        0       50 mt sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    256.77426               256.77426
#                    max    323.19602               323.19602
#                   mean    290.03538               290.03538
#                 median    288.99442               288.99442
#                 stddev     13.25005                13.25005
#         standard error      0.93227                 0.93227
#   99% confidence level      2.16846                 2.16846
#                   skew      0.24428                 0.24428
#               kurtosis     -0.30795                -0.30795
#       time correlation     -0.02310                -0.02310
#
#           elasped time      3.17048
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          199
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    256.00000 |*                                  256.77426
#                  0    258.00000 |                                           -
#                  1    260.00000 |*                                  260.89586
#                  1    262.00000 |*                                  263.25618
#                  1    264.00000 |*                                  265.41682
#                  2    266.00000 |***                                267.16530
#                  5    268.00000 |*********                          268.85234
#                  4    270.00000 |*******                            271.42514
#                  7    272.00000 |*************                      272.56946
#                  9    274.00000 |****************                   275.14823
#                  8    276.00000 |***************                    277.03090
#                  8    278.00000 |***************                    279.28882
#                  9    280.00000 |****************                   280.95090
#                 15    282.00000 |****************************       282.90879
#                  8    284.00000 |***************                    285.08786
#                 17    286.00000 |********************************   287.12652
#                 11    288.00000 |********************               288.85618
#                  9    290.00000 |****************                   290.57991
#                 11    292.00000 |********************               292.88748
#                 12    294.00000 |**********************             294.84231
#                 10    296.00000 |******************                 297.14648
#                  6    298.00000 |***********                        298.98098
#                  6    300.00000 |***********                        300.97181
#                  9    302.00000 |****************                   303.16658
#                  9    304.00000 |****************                   304.85163
#                  4    306.00000 |*******                            306.78514
#                  5    308.00000 |*********                          309.13138
#                  2    310.00000 |***                                311.01554
#                  1    312.00000 |*                                  312.97650
#
#                 11        > 95% |********************               318.53915
#
#        mean of 95%    288.39380
#          95th %ile    313.49362
 for      3.18580 seconds
Running:           pipe_smp1# bin/pipe -E -C 200 -L -S -W -N pipe_smp1 -s 1 -I 2000 -x sock -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smp1      1   1    287.21742          202        0       50 mp sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    255.99566               255.99566
#                    max    323.45678               323.45678
#                   mean    287.47844               287.47844
#                 median    287.21742               287.21742
#                 stddev     12.46565                12.46565
#         standard error      0.87708                 0.87708
#   99% confidence level      2.04009                 2.04009
#                   skew      0.00435                 0.00435
#               kurtosis     -0.16824                -0.16824
#       time correlation     -0.04032                -0.04032
#
#           elasped time      3.55381
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          217
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    254.00000 |*                                  255.99566
#                  1    256.00000 |*                                  257.39854
#                  2    258.00000 |***                                258.91662
#                  0    260.00000 |                                           -
#                  1    262.00000 |*                                  262.55438
#                  4    264.00000 |*******                            264.96718
#                  3    266.00000 |*****                              266.50190
#                  7    268.00000 |************                       268.70204
#                  3    270.00000 |*****                              271.13550
#                  3    272.00000 |*****                              273.51289
#                 11    274.00000 |*******************                275.04997
#                  6    276.00000 |**********                         277.12675
#                 10    278.00000 |*****************                  279.10222
#                 18    280.00000 |********************************   280.89194
#                 13    282.00000 |***********************            283.00248
#                 12    284.00000 |*********************              284.62627
#                 15    286.00000 |**************************         287.17100
#                  7    288.00000 |************                       288.92092
#                  6    290.00000 |**********                         290.93625
#                 14    292.00000 |************************           293.02569
#                 14    294.00000 |************************           294.97056
#                  7    296.00000 |************                       297.08000
#                 10    298.00000 |*****************                  299.09531
#                  9    300.00000 |****************                   301.01127
#                  8    302.00000 |**************                     303.12718
#                  6    304.00000 |**********                         305.08793
#
#                 11        > 95% |*******************                311.81437
#
#        mean of 95%    286.07689
#          95th %ile    306.03342
 for      3.56628 seconds
Running:          pipe_sst4k# bin/pipe -E -C 200 -L -S -W -N pipe_sst4k -s 4k -I 500 -x sock -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_sst4k     1   1     73.29448          197        0      200 st sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     69.70409                69.70409
#                    max    103.08393                80.45352
#                   mean     74.09596                73.72764
#                 median     73.35976                73.29448
#                 stddev      3.53197                 2.42568
#         standard error      0.24851                 0.17282
#   99% confidence level      0.57803                 0.40199
#                   skew      3.47051                 0.78534
#               kurtosis     22.17132                 0.08180
#       time correlation     -0.01472                -0.00740
#
#           elasped time      3.08017
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          175
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  4     69.00000 |***                                 69.79944
#                 14     70.00000 |************                        70.58354
#                 37     71.00000 |********************************    71.57441
#                 33     72.00000 |****************************        72.45093
#                 32     73.00000 |***************************         73.43901
#                 25     74.00000 |*********************               74.44485
#                 15     75.00000 |************                        75.50752
#                 16     76.00000 |*************                       76.33505
#                  7     77.00000 |******                              77.56127
#                  4     78.00000 |***                                 78.26281
#
#                 10        > 95% |********                            79.67221
#
#        mean of 95%     73.40975
#          95th %ile     78.52969
 for      3.09418 seconds
Running:          pipe_smt4k# bin/pipe -E -C 200 -L -S -W -N pipe_smt4k -s 4k -I 2000 -x sock -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smt4k     1   1    352.69816          199        0       50 mt sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    248.11704               334.83448
#                    max    400.25784               384.18104
#                   mean    353.75070               353.85281
#                 median    353.13848               352.69816
#                 stddev     13.65772                10.69877
#         standard error      0.96095                 0.75842
#   99% confidence level      2.23518                 1.76407
#                   skew     -1.69472                 0.57694
#               kurtosis     16.80726                -0.04694
#       time correlation      0.00874                -0.00395
#
#           elasped time      3.83349
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          164
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  3    334.00000 |*****                              335.23555
#                  3    336.00000 |*****                              337.30232
#                 10    338.00000 |*****************                  339.27250
#                 14    340.00000 |************************           341.07576
#                 14    342.00000 |************************           342.71233
#                  6    344.00000 |**********                         345.06595
#                 12    346.00000 |*********************              347.05592
#                 14    348.00000 |************************           349.32042
#                 17    350.00000 |******************************     351.13656
#                 15    352.00000 |**************************         352.92515
#                 18    354.00000 |********************************   355.18591
#                 10    356.00000 |*****************                  357.06910
#                 16    358.00000 |****************************       359.27928
#                  7    360.00000 |************                       360.73729
#                  7    362.00000 |************                       363.20952
#                 10    364.00000 |*****************                  365.12235
#                  1    366.00000 |*                                  366.22008
#                  1    368.00000 |*                                  368.63672
#                  7    370.00000 |************                       371.15283
#                  4    372.00000 |*******                            372.34744
#
#                 10        > 95% |*****************                  379.09125
#
#        mean of 95%    352.51744
#          95th %ile    374.07416
 for      3.84208 seconds
Running:          pipe_smp4k# bin/pipe -E -C 200 -L -S -W -N pipe_smp4k -s 4k -I 2000 -x sock -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_smp4k     1   1    350.05626          197        0       50 mp sock
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    249.15642               327.01626
#                    max    389.65946               381.51866
#                   mean    351.27741               351.53997
#                 median    350.07674               350.05626
#                 stddev     13.87212                10.34650
#         standard error      0.97604                 0.73716
#   99% confidence level      2.27027                 1.71463
#                   skew     -1.84307                 0.48196
#               kurtosis     14.69018                 0.14984
#       time correlation      0.02032                 0.02329
#
#           elasped time      4.23503
#      number of samples          197
#     number of outliers            5
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    326.00000 |*                                  327.01626
#                  3    328.00000 |****                               329.10181
#                  1    330.00000 |*                                  330.07802
#                  1    332.00000 |*                                  332.37690
#                  2    334.00000 |**                                 335.67674
#                  3    336.00000 |****                               337.03610
#                 10    338.00000 |*************                      339.22080
#                  7    340.00000 |*********                          341.29594
#                 16    342.00000 |*********************              343.13850
#                 17    344.00000 |**********************             345.01216
#                 24    346.00000 |********************************   347.20826
#                 13    348.00000 |*****************                  348.86251
#                 18    350.00000 |************************           350.88513
#                 13    352.00000 |*****************                  353.13417
#                 12    354.00000 |****************                   354.73722
#                  8    356.00000 |**********                         356.96634
#                  7    358.00000 |*********                          359.07112
#                  7    360.00000 |*********                          360.71391
#                  9    362.00000 |************                       362.96150
#                  4    364.00000 |*****                              365.30746
#                  7    366.00000 |*********                          367.02540
#                  3    368.00000 |****                               368.66575
#                  1    370.00000 |*                                  370.21882
#
#                 10        > 95% |*************                      375.81959
#
#        mean of 95%    350.24159
#          95th %ile    370.95610
 for      4.24606 seconds
 
Running:           pipe_tst1# bin/pipe -E -C 200 -L -S -W -N pipe_tst1 -s 1 -I 500 -x tcp -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tst1      1   1    139.08884          195        0      200 st  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    132.54420               132.54420
#                    max    162.34389               146.31445
#                   mean    139.86141               139.31671
#                 median    139.21301               139.08884
#                 stddev      3.92822                 2.53679
#         standard error      0.27639                 0.18166
#   99% confidence level      0.64288                 0.42255
#                   skew      2.66987                 0.51352
#               kurtosis     11.01939                 0.20441
#       time correlation     -0.00497                -0.00105
#
#           elasped time      5.90945
#      number of samples          195
#     number of outliers            7
#      getnsecs overhead          215
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    132.00000 |*                                  132.54420
#                  1    133.00000 |*                                  133.90357
#                  1    134.00000 |*                                  134.64469
#                 10    135.00000 |********                           135.34101
#                 17    136.00000 |**************                     136.53773
#                 37    137.00000 |********************************   137.54025
#                 29    138.00000 |*************************          138.59847
#                 32    139.00000 |***************************        139.50240
#                 24    140.00000 |********************               140.40346
#                 16    141.00000 |*************                      141.40469
#                  7    142.00000 |******                             142.46805
#                  8    143.00000 |******                             143.40981
#                  2    144.00000 |*                                  144.03668
#
#                 10        > 95% |********                           145.39067
#
#        mean of 95%    138.98839
#          95th %ile    144.83477
 for      5.92105 seconds
Running:           pipe_tmt1# bin/pipe -E -C 200 -L -S -W -N pipe_tmt1 -s 1 -I 2000 -x tcp -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmt1      1   1    376.81752          202        0       50 mt  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    346.25624               346.25624
#                    max    417.27576               417.27576
#                   mean    376.42219               376.42219
#                 median    376.81752               376.81752
#                 stddev     13.73078                13.73078
#         standard error      0.96609                 0.96609
#   99% confidence level      2.24714                 2.24714
#                   skew      0.29978                 0.29978
#               kurtosis     -0.17236                -0.17236
#       time correlation      0.00661                 0.00661
#
#           elasped time      4.22848
#      number of samples          202
#     number of outliers            0
#      getnsecs overhead          212
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2    346.00000 |****                               347.12664
#                  0    348.00000 |                                           -
#                  3    350.00000 |******                             351.10829
#                  1    352.00000 |**                                 353.93624
#                  7    354.00000 |****************                   354.92367
#                  5    356.00000 |***********                        357.15262
#                  8    358.00000 |******************                 359.17400
#                  6    360.00000 |*************                      360.82691
#                  7    362.00000 |****************                   363.21222
#                 12    364.00000 |***************************        365.05816
#                 10    366.00000 |**********************             367.07467
#                 11    368.00000 |*************************          368.92155
#                  7    370.00000 |****************                   371.35741
#                  6    372.00000 |*************                      373.16269
#                 11    374.00000 |*************************          374.92824
#                 14    376.00000 |********************************   376.96344
#                 12    378.00000 |***************************        378.91459
#                  9    380.00000 |********************               381.02218
#                 14    382.00000 |********************************   382.89423
#                  9    384.00000 |********************               384.95946
#                 12    386.00000 |***************************        387.01400
#                 10    388.00000 |**********************             388.65496
#                  4    390.00000 |*********                          391.40184
#                  4    392.00000 |*********                          393.14648
#                  1    394.00000 |**                                 394.27160
#                  3    396.00000 |******                             396.81624
#                  1    398.00000 |**                                 398.87448
#                  2    400.00000 |****                               401.15544
#
#                 11        > 95% |*************************          407.16329
#
#        mean of 95%    374.65176
#          95th %ile    403.03192
 for      4.24155 seconds
Running:           pipe_tmp1# bin/pipe -E -C 200 -L -S -W -N pipe_tmp1 -s 1 -I 2000 -x tcp -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmp1      1   1    373.93580          200        0       50 mp  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    309.79756               343.19532
#                    max    428.39724               411.19404
#                   mean    374.46656               374.52025
#                 median    373.93580               373.93580
#                 stddev     14.54087                13.33896
#         standard error      1.02309                 0.94321
#   99% confidence level      2.37971                 2.19390
#                   skew      0.08413                 0.33736
#               kurtosis      1.90700                -0.10527
#       time correlation      0.01212                 0.01472
#
#           elasped time      4.63609
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          170
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    342.00000 |*                                  343.19532
#                  0    344.00000 |                                           -
#                  1    346.00000 |*                                  346.43628
#                  3    348.00000 |****                               349.48951
#                  1    350.00000 |*                                  350.91628
#                  5    352.00000 |********                           353.39334
#                  5    354.00000 |********                           354.99590
#                  1    356.00000 |*                                  357.53644
#                  7    358.00000 |***********                        359.07098
#                 12    360.00000 |*******************                360.78935
#                 13    362.00000 |********************               362.82776
#                  7    364.00000 |***********                        364.98970
#                 10    366.00000 |****************                   366.69714
#                  6    368.00000 |*********                          369.37900
#                 16    370.00000 |*************************          370.84012
#                 13    372.00000 |********************               372.59869
#                  8    374.00000 |************                       375.15436
#                 20    376.00000 |********************************   377.04978
#                  8    378.00000 |************                       379.33228
#                 10    380.00000 |****************                   380.91436
#                  9    382.00000 |**************                     382.80876
#                  8    384.00000 |************                       385.09228
#                  3    386.00000 |****                               387.26316
#                  4    388.00000 |******                             389.00524
#                  8    390.00000 |************                       390.96364
#                  6    392.00000 |*********                          392.60673
#                  2    394.00000 |***                                394.76652
#                  2    396.00000 |***                                396.96812
#                  1    398.00000 |*                                  398.15340
#
#                 10        > 95% |****************                   404.55903
#
#        mean of 95%    372.93926
#          95th %ile    398.55788
 for      4.64759 seconds
Running:          pipe_tst4k# bin/pipe -E -C 200 -L -S -W -N pipe_tst4k -s 4k -I 500 -x tcp -m st 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tst4k     1   1    118.83441          196        0      200 st  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    114.32881               114.32881
#                    max    141.61457               127.58961
#                   mean    119.68074               119.27645
#                 median    119.12369               118.83441
#                 stddev      3.72104                 2.85628
#         standard error      0.26181                 0.20402
#   99% confidence level      0.60897                 0.47455
#                   skew      1.92592                 0.69123
#               kurtosis      6.58365                 0.06649
#       time correlation     -0.00076                 0.00302
#
#           elasped time      5.07585
#      number of samples          196
#     number of outliers            6
#      getnsecs overhead          158
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  5    114.00000 |*****                              114.76708
#                 16    115.00000 |*****************                  115.44513
#                 25    116.00000 |**************************         116.58171
#                 27    117.00000 |****************************       117.44912
#                 27    118.00000 |****************************       118.42182
#                 30    119.00000 |********************************   119.60736
#                 16    120.00000 |*****************                  120.47097
#                 19    121.00000 |********************               121.62191
#                 12    122.00000 |************                       122.40785
#                  5    123.00000 |*****                              123.34155
#                  2    124.00000 |**                                 124.34417
#                  2    125.00000 |**                                 125.33169
#
#                 10        > 95% |**********                         126.26430
#
#        mean of 95%    118.90076
#          95th %ile    125.64401
 for      5.08677 seconds
Running:          pipe_tmt4k# bin/pipe -E -C 200 -L -S -W -N pipe_tmt4k -s 4k -I 2000 -x tcp -m mt 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmt4k     1   1    386.33556          200        0       50 mt  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    359.73716               359.73716
#                    max    470.93332               421.91444
#                   mean    388.19415               387.57744
#                 median    386.43284               386.33556
#                 stddev     14.28181                12.76531
#         standard error      1.00486                 0.90264
#   99% confidence level      2.33732                 2.09955
#                   skew      1.21691                 0.34319
#               kurtosis      4.41327                -0.55270
#       time correlation     -0.00221                 0.00567
#
#           elasped time      4.34584
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          214
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    358.00000 |**                                 359.73716
#                  0    360.00000 |                                           -
#                  2    362.00000 |****                               362.79380
#                  1    364.00000 |**                                 365.89652
#                  2    366.00000 |****                               367.68340
#                  8    368.00000 |******************                 369.30132
#                  6    370.00000 |*************                      370.86633
#                 11    372.00000 |*************************          372.83459
#                 11    374.00000 |*************************          374.82627
#                 11    376.00000 |*************************          377.12003
#                  6    378.00000 |*************                      378.95423
#                 11    380.00000 |*************************          381.02240
#                 14    382.00000 |********************************   382.83933
#                 13    384.00000 |*****************************      384.91614
#                 13    386.00000 |*****************************      386.91333
#                 12    388.00000 |***************************        389.15284
#                 12    390.00000 |***************************        390.95721
#                 10    392.00000 |**********************             392.82772
#                  6    394.00000 |*************                      395.18207
#                  6    396.00000 |*************                      396.79060
#                  6    398.00000 |*************                      399.02463
#                  7    400.00000 |****************                   400.76957
#                  3    402.00000 |******                             402.94143
#                  5    404.00000 |***********                        404.67130
#                  5    406.00000 |***********                        406.83706
#                  7    408.00000 |****************                   408.52930
#                  1    410.00000 |**                                 410.01556
#
#                 10        > 95% |**********************             414.11412
#
#        mean of 95%    386.18077
#          95th %ile    410.55828
 for      4.35762 seconds
Running:          pipe_tmp4k# bin/pipe -E -C 200 -L -S -W -N pipe_tmp4k -s 4k -I 2000 -x tcp -m mp 
             prc thr   usecs/call      samples   errors cnt/samp md xprt
pipe_tmp4k     1   1    380.96058          199        0       50 mp  tcp
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min    355.71386               355.71386
#                    max    441.55578               418.19322
#                   mean    384.10345               383.33634
#                 median    381.47770               380.96058
#                 stddev     13.72478                12.28269
#         standard error      0.96567                 0.87070
#   99% confidence level      2.24615                 2.02524
#                   skew      0.98952                 0.47273
#               kurtosis      1.75234                -0.18181
#       time correlation     -0.01416                -0.00089
#
#           elasped time      4.75476
#      number of samples          199
#     number of outliers            3
#      getnsecs overhead          163
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1    354.00000 |*                                  355.71386
#                  1    356.00000 |*                                  357.92058
#                  0    358.00000 |                                           -
#                  2    360.00000 |***                                360.10682
#                  2    362.00000 |***                                363.59610
#                  4    364.00000 |*******                            365.24730
#                  6    366.00000 |***********                        366.65359
#                  5    368.00000 |*********                          368.87431
#                 14    370.00000 |**************************         371.03985
#                 13    372.00000 |************************           372.89658
#                 12    374.00000 |**********************             375.23941
#                 17    376.00000 |********************************   377.11817
#                 14    378.00000 |**************************         379.21100
#                 14    380.00000 |**************************         380.90609
#                 15    382.00000 |****************************       383.01404
#                  2    384.00000 |***                                385.70682
#                  8    386.00000 |***************                    387.06042
#                 10    388.00000 |******************                 389.16845
#                 14    390.00000 |**************************         391.04917
#                  5    392.00000 |*********                          392.91578
#                  7    394.00000 |*************                      394.55052
#                  9    396.00000 |****************                   397.12328
#                  4    398.00000 |*******                            398.68474
#                  2    400.00000 |***                                400.84666
#                  5    402.00000 |*********                          403.09946
#                  2    404.00000 |***                                404.75578
#                  1    406.00000 |*                                  406.25338
#
#                 10        > 95% |******************                 411.21568
#
#        mean of 95%    381.86124
#          95th %ile    406.39674
 for      4.77092 seconds
 
Running:         conn_accept# bin/connection -E -C 200 -L -S -W -N conn_accept -B 256 -a 
             prc thr   usecs/call      samples   errors cnt/samp 
conn_accept    1   1     63.98824          194        0      256 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     61.81924                61.81924
#                    max     73.09324                66.32324
#                   mean     64.19423                63.97531
#                 median     64.02224                63.98824
#                 stddev      1.50118                 0.93670
#         standard error      0.10562                 0.06725
#   99% confidence level      0.24568                 0.15643
#                   skew      2.85777                 0.31854
#               kurtosis     12.86733                -0.37425
#       time correlation     -0.00306                -0.00214
#
#           elasped time     23.89861
#      number of samples          194
#     number of outliers            8
#      getnsecs overhead          195
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  1     61.00000 |*                                   61.81924
#                 28     62.00000 |************                        62.69145
#                 71     63.00000 |*******************************     63.47277
#                 72     64.00000 |********************************    64.47946
#                 12     65.00000 |*****                               65.36782
#
#                 10        > 95% |****                                66.05274
#
#        mean of 95%     63.86240
#          95th %ile     65.75724
 for     23.90843 seconds
 
Running:           close_tcp# bin/close_tcp -E -C 200 -L -S -W -N close_tcp -B 32 
             prc thr   usecs/call      samples   errors cnt/samp 
close_tcp      1   1     45.14650          200        0       32 
#
# STATISTICS         usecs/call (raw)          usecs/call (outliers removed)
#                    min     39.58650                39.58650
#                    max     86.61850                77.05850
#                   mean     50.26915                49.91018
#                 median     45.33850                45.14650
#                 stddev     10.34547                 9.74791
#         standard error      0.72790                 0.68928
#   99% confidence level      1.69311                 1.60327
#                   skew      1.24281                 1.11085
#               kurtosis      0.69577                 0.05035
#       time correlation     -0.01471                -0.00989
#
#           elasped time      3.14695
#      number of samples          200
#     number of outliers            2
#      getnsecs overhead          176
#
# DISTRIBUTION
#             counts   usecs/call                                         means
#                  2     38.00000 |*                                   39.63450
#                 30     40.00000 |******************                  41.28463
#                 51     42.00000 |********************************    42.95717
#                 27     44.00000 |****************                    44.92250
#                 14     46.00000 |********                            46.73164
#                  4     48.00000 |**                                  48.51050
#                  5     50.00000 |***                                 51.03290
#                 10     52.00000 |******                              53.06010
#                  7     54.00000 |****                                55.08136
#                  6     56.00000 |***                                 56.93450
#                  6     58.00000 |***                                 58.84117
#                  9     60.00000 |*****                               60.82206
#                  4     62.00000 |**                                  63.48650
#                  6     64.00000 |***                                 65.37717
#                  4     66.00000 |**                                  66.90850
#                  4     68.00000 |**                                  69.30850
#                  1     70.00000 |*                                   70.12250
#
#                 10        > 95% |******                              73.76330
#
#        mean of 95%     48.65475
#          95th %ile     70.30650
 for      3.16553 seconds